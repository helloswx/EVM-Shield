{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.24"
        },
        {
            "type": "ContractDefinition",
            "name": "pyramidMKII",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "owner",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StructDefinition",
                    "name": "blockinfo",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "outstanding",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "dividend",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "value",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "index",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "debtinfo",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "idx",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "pending",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "initial",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "account",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ebalance",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "debtinfo"
                                }
                            },
                            "name": "owed",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "blksze",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "surplus",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "IDX",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "blockinfo"
                                }
                            },
                            "name": "blockData",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "account"
                                }
                            },
                            "name": "balances",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bytes32"
                            },
                            "name": "consul_nme",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "consul_price",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "consul",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "patrician",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "standard",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "PYRAMIDMKII"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "PYRAMIDMKII"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "PYRAMIDMKII"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "PYRAMIDMKII"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "symbol",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "PM2"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "PM2"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                            },
                            "name": "decimals",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "blksze"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": "ether"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "consul"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "patrician"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "addSurplus",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "surplus"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "callSurplus",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "surplus"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "blksze"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "not enough surplus"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "blockData"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "blksze"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "surplus"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "blksze"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "nextBlock"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "owedAt",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "blk",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "blk"
                                            }
                                        },
                                        "memberName": "idx"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "blk"
                                            }
                                        },
                                        "memberName": "pending"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "blk"
                                            }
                                        },
                                        "memberName": "initial"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setBlockSze",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sze",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "owner"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_sze"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": "ether"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "error blksze"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "blksze"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_sze"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdraw",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "memberName": "ebalance"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "not enough divs claimed"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "sval",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "balances"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "memberName": "ebalance"
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "sval"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "event_withdraw"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "sval"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "chkConsul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "addr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "usrmsg",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "consul_price"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Identifier",
                                    "name": "val"
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "val"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "consul"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "val"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "consul"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "addr"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "consul_price"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "val"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "consul_nme"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "usrmsg"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "addr"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "pending"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "addr"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "initial"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "blockData"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "outstanding"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "2",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "event_consul"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "val"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "usrmsg"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "Identifier",
                                    "name": "val"
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "nextBlock",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "blockData"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "blksze"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "surplus"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "blockData"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "IDX"
                                                            }
                                                        },
                                                        "memberName": "value"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "blksze"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "blockData"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "IDX"
                                                        }
                                                    },
                                                    "memberName": "value"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "blksze"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "IDX"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "-=",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "blockData"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "IDX"
                                                            }
                                                        },
                                                        "memberName": "outstanding"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "blockData"
                                                                            },
                                                                            "index": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "IDX"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "1",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "memberName": "outstanding"
                                                                    },
                                                                    "right": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "blockData"
                                                                            },
                                                                            "index": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "IDX"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "1",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        },
                                                                        "memberName": "dividend"
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "100",
                                                            "subdenomination": "ether"
                                                        }
                                                    }
                                                }
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "blockData"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "IDX"
                                                        }
                                                    },
                                                    "memberName": "dividend"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "blksze"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "100",
                                                                    "subdenomination": "ether"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "blockData"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "IDX"
                                                            }
                                                        },
                                                        "memberName": "outstanding"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "IDX"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "blockData"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "IDX"
                                                        }
                                                    },
                                                    "memberName": "index"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "IDX"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "blockData"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "IDX"
                                                        }
                                                    },
                                                    "memberName": "outstanding"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "blockData"
                                                        },
                                                        "index": {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "IDX"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "memberName": "outstanding"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "%",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "IDX"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "200",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "!=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "IDX"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "blksze"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": "ether"
                                                    }
                                                }
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "EmitStatement",
                                            "eventCall": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "event_divblk"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "IDX"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "pyramid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "addr",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "usrmsg",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "chkConsul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "addr"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "val"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "usrmsg"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "mval",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "10",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "tval",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "val"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "consul"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "val"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "7",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "100",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "patrician"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "50",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "patrician"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "addr"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "nsurp",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Conditional",
                                    "condition": {
                                        "type": "Conditional",
                                        "condition": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "mval"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "blksze"
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "TrueExpression": {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "blksze"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "mval"
                                            }
                                        },
                                        "FalseExpression": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "surplus"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "blksze"
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    },
                                    "TrueExpression": {
                                        "type": "Identifier",
                                        "name": "surplus"
                                    },
                                    "FalseExpression": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "nsurp"
                                    },
                                    "right": {
                                        "type": "Conditional",
                                        "condition": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": ">=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "surplus"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "nsurp"
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "TrueExpression": {
                                            "type": "Identifier",
                                            "name": "nsurp"
                                        },
                                        "FalseExpression": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "mval"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "nsurp"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "surplus"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "nsurp"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "blockData"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "mval"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "blockData"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "outstanding"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "tval"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "addr"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "idx"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "IDX"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "addr"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "pending"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "tval"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "balances"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "addr"
                                                    }
                                                },
                                                "memberName": "owed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "IDX"
                                            }
                                        },
                                        "memberName": "initial"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "tval"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "nextBlock"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "event_deposit"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "val"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "usrmsg"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "deposit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "usrmsg",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "value"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0.001",
                                                "subdenomination": "ether"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "not enough ether"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "pyramid"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "usrmsg"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "reinvest",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "usrmsg",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "balances"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "memberName": "ebalance"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0.001",
                                                    "subdenomination": "ether"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "no funds"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "balances"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "memberName": "ebalance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "val"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "pyramid"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "val"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "usrmsg"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mine1000",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "blk",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "balances"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "memberName": "owed"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "blk"
                                                        }
                                                    },
                                                    "memberName": "idx"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "IDX"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "blk"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "IDX"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "current block"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "balances"
                                                            },
                                                            "index": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            }
                                                        },
                                                        "memberName": "owed"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "blk"
                                                    }
                                                },
                                                "memberName": "pending"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0.001",
                                                "subdenomination": "ether"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "no more divs"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "cdiv",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1000",
                                        "subdenomination": null
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "cdiv"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "balances"
                                                                                },
                                                                                "index": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "msg"
                                                                                    },
                                                                                    "memberName": "sender"
                                                                                }
                                                                            },
                                                                            "memberName": "owed"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "blk"
                                                                        }
                                                                    },
                                                                    "memberName": "pending"
                                                                },
                                                                "right": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "blockData"
                                                                        },
                                                                        "index": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "balances"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "msg"
                                                                                            },
                                                                                            "memberName": "sender"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "owed"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "blk"
                                                                                }
                                                                            },
                                                                            "memberName": "idx"
                                                                        }
                                                                    },
                                                                    "memberName": "dividend"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": "ether"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "cdiv"
                                                },
                                                "right": {
                                                    "type": "Conditional",
                                                    "condition": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "cdiv"
                                                                },
                                                                "right": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "balances"
                                                                                },
                                                                                "index": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "msg"
                                                                                    },
                                                                                    "memberName": "sender"
                                                                                }
                                                                            },
                                                                            "memberName": "owed"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "blk"
                                                                        }
                                                                    },
                                                                    "memberName": "pending"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "TrueExpression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "balances"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "msg"
                                                                        },
                                                                        "memberName": "sender"
                                                                    }
                                                                },
                                                                "memberName": "owed"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "blk"
                                                            }
                                                        },
                                                        "memberName": "pending"
                                                    },
                                                    "FalseExpression": {
                                                        "type": "Identifier",
                                                        "name": "cdiv"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "balances"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "memberName": "owed"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "blk"
                                                        }
                                                    },
                                                    "memberName": "idx"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "balances"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "memberName": "owed"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "blk"
                                                        }
                                                    },
                                                    "memberName": "pending"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "cdiv"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "balances"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "memberName": "ebalance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "cdiv"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "balances"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "msg"
                                                                        },
                                                                        "memberName": "sender"
                                                                    }
                                                                },
                                                                "memberName": "owed"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "blk"
                                                            }
                                                        },
                                                        "memberName": "pending"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">=",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "balances"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "msg"
                                                                        },
                                                                        "memberName": "sender"
                                                                    }
                                                                },
                                                                "memberName": "owed"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "blk"
                                                            }
                                                        },
                                                        "memberName": "idx"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "IDX"
                                                    }
                                                }
                                            },
                                            "TrueBody": null,
                                            "FalseBody": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "EventDefinition",
                    "name": "event_withdraw",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "addr",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "event_deposit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "umsg",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "event_consul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "val",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes32"
                                },
                                "name": "umsg",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "event_divblk",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "idx",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                }
            ],
            "kind": "contract"
        }
    ]
}