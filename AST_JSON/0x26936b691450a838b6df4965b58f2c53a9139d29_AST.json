{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.25"
        },
        {
            "type": "ContractDefinition",
            "name": "ERC721",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "total",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "ownerOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "takeOwnership",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "EventDefinition",
                    "name": "Transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "tokenId",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Approval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "approved",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "tokenId",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "FairBankFomo",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "ERC721"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                    },
                    "libraryName": "SafeMath"
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "developerAddr",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xbC817A495f0114755Da5305c5AA84fc5ca7ebaBd",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xbC817A495f0114755Da5305c5AA84fc5ca7ebaBd",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "fairProfitContract",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x53a39eeF083c4A91e36145176Cc9f52bE29B7288",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x53a39eeF083c4A91e36145176Cc9f52bE29B7288",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "FairDAPP - Bank Simulator - Fomo"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "FairDAPP - Bank Simulator - Fomo"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "symbol",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "FBankFomo"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "FBankFomo"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "stageDuration",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "3600",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "3600",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "standardProtectRatio",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "57",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "57",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "modifyCountdown",
                            "expression": {
                                "type": "BooleanLiteral",
                                "value": false
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BooleanLiteral",
                        "value": false
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startTime",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1539997200",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1539997200",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "cardTime",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1539993600",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1539993600",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "rId",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "sId",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FBankdatasets.Round"
                                }
                            },
                            "name": "round",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "UserDefinedTypeName",
                                        "namePath": "FBankdatasets.Stage"
                                    }
                                }
                            },
                            "name": "stage",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                }
                            },
                            "name": "player",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                }
                            },
                            "name": "playerGoodsList",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                }
                            },
                            "name": "playerWithdrawList",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "FairBankCompute"
                            },
                            "name": "bankCompute",
                            "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "FairBankCompute"
                                },
                                "arguments": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "0xdd033Ff7e98792694F6b358DaEB065d4FF01Bd5A",
                                        "subdenomination": null
                                    }
                                ],
                                "names": []
                            },
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                            "type": "Identifier",
                            "name": "FairBankCompute"
                        },
                        "arguments": [
                            {
                                "type": "NumberLiteral",
                                "number": "0xdd033Ff7e98792694F6b358DaEB065d4FF01Bd5A",
                                "subdenomination": null
                            }
                        ],
                        "names": []
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FBankdatasets.Goods"
                                },
                                "length": null
                            },
                            "name": "goodsList",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FBankdatasets.Card"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "6",
                                    "subdenomination": null
                                }
                            },
                            "name": "cardList",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                }
                            },
                            "name": "cardIndexToApproved",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "ModifierDefinition",
                    "name": "isDeveloperAddr",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "developerAddr"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Permission denied"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "startTimeVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "startTime"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "cardTimeVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "cardTime"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "modifyCountdownVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "modifyCountdown"
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": true
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "this feature is not turned on or has been turned off"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "sId"
                                                    }
                                                },
                                                "memberName": "start"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Can only use the addtime/reduce time functions when game has started"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "senderVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "tx"
                                                },
                                                "memberName": "origin"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "sender does not meet the rules"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "UnaryOperation",
                                    "operator": "!",
                                    "subExpression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "player"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "isPrefix": true
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "player"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "right": {
                                            "type": "BooleanLiteral",
                                            "value": true
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "buyVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1000000000000000",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "developerAddr"
                                                    },
                                                    "memberName": "send"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "value"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "value"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1000000000000000",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "minimum amount is 0.001 ether"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sId"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "25",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tx"
                                                                },
                                                                "memberName": "gasprice"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "25000000000",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sId"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "25",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "value"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": "ether"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "withdrawVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "playerGoodsList"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "user has not purchased the product or has completed the withdrawal"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "ModifierDefinition",
                    "name": "stepSizeVerify",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_stepSize"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "1000000",
                                                "subdenomination": null
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "step size must not exceed 1000000"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "rId"
                                            }
                                        },
                                        "memberName": "start"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "sId"
                                            }
                                        },
                                        "memberName": "start"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "i",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "cardList"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "cardList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "playerAddress"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "fairProfitContract"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "cardList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "amount"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": "ether"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "openModifyCountdown",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "modifyCountdown"
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": false
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Time service is already open"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "modifyCountdown"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "isDeveloperAddr",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "closeModifyCountdown",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "modifyCountdown"
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": true
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Time service is already open"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "modifyCountdown"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": false
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "isDeveloperAddr",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "purchaseCard",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_cId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "_player",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "sender"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "value"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_purchasePrice",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_cId"
                                                    }
                                                },
                                                "memberName": "amount"
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "110",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "!=",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "cardList"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_cId"
                                                            }
                                                        },
                                                        "memberName": "playerAddress"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "address"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "!=",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "cardList"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_cId"
                                                            }
                                                        },
                                                        "memberName": "playerAddress"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_player"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_purchasePrice"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Failed purchase"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardIndexToApproved"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_cId"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "cardIndexToApproved"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_cId"
                                                        }
                                                    },
                                                    "memberName": "send"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "cardList"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "_cId"
                                                                        }
                                                                    },
                                                                    "memberName": "amount"
                                                                },
                                                                "memberName": "mul"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "105",
                                                                    "subdenomination": null
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "100",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "delete",
                                                "subExpression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardIndexToApproved"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_cId"
                                                    }
                                                },
                                                "isPrefix": true
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_cId"
                                                    }
                                                },
                                                "memberName": "playerAddress"
                                            },
                                            "memberName": "send"
                                        },
                                        "arguments": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "cardList"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_cId"
                                                                }
                                                            },
                                                            "memberName": "amount"
                                                        },
                                                        "memberName": "mul"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "NumberLiteral",
                                                            "number": "105",
                                                            "subdenomination": null
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "fairProfitContract"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "cardList"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_cId"
                                                            }
                                                        },
                                                        "memberName": "amount"
                                                    },
                                                    "memberName": "mul"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_purchasePrice"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_player"
                                            },
                                            "memberName": "send"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    "memberName": "sub"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_purchasePrice"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_cId"
                                            }
                                        },
                                        "memberName": "amount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_purchasePrice"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_cId"
                                            }
                                        },
                                        "memberName": "playerAddress"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_player"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "cardTimeVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()startTimeVerify()senderVerify()buyVerify()payablepublic{buyAnalysis(100,standardProtectRatio);}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "buyAnalysis"
                                    },
                                    "arguments": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "100",
                                            "subdenomination": null
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "standardProtectRatio"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "startTimeVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "buyVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buy",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "buyAnalysis"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Conditional",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_stepSize"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueExpression": {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            "FalseExpression": {
                                                "type": "Identifier",
                                                "name": "_stepSize"
                                            }
                                        },
                                        {
                                            "type": "Conditional",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_protectRatio"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueExpression": {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            },
                                            "FalseExpression": {
                                                "type": "Identifier",
                                                "name": "standardProtectRatio"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "startTimeVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "buyVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "stepSizeVerify",
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_stepSize"
                                }
                            ]
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdraw",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "_player",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "sender"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "length": null
                                        },
                                        "name": "_playerGoodsList",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "playerGoodsList"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "_player"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "length",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "_playerGoodsList"
                                    },
                                    "memberName": "length"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_totalAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_withdrawSid",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_reachAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "_finish",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "i",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "delete",
                                    "subExpression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "playerGoodsList"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_player"
                                        }
                                    },
                                    "isPrefix": true
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "length"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_amount"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_withdrawSid"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_reachAmount"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_finish"
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getEarningsAmountByGoodsIndex"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "_playerGoodsList"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_finish"
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "playerWithdrawList"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_player"
                                                                    }
                                                                },
                                                                "memberName": "push"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "_playerGoodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "goodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "_playerGoodsList"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        }
                                                                    }
                                                                },
                                                                "memberName": "withdrawSid"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_withdrawSid"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "goodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "_playerGoodsList"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        }
                                                                    }
                                                                },
                                                                "memberName": "reachAmount"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_reachAmount"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "playerGoodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_player"
                                                                    }
                                                                },
                                                                "memberName": "push"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "_playerGoodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_totalAmount"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_totalAmount"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_amount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_player"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_totalAmount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "startTimeVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "withdrawVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdrawByGid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_gId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "_player",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "sender"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_withdrawSid",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_reachAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "_finish",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_withdrawSid"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_reachAmount"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_finish"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "getEarningsAmountByGoodsIndex"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_gId"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_finish"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ForStatement",
                                            "initExpression": {
                                                "type": "VariableDeclarationStatement",
                                                "variables": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "name": "i",
                                                        "storageLocation": null
                                                    }
                                                ],
                                                "initialValue": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "conditionExpression": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerGoodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        }
                                                    },
                                                    "memberName": "length"
                                                }
                                            },
                                            "loopExpression": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryOperation",
                                                    "operator": "++",
                                                    "subExpression": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "isPrefix": false
                                                }
                                            },
                                            "body": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "playerGoodsList"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_gId"
                                                            }
                                                        },
                                                        "TrueBody": ";",
                                                        "FalseBody": null
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "right": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "playerGoodsList"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_player"
                                                                }
                                                            },
                                                            "memberName": "length"
                                                        }
                                                    },
                                                    {
                                                        "type": "stringLiteral",
                                                        "value": "gid is wrong"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerWithdrawList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        }
                                                    },
                                                    "memberName": "push"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_gId"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerGoodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerGoodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "playerGoodsList"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_player"
                                                                }
                                                            },
                                                            "memberName": "length"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "--",
                                                "subExpression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerGoodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        }
                                                    },
                                                    "memberName": "length"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "goodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_gId"
                                                        }
                                                    },
                                                    "memberName": "withdrawSid"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_withdrawSid"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "goodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_gId"
                                                        }
                                                    },
                                                    "memberName": "reachAmount"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_reachAmount"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_player"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "startTimeVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "withdrawVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "resetTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_rId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "rId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_sId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "sId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "value"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetExpectedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getStageTargetAmount"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_sId"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Conditional",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "<=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "dividendAmount"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_targetExpectedAmount"
                                        }
                                    },
                                    "TrueExpression": {
                                        "type": "Identifier",
                                        "name": "_targetExpectedAmount"
                                    },
                                    "FalseExpression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "dividendAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_targetAmount"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "memberName": "mul"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "88",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_costAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_targetAmount"
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "20",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_costAmount"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "3",
                                        "subdenomination": "ether"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_costAmount"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "3",
                                            "subdenomination": "ether"
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Not enough price"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "start"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "now"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardList"
                                                },
                                                "index": {
                                                    "type": "NumberLiteral",
                                                    "number": "5",
                                                    "subdenomination": null
                                                }
                                            },
                                            "memberName": "playerAddress"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "developerAddr"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_costAmount"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "memberName": "send"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    "memberName": "sub"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_costAmount"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "FalseBody": null
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "modifyCountdownVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "reduceTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_rId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "rId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_sId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "sId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "value"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetExpectedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getStageTargetAmount"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_sId"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Conditional",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "<=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "dividendAmount"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_targetExpectedAmount"
                                        }
                                    },
                                    "TrueExpression": {
                                        "type": "Identifier",
                                        "name": "_targetExpectedAmount"
                                    },
                                    "FalseExpression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "dividendAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_targetAmount"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "memberName": "mul"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "88",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_costAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_targetAmount"
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_costAmount"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "3",
                                        "subdenomination": "ether"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_costAmount"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "3",
                                            "subdenomination": "ether"
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Not enough price"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "start"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "stageDuration"
                                            }
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "900",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardList"
                                                },
                                                "index": {
                                                    "type": "NumberLiteral",
                                                    "number": "5",
                                                    "subdenomination": null
                                                }
                                            },
                                            "memberName": "playerAddress"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "developerAddr"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_costAmount"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_costAmount"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "memberName": "send"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    "memberName": "sub"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_costAmount"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "FalseBody": null
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "modifyCountdownVerify",
                            "arguments": []
                        },
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyAnalysis",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_rId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "rId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_sId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "sId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetExpectedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getStageTargetAmount"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_sId"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Conditional",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "<=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "dividendAmount"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "_targetExpectedAmount"
                                        }
                                    },
                                    "TrueExpression": {
                                        "type": "Identifier",
                                        "name": "_targetExpectedAmount"
                                    },
                                    "FalseExpression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "dividendAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_targetAmount"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "memberName": "mul"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "88",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_stageTargetBalance",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Conditional",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "amount"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueExpression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_targetAmount"
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    }
                                                },
                                                "memberName": "amount"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "FalseExpression": {
                                        "type": "Identifier",
                                        "name": "_targetAmount"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "now"
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "stage"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_rId"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_sId"
                                                        }
                                                    },
                                                    "memberName": "start"
                                                },
                                                "memberName": "add"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "stageDuration"
                                                }
                                            ],
                                            "names": []
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_targetAmount"
                                        },
                                        "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "amount"
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "endRound"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "rId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "sId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "stage"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_rId"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_sId"
                                                        }
                                                    },
                                                    "memberName": "start"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "now"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_targetExpectedAmount"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getStageTargetAmount"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_sId"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "right": {
                                                    "type": "Conditional",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "stage"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            },
                                                            "memberName": "dividendAmount"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_targetExpectedAmount"
                                                        }
                                                    },
                                                    "TrueExpression": {
                                                        "type": "Identifier",
                                                        "name": "_targetExpectedAmount"
                                                    },
                                                    "FalseExpression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "stage"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            }
                                                        },
                                                        "memberName": "dividendAmount"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_targetAmount"
                                                            },
                                                            "memberName": "mul"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "100",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "88",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_stageTargetBalance"
                                                },
                                                "right": {
                                                    "type": "Conditional",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "stage"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            },
                                                            "memberName": "amount"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "TrueExpression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_targetAmount"
                                                            },
                                                            "memberName": "sub"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "stage"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "_rId"
                                                                        }
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_sId"
                                                                    }
                                                                },
                                                                "memberName": "amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "FalseExpression": {
                                                        "type": "Identifier",
                                                        "name": "_targetAmount"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_stageTargetBalance"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "buyDataRecord"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_targetAmount"
                                            },
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "value"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_stepSize"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "FalseBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "multiStake"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "value"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_stepSize"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_targetAmount"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "_stageTargetBalance"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "Identifier",
                                                                                        "name": "round"
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_rId"
                                                                                    }
                                                                                },
                                                                                "memberName": "jackpotAmount"
                                                                            },
                                                                            "memberName": "add"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "/",
                                                                                "left": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "IndexAccess",
                                                                                                "base": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "round"
                                                                                                },
                                                                                                "index": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_rId"
                                                                                                }
                                                                                            },
                                                                                            "memberName": "amount"
                                                                                        },
                                                                                        "memberName": "mul"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "NumberLiteral",
                                                                                            "number": "88",
                                                                                            "subdenomination": null
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "100",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    },
                                                                    "memberName": "sub"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "protectAmount"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "sub"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "dividendAmount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "data error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "bankerFeeDataRecord"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_protectRatio"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "multiStake",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_targetAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stageTargetBalance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_rId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "rId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_sId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "sId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_crossStageNum",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "1",
                                    "subdenomination": null
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_protectTotalAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_dividendTotalAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BooleanLiteral",
                                    "value": true
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_crossStageNum"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "playerDataRecord"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_amount"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_stageTargetBalance"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_stepSize"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_protectRatio"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_crossStageNum"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "amount"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "amount"
                                                                    },
                                                                    "memberName": "add"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_amount"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "protectAmount"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "protectAmount"
                                                                    },
                                                                    "memberName": "add"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_amount"
                                                                                },
                                                                                "memberName": "mul"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_protectRatio"
                                                                                        },
                                                                                        "memberName": "mul"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "NumberLiteral",
                                                                                            "number": "88",
                                                                                            "subdenomination": null
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "10000",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "buyStageDataRecord"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_targetAmount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_stageTargetBalance"
                                                    },
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            },
                                                            "memberName": "add"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_stepSize"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_dividendTotalAmount"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_dividendTotalAmount"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "stage"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            },
                                                            "memberName": "dividendAmount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_protectTotalAmount"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_protectTotalAmount"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "stage"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            },
                                                            "memberName": "protectAmount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_amount"
                                                        },
                                                        "memberName": "sub"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_stageTargetBalance"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "right": {
                                                    "type": "Conditional",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "stage"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            },
                                                            "memberName": "dividendAmount"
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "getStageTargetAmount"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    "TrueExpression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "getStageTargetAmount"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "FalseExpression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "stage"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            }
                                                        },
                                                        "memberName": "dividendAmount"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_targetAmount"
                                                            },
                                                            "memberName": "mul"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "100",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "88",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_stageTargetBalance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_targetAmount"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "_crossStageNum"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_stageTargetBalance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "buyStageDataRecord"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_targetAmount"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_amount"
                                                                },
                                                                {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "_sId"
                                                                        },
                                                                        "memberName": "add"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "_stepSize"
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_protectRatio"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "playerDataRecord"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                },
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_amount"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_stepSize"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_protectRatio"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_crossStageNum"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_targetAmount"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_amount"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "UnaryOperation",
                                                                "operator": "++",
                                                                "subExpression": {
                                                                    "type": "Identifier",
                                                                    "name": "_sId"
                                                                },
                                                                "isPrefix": false
                                                            }
                                                        },
                                                        "FalseBody": null
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "stage"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "_rId"
                                                                        }
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_sId"
                                                                    }
                                                                },
                                                                "memberName": "start"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "now"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "sId"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "protectAmount"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "protectAmount"
                                                                    },
                                                                    "memberName": "sub"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_protectTotalAmount"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "dividendAmount"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "dividendAmount"
                                                                    },
                                                                    "memberName": "add"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "_dividendTotalAmount"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    ";"
                                                ]
                                            },
                                            "FalseBody": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyDataRecord",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_rId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_targetAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_expectEndSid",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_sId"
                                        },
                                        "memberName": "add"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_stepSize"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_protectAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    },
                                                    "memberName": "mul"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "88",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "10000",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            }
                                        },
                                        "memberName": "amount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "round"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "memberName": "amount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            }
                                        },
                                        "memberName": "protectAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "round"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "memberName": "protectAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_protectAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "amount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    }
                                                },
                                                "memberName": "amount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_expectEndSid"
                                            }
                                        },
                                        "memberName": "protectAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    }
                                                },
                                                "memberName": "protectAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_protectAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_expectEndSid"
                                            }
                                        },
                                        "memberName": "dividendAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    }
                                                },
                                                "memberName": "dividendAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "computeEarningsAmount"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_targetAmount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    },
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "100",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_protectRatio"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "FBankdatasets.Goods"
                                        },
                                        "name": "_goods",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "rId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_rId"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "startSid"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_sId"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "amount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "endSid"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_expectEndSid"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "protectRatio"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_protectRatio"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "playerGoodsList"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "memberName": "push"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "goodsList"
                                                    },
                                                    "memberName": "push"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyStageDataRecord",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_rId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_targetAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_expectEndSid",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_protectAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_amount"
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    },
                                                    "memberName": "mul"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "88",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "10000",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_targetAmount"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "stage"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            },
                                            "memberName": "amount"
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "stage"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "_rId"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_sId"
                                                        }
                                                    },
                                                    "memberName": "amount"
                                                },
                                                "memberName": "add"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                }
                                            ],
                                            "names": []
                                        }
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_expectEndSid"
                                            }
                                        },
                                        "memberName": "protectAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    }
                                                },
                                                "memberName": "protectAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_protectAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_expectEndSid"
                                            }
                                        },
                                        "memberName": "dividendAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    }
                                                },
                                                "memberName": "dividendAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "computeEarningsAmount"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_sId"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_targetAmount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_expectEndSid"
                                                    },
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "100",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_protectRatio"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "playerDataRecord",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_rId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_totalAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stageBuyAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_stepSize",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_crossStageNum",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_crossStageNum"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "UserDefinedTypeName",
                                                        "namePath": "FBankdatasets.Goods"
                                                    },
                                                    "name": "_goods",
                                                    "storageLocation": "memory"
                                                }
                                            ],
                                            "initialValue": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "rId"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "startSid"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "amount"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_totalAmount"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "stepSize"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_stepSize"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "protectRatio"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_protectRatio"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_crossStageNum"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_goods"
                                                        },
                                                        "memberName": "startAmount"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "_stageBuyAmount"
                                                    }
                                                }
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "playerGoodsList"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "memberName": "push"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "goodsList"
                                                                },
                                                                "memberName": "push"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_goods"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "_goodsIndex",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "goodsList"
                                                    },
                                                    "memberName": "length"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "goodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_goodsIndex"
                                                        }
                                                    },
                                                    "memberName": "endAmount"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_stageBuyAmount"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "goodsList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "_goodsIndex"
                                                        }
                                                    },
                                                    "memberName": "endSid"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_sId"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "bankerFeeDataRecord",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_protectRatio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "rId"
                                            }
                                        },
                                        "memberName": "jackpotAmount"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "round"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "rId"
                                                    }
                                                },
                                                "memberName": "jackpotAmount"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_amount"
                                                            },
                                                            "memberName": "mul"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "9",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "div"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_cardAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_protectRatio"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "memberName": "playerAddress"
                                            },
                                            "memberName": "send"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_cardAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "57",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "cardList"
                                                        },
                                                        "index": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "memberName": "playerAddress"
                                                },
                                                "memberName": "send"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_cardAmount"
                                                }
                                            ],
                                            "names": []
                                        }
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_protectRatio"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "57",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "cardList"
                                                            },
                                                            "index": {
                                                                "type": "NumberLiteral",
                                                                "number": "2",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "memberName": "playerAddress"
                                                    },
                                                    "memberName": "send"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_cardAmount"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "57",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "cardList"
                                                                },
                                                                "index": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "3",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "memberName": "playerAddress"
                                                        },
                                                        "memberName": "send"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_cardAmount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_protectRatio"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "cardList"
                                                                    },
                                                                    "index": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "4",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "memberName": "playerAddress"
                                                            },
                                                            "memberName": "send"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_cardAmount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                },
                                                "FalseBody": null
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "fairProfitContract"
                                        },
                                        "memberName": "send"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                },
                                                "memberName": "div"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "50",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "endRound",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_rId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            }
                                        },
                                        "memberName": "end"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "now"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            }
                                        },
                                        "memberName": "ended"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_rId"
                                            }
                                        },
                                        "memberName": "endSid"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_sId"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_sId"
                                            }
                                        },
                                        "memberName": "amount"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "round"
                                                },
                                                "index": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "memberName": "jackpotAmount"
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "IndexAccess",
                                                                                                "base": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "round"
                                                                                                },
                                                                                                "index": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_rId"
                                                                                                }
                                                                                            },
                                                                                            "memberName": "jackpotAmount"
                                                                                        },
                                                                                        "memberName": "add"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "/",
                                                                                            "left": {
                                                                                                "type": "FunctionCall",
                                                                                                "expression": {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "IndexAccess",
                                                                                                            "base": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "round"
                                                                                                            },
                                                                                                            "index": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_rId"
                                                                                                            }
                                                                                                        },
                                                                                                        "memberName": "amount"
                                                                                                    },
                                                                                                    "memberName": "mul"
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "NumberLiteral",
                                                                                                        "number": "88",
                                                                                                        "subdenomination": null
                                                                                                    }
                                                                                                ],
                                                                                                "names": []
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "NumberLiteral",
                                                                                                "number": "100",
                                                                                                "subdenomination": null
                                                                                            }
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                },
                                                                                "memberName": "sub"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "round"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_rId"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "protectAmount"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        },
                                                                        "memberName": "sub"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "round"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_rId"
                                                                                }
                                                                            },
                                                                            "memberName": "dividendAmount"
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "memberName": "mul"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "NumberLiteral",
                                                            "number": "20",
                                                            "subdenomination": null
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "memberName": "div"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "round"
                                                },
                                                "index": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_rId"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "memberName": "jackpotAmount"
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "round"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_rId"
                                                                                }
                                                                            },
                                                                            "memberName": "jackpotAmount"
                                                                        },
                                                                        "memberName": "add"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "round"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_rId"
                                                                                            }
                                                                                        },
                                                                                        "memberName": "amount"
                                                                                    },
                                                                                    "memberName": "mul"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "88",
                                                                                        "subdenomination": null
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "100",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                },
                                                                "memberName": "sub"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "round"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "_rId"
                                                                        }
                                                                    },
                                                                    "memberName": "protectAmount"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "memberName": "sub"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "round"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "_rId"
                                                                }
                                                            },
                                                            "memberName": "dividendAmount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "round"
                                            },
                                            "index": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_rId"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "memberName": "start"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "now"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "++",
                                    "subExpression": {
                                        "type": "Identifier",
                                        "name": "rId"
                                    },
                                    "isPrefix": false
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "sId"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getStageTargetAmount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "bankCompute"
                                    },
                                    "memberName": "getStageTargetAmount"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_sId"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "computeEarningsAmount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_currentTargetAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_expectEndSid",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_ratio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "bankCompute"
                                    },
                                    "memberName": "computeEarningsAmount"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_sId"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_currentTargetAmount"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_expectEndSid"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_ratio"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getEarningsAmountByGoodsIndex",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_goodsIndex",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "FBankdatasets.Goods"
                                        },
                                        "name": "_goods",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "goodsList"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "_goodsIndex"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_sId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "Identifier",
                                    "name": "sId"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetExpectedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "_goods"
                                        },
                                        "memberName": "stepSize"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "round"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_goods"
                                                            },
                                                            "memberName": "rId"
                                                        }
                                                    },
                                                    "memberName": "ended"
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "_goods"
                                                                        },
                                                                        "memberName": "rId"
                                                                    }
                                                                },
                                                                "memberName": "endSid"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "_goods"
                                                                },
                                                                "memberName": "endSid"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetExpectedAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "getStageTargetAmount"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "startSid"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "Conditional",
                                                                            "condition": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "stage"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "rId"
                                                                                            }
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "startSid"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "dividendAmount"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_targetExpectedAmount"
                                                                                }
                                                                            },
                                                                            "TrueExpression": {
                                                                                "type": "Identifier",
                                                                                "name": "_targetExpectedAmount"
                                                                            },
                                                                            "FalseExpression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "stage"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "rId"
                                                                                        }
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "startSid"
                                                                                    }
                                                                                },
                                                                                "memberName": "dividendAmount"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "memberName": "mul"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "100",
                                                                                        "subdenomination": null
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "88",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_amount"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "computeEarningsAmount"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "startSid"
                                                                                },
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "amount"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_targetAmount"
                                                                                },
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "endSid"
                                                                                },
                                                                                {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "100",
                                                                                        "subdenomination": null
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "protectRatio"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_amount"
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_goods"
                                                                                },
                                                                                "memberName": "amount"
                                                                            },
                                                                            "memberName": "mul"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "protectRatio"
                                                                                    },
                                                                                    "memberName": "mul"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "88",
                                                                                        "subdenomination": null
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "10000",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "_goods"
                                                                        },
                                                                        "memberName": "rId"
                                                                    }
                                                                },
                                                                "memberName": "endSid"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "_goods"
                                                                },
                                                                "memberName": "startSid"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_amount"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "_amount"
                                                                        },
                                                                        "memberName": "add"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "amount"
                                                                                        },
                                                                                        "memberName": "mul"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "FunctionCall",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "getRoundJackpot"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_goods"
                                                                                                    },
                                                                                                    "memberName": "rId"
                                                                                                }
                                                                                            ],
                                                                                            "names": []
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                },
                                                                                "memberName": "div"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "stage"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "rId"
                                                                                            }
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "startSid"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "amount"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        },
                                                        "FalseBody": null
                                                    },
                                                    {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_amount"
                                                            },
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            },
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            },
                                                            {
                                                                "type": "BooleanLiteral",
                                                                "value": true
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_sId"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "_goods"
                                                                },
                                                                "memberName": "endSid"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetExpectedAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "getStageTargetAmount"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "startSid"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "Conditional",
                                                                            "condition": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "stage"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "rId"
                                                                                            }
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "startSid"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "dividendAmount"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_targetExpectedAmount"
                                                                                }
                                                                            },
                                                                            "TrueExpression": {
                                                                                "type": "Identifier",
                                                                                "name": "_targetExpectedAmount"
                                                                            },
                                                                            "FalseExpression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "stage"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "rId"
                                                                                        }
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "startSid"
                                                                                    }
                                                                                },
                                                                                "memberName": "dividendAmount"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_targetAmount"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "memberName": "mul"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "100",
                                                                                        "subdenomination": null
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "88",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_amount"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "computeEarningsAmount"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "startSid"
                                                                                },
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "amount"
                                                                                },
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "_targetAmount"
                                                                                },
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "endSid"
                                                                                },
                                                                                {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "100",
                                                                                        "subdenomination": null
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "protectRatio"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                },
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                },
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                },
                                                                {
                                                                    "type": "BooleanLiteral",
                                                                    "value": false
                                                                }
                                                            ],
                                                            "isArray": false
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "_amount"
                                                },
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                },
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                },
                                                {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "_startSid",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "Conditional",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "_goods"
                                                        },
                                                        "memberName": "withdrawSid"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueExpression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "startSid"
                                                },
                                                "FalseExpression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "withdrawSid"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "_ratio",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "_goods"
                                                    },
                                                    "memberName": "protectRatio"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "_reachAmount",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_goods"
                                                },
                                                "memberName": "reachAmount"
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "round"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "_goods"
                                                            },
                                                            "memberName": "rId"
                                                        }
                                                    },
                                                    "memberName": "ended"
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "WhileStatement",
                                                        "condition": {
                                                            "type": "BooleanLiteral",
                                                            "value": true
                                                        },
                                                        "body": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_startSid"
                                                                            },
                                                                            "right": {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "Conditional",
                                                                                        "condition": {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "==",
                                                                                            "left": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "withdrawSid"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "NumberLiteral",
                                                                                                "number": "0",
                                                                                                "subdenomination": null
                                                                                            }
                                                                                        },
                                                                                        "TrueExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "startSid"
                                                                                        },
                                                                                        "FalseExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "withdrawSid"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "100",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_startSid"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_reachAmount"
                                                                                    },
                                                                                    {
                                                                                        "type": "BooleanLiteral",
                                                                                        "value": false
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            }
                                                                        ]
                                                                    },
                                                                    "FalseBody": null
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "round"
                                                                                },
                                                                                "index": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "rId"
                                                                                }
                                                                            },
                                                                            "memberName": "endSid"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_startSid"
                                                                                },
                                                                                "memberName": "add"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "stepSize"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetExpectedAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "getStageTargetAmount"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_startSid"
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Conditional",
                                                                                        "condition": {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "<=",
                                                                                            "left": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "IndexAccess",
                                                                                                    "base": {
                                                                                                        "type": "IndexAccess",
                                                                                                        "base": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "stage"
                                                                                                        },
                                                                                                        "index": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_goods"
                                                                                                            },
                                                                                                            "memberName": "rId"
                                                                                                        }
                                                                                                    },
                                                                                                    "index": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    }
                                                                                                },
                                                                                                "memberName": "dividendAmount"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_targetExpectedAmount"
                                                                                            }
                                                                                        },
                                                                                        "TrueExpression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_targetExpectedAmount"
                                                                                        },
                                                                                        "FalseExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "IndexAccess",
                                                                                                "base": {
                                                                                                    "type": "IndexAccess",
                                                                                                    "base": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "stage"
                                                                                                    },
                                                                                                    "index": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_goods"
                                                                                                        },
                                                                                                        "memberName": "rId"
                                                                                                    }
                                                                                                },
                                                                                                "index": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_startSid"
                                                                                                }
                                                                                            },
                                                                                            "memberName": "dividendAmount"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "/",
                                                                                        "left": {
                                                                                            "type": "FunctionCall",
                                                                                            "expression": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_targetAmount"
                                                                                                },
                                                                                                "memberName": "mul"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "100",
                                                                                                    "subdenomination": null
                                                                                                }
                                                                                            ],
                                                                                            "names": []
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "NumberLiteral",
                                                                                            "number": "88",
                                                                                            "subdenomination": null
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "condition": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "==",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_startSid"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "endSid"
                                                                                    }
                                                                                },
                                                                                "TrueBody": {
                                                                                    "type": "Block",
                                                                                    "statements": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "BinaryOperation",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_amount"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "FunctionCall",
                                                                                                    "expression": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_amount"
                                                                                                        },
                                                                                                        "memberName": "add"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "FunctionCall",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "computeEarningsAmount"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_startSid"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberAccess",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_goods"
                                                                                                                    },
                                                                                                                    "memberName": "endAmount"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_targetAmount"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "FunctionCall",
                                                                                                                    "expression": {
                                                                                                                        "type": "MemberAccess",
                                                                                                                        "expression": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_startSid"
                                                                                                                        },
                                                                                                                        "memberName": "add"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberAccess",
                                                                                                                            "expression": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_goods"
                                                                                                                            },
                                                                                                                            "memberName": "stepSize"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "names": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_ratio"
                                                                                                                }
                                                                                                            ],
                                                                                                            "names": []
                                                                                                        }
                                                                                                    ],
                                                                                                    "names": []
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "TupleExpression",
                                                                                            "components": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_amount"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_goods"
                                                                                                    },
                                                                                                    "memberName": "endSid"
                                                                                                },
                                                                                                {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "0",
                                                                                                    "subdenomination": null
                                                                                                },
                                                                                                {
                                                                                                    "type": "BooleanLiteral",
                                                                                                    "value": true
                                                                                                }
                                                                                            ],
                                                                                            "isArray": false
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "FalseBody": null
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_amount"
                                                                                            },
                                                                                            "memberName": "add"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "FunctionCall",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "computeEarningsAmount"
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Conditional",
                                                                                                        "condition": {
                                                                                                            "type": "BinaryOperation",
                                                                                                            "operator": "==",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_startSid"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_goods"
                                                                                                                },
                                                                                                                "memberName": "startSid"
                                                                                                            }
                                                                                                        },
                                                                                                        "TrueExpression": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_goods"
                                                                                                            },
                                                                                                            "memberName": "startAmount"
                                                                                                        },
                                                                                                        "FalseExpression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_targetAmount"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_targetAmount"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "FunctionCall",
                                                                                                        "expression": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_startSid"
                                                                                                            },
                                                                                                            "memberName": "add"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_goods"
                                                                                                                },
                                                                                                                "memberName": "stepSize"
                                                                                                            }
                                                                                                        ],
                                                                                                        "names": []
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_ratio"
                                                                                                    }
                                                                                                ],
                                                                                                "names": []
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_reachAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_reachAmount"
                                                                                            },
                                                                                            "memberName": "add"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Conditional",
                                                                                                "condition": {
                                                                                                    "type": "BinaryOperation",
                                                                                                    "operator": "==",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_goods"
                                                                                                        },
                                                                                                        "memberName": "startSid"
                                                                                                    }
                                                                                                },
                                                                                                "TrueExpression": {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_goods"
                                                                                                    },
                                                                                                    "memberName": "startAmount"
                                                                                                },
                                                                                                "FalseExpression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_targetAmount"
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "FalseBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_amount"
                                                                                            },
                                                                                            "memberName": "add"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "BinaryOperation",
                                                                                                "operator": "/",
                                                                                                "left": {
                                                                                                    "type": "FunctionCall",
                                                                                                    "expression": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "TupleExpression",
                                                                                                            "components": [
                                                                                                                {
                                                                                                                    "type": "FunctionCall",
                                                                                                                    "expression": {
                                                                                                                        "type": "MemberAccess",
                                                                                                                        "expression": {
                                                                                                                            "type": "MemberAccess",
                                                                                                                            "expression": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_goods"
                                                                                                                            },
                                                                                                                            "memberName": "amount"
                                                                                                                        },
                                                                                                                        "memberName": "sub"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_reachAmount"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "names": []
                                                                                                                }
                                                                                                            ],
                                                                                                            "isArray": false
                                                                                                        },
                                                                                                        "memberName": "mul"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "FunctionCall",
                                                                                                            "expression": {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "MemberAccess",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_goods"
                                                                                                                    },
                                                                                                                    "memberName": "protectRatio"
                                                                                                                },
                                                                                                                "memberName": "mul"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "NumberLiteral",
                                                                                                                    "number": "88",
                                                                                                                    "subdenomination": null
                                                                                                                }
                                                                                                            ],
                                                                                                            "names": []
                                                                                                        }
                                                                                                    ],
                                                                                                    "names": []
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "10000",
                                                                                                    "subdenomination": null
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "condition": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "==",
                                                                                    "left": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "round"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "rId"
                                                                                            }
                                                                                        },
                                                                                        "memberName": "endSid"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "endSid"
                                                                                    }
                                                                                },
                                                                                "TrueBody": {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_amount"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "FunctionCall",
                                                                                            "expression": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_amount"
                                                                                                },
                                                                                                "memberName": "add"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "FunctionCall",
                                                                                                    "expression": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "FunctionCall",
                                                                                                            "expression": {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "MemberAccess",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_goods"
                                                                                                                    },
                                                                                                                    "memberName": "endAmount"
                                                                                                                },
                                                                                                                "memberName": "mul"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "FunctionCall",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "getRoundJackpot"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberAccess",
                                                                                                                            "expression": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_goods"
                                                                                                                            },
                                                                                                                            "memberName": "rId"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "names": []
                                                                                                                }
                                                                                                            ],
                                                                                                            "names": []
                                                                                                        },
                                                                                                        "memberName": "div"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "IndexAccess",
                                                                                                                "base": {
                                                                                                                    "type": "IndexAccess",
                                                                                                                    "base": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "stage"
                                                                                                                    },
                                                                                                                    "index": {
                                                                                                                        "type": "MemberAccess",
                                                                                                                        "expression": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_goods"
                                                                                                                        },
                                                                                                                        "memberName": "rId"
                                                                                                                    }
                                                                                                                },
                                                                                                                "index": {
                                                                                                                    "type": "MemberAccess",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_goods"
                                                                                                                    },
                                                                                                                    "memberName": "endSid"
                                                                                                                }
                                                                                                            },
                                                                                                            "memberName": "amount"
                                                                                                        }
                                                                                                    ],
                                                                                                    "names": []
                                                                                                }
                                                                                            ],
                                                                                            "names": []
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "FalseBody": null
                                                                            },
                                                                            {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "endSid"
                                                                                    },
                                                                                    {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "0",
                                                                                        "subdenomination": null
                                                                                    },
                                                                                    {
                                                                                        "type": "BooleanLiteral",
                                                                                        "value": true
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            }
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "UnaryOperation",
                                                                        "operator": "++",
                                                                        "subExpression": {
                                                                            "type": "Identifier",
                                                                            "name": "_startSid"
                                                                        },
                                                                        "isPrefix": false
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "WhileStatement",
                                                        "condition": {
                                                            "type": "BooleanLiteral",
                                                            "value": true
                                                        },
                                                        "body": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "-",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "_startSid"
                                                                            },
                                                                            "right": {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "Conditional",
                                                                                        "condition": {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "==",
                                                                                            "left": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_goods"
                                                                                                },
                                                                                                "memberName": "withdrawSid"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "NumberLiteral",
                                                                                                "number": "0",
                                                                                                "subdenomination": null
                                                                                            }
                                                                                        },
                                                                                        "TrueExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "startSid"
                                                                                        },
                                                                                        "FalseExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_goods"
                                                                                            },
                                                                                            "memberName": "withdrawSid"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "100",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_startSid"
                                                                                    },
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "_reachAmount"
                                                                                    },
                                                                                    {
                                                                                        "type": "BooleanLiteral",
                                                                                        "value": false
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            }
                                                                        ]
                                                                    },
                                                                    "FalseBody": null
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_sId"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_startSid"
                                                                                },
                                                                                "memberName": "add"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_goods"
                                                                                    },
                                                                                    "memberName": "stepSize"
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetExpectedAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "getStageTargetAmount"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Identifier",
                                                                                                "name": "_startSid"
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Conditional",
                                                                                        "condition": {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "<=",
                                                                                            "left": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "IndexAccess",
                                                                                                    "base": {
                                                                                                        "type": "IndexAccess",
                                                                                                        "base": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "stage"
                                                                                                        },
                                                                                                        "index": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_goods"
                                                                                                            },
                                                                                                            "memberName": "rId"
                                                                                                        }
                                                                                                    },
                                                                                                    "index": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    }
                                                                                                },
                                                                                                "memberName": "dividendAmount"
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_targetExpectedAmount"
                                                                                            }
                                                                                        },
                                                                                        "TrueExpression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_targetExpectedAmount"
                                                                                        },
                                                                                        "FalseExpression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "IndexAccess",
                                                                                                "base": {
                                                                                                    "type": "IndexAccess",
                                                                                                    "base": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "stage"
                                                                                                    },
                                                                                                    "index": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_goods"
                                                                                                        },
                                                                                                        "memberName": "rId"
                                                                                                    }
                                                                                                },
                                                                                                "index": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_startSid"
                                                                                                }
                                                                                            },
                                                                                            "memberName": "dividendAmount"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_targetAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "/",
                                                                                        "left": {
                                                                                            "type": "FunctionCall",
                                                                                            "expression": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_targetAmount"
                                                                                                },
                                                                                                "memberName": "mul"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "100",
                                                                                                    "subdenomination": null
                                                                                                }
                                                                                            ],
                                                                                            "names": []
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "NumberLiteral",
                                                                                            "number": "88",
                                                                                            "subdenomination": null
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "IfStatement",
                                                                                "condition": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "==",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_startSid"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "_goods"
                                                                                        },
                                                                                        "memberName": "endSid"
                                                                                    }
                                                                                },
                                                                                "TrueBody": {
                                                                                    "type": "Block",
                                                                                    "statements": [
                                                                                        {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                                "type": "BinaryOperation",
                                                                                                "operator": "=",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_amount"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "FunctionCall",
                                                                                                    "expression": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_amount"
                                                                                                        },
                                                                                                        "memberName": "add"
                                                                                                    },
                                                                                                    "arguments": [
                                                                                                        {
                                                                                                            "type": "FunctionCall",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "computeEarningsAmount"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_startSid"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "MemberAccess",
                                                                                                                    "expression": {
                                                                                                                        "type": "Identifier",
                                                                                                                        "name": "_goods"
                                                                                                                    },
                                                                                                                    "memberName": "endAmount"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_targetAmount"
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "FunctionCall",
                                                                                                                    "expression": {
                                                                                                                        "type": "MemberAccess",
                                                                                                                        "expression": {
                                                                                                                            "type": "Identifier",
                                                                                                                            "name": "_startSid"
                                                                                                                        },
                                                                                                                        "memberName": "add"
                                                                                                                    },
                                                                                                                    "arguments": [
                                                                                                                        {
                                                                                                                            "type": "MemberAccess",
                                                                                                                            "expression": {
                                                                                                                                "type": "Identifier",
                                                                                                                                "name": "_goods"
                                                                                                                            },
                                                                                                                            "memberName": "stepSize"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "names": []
                                                                                                                },
                                                                                                                {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_ratio"
                                                                                                                }
                                                                                                            ],
                                                                                                            "names": []
                                                                                                        }
                                                                                                    ],
                                                                                                    "names": []
                                                                                                }
                                                                                            }
                                                                                        },
                                                                                        {
                                                                                            "type": "TupleExpression",
                                                                                            "components": [
                                                                                                {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_amount"
                                                                                                },
                                                                                                {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_goods"
                                                                                                    },
                                                                                                    "memberName": "endSid"
                                                                                                },
                                                                                                {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "0",
                                                                                                    "subdenomination": null
                                                                                                },
                                                                                                {
                                                                                                    "type": "BooleanLiteral",
                                                                                                    "value": true
                                                                                                }
                                                                                            ],
                                                                                            "isArray": false
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "FalseBody": null
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_amount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_amount"
                                                                                            },
                                                                                            "memberName": "add"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "FunctionCall",
                                                                                                "expression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "computeEarningsAmount"
                                                                                                },
                                                                                                "arguments": [
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Conditional",
                                                                                                        "condition": {
                                                                                                            "type": "BinaryOperation",
                                                                                                            "operator": "==",
                                                                                                            "left": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_startSid"
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_goods"
                                                                                                                },
                                                                                                                "memberName": "startSid"
                                                                                                            }
                                                                                                        },
                                                                                                        "TrueExpression": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_goods"
                                                                                                            },
                                                                                                            "memberName": "startAmount"
                                                                                                        },
                                                                                                        "FalseExpression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_targetAmount"
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_targetAmount"
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "FunctionCall",
                                                                                                        "expression": {
                                                                                                            "type": "MemberAccess",
                                                                                                            "expression": {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "_startSid"
                                                                                                            },
                                                                                                            "memberName": "add"
                                                                                                        },
                                                                                                        "arguments": [
                                                                                                            {
                                                                                                                "type": "MemberAccess",
                                                                                                                "expression": {
                                                                                                                    "type": "Identifier",
                                                                                                                    "name": "_goods"
                                                                                                                },
                                                                                                                "memberName": "stepSize"
                                                                                                            }
                                                                                                        ],
                                                                                                        "names": []
                                                                                                    },
                                                                                                    {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_ratio"
                                                                                                    }
                                                                                                ],
                                                                                                "names": []
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            },
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "=",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "_reachAmount"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "FunctionCall",
                                                                                        "expression": {
                                                                                            "type": "MemberAccess",
                                                                                            "expression": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_reachAmount"
                                                                                            },
                                                                                            "memberName": "add"
                                                                                        },
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "Conditional",
                                                                                                "condition": {
                                                                                                    "type": "BinaryOperation",
                                                                                                    "operator": "==",
                                                                                                    "left": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_startSid"
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "MemberAccess",
                                                                                                        "expression": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_goods"
                                                                                                        },
                                                                                                        "memberName": "startSid"
                                                                                                    }
                                                                                                },
                                                                                                "TrueExpression": {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "Identifier",
                                                                                                        "name": "_goods"
                                                                                                    },
                                                                                                    "memberName": "startAmount"
                                                                                                },
                                                                                                "FalseExpression": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_targetAmount"
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "names": []
                                                                                    }
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "FalseBody": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_amount"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_startSid"
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "_reachAmount"
                                                                            },
                                                                            {
                                                                                "type": "BooleanLiteral",
                                                                                "value": false
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "UnaryOperation",
                                                                        "operator": "++",
                                                                        "subExpression": {
                                                                            "type": "Identifier",
                                                                            "name": "_startSid"
                                                                        },
                                                                        "isPrefix": false
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getRoundJackpot",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_rId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "IndexAccess",
                                                                                            "base": {
                                                                                                "type": "Identifier",
                                                                                                "name": "round"
                                                                                            },
                                                                                            "index": {
                                                                                                "type": "Identifier",
                                                                                                "name": "_rId"
                                                                                            }
                                                                                        },
                                                                                        "memberName": "jackpotAmount"
                                                                                    },
                                                                                    "memberName": "add"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "/",
                                                                                        "left": {
                                                                                            "type": "FunctionCall",
                                                                                            "expression": {
                                                                                                "type": "MemberAccess",
                                                                                                "expression": {
                                                                                                    "type": "MemberAccess",
                                                                                                    "expression": {
                                                                                                        "type": "IndexAccess",
                                                                                                        "base": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "round"
                                                                                                        },
                                                                                                        "index": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "_rId"
                                                                                                        }
                                                                                                    },
                                                                                                    "memberName": "amount"
                                                                                                },
                                                                                                "memberName": "mul"
                                                                                            },
                                                                                            "arguments": [
                                                                                                {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "88",
                                                                                                    "subdenomination": null
                                                                                                }
                                                                                            ],
                                                                                            "names": []
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "NumberLiteral",
                                                                                            "number": "100",
                                                                                            "subdenomination": null
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    },
                                                                    "memberName": "sub"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "round"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "_rId"
                                                                            }
                                                                        },
                                                                        "memberName": "protectAmount"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "sub"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "_rId"
                                                                    }
                                                                },
                                                                "memberName": "dividendAmount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "memberName": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "80",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    },
                                    "memberName": "div"
                                },
                                "arguments": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "100",
                                        "subdenomination": null
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getHeadInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_targetExpectedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getStageTargetAmount"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "sId"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "rId"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "sId"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    },
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "stage"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "rId"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "sId"
                                                    }
                                                },
                                                "memberName": "start"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "stageDuration"
                                            }
                                        ],
                                        "names": []
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "stage"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "rId"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "sId"
                                            }
                                        },
                                        "memberName": "amount"
                                    },
                                    {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Conditional",
                                                            "condition": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<=",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "stage"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "rId"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "sId"
                                                                        }
                                                                    },
                                                                    "memberName": "dividendAmount"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "_targetExpectedAmount"
                                                                }
                                                            },
                                                            "TrueExpression": {
                                                                "type": "Identifier",
                                                                "name": "_targetExpectedAmount"
                                                            },
                                                            "FalseExpression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "stage"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "rId"
                                                                        }
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "sId"
                                                                    }
                                                                },
                                                                "memberName": "dividendAmount"
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "memberName": "mul"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "100",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "88",
                                            "subdenomination": null
                                        }
                                    },
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "round"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "rId"
                                                                    }
                                                                },
                                                                "memberName": "jackpotAmount"
                                                            },
                                                            "memberName": "add"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "round"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "rId"
                                                                                }
                                                                            },
                                                                            "memberName": "amount"
                                                                        },
                                                                        "memberName": "mul"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "88",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "100",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "sub"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "round"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "rId"
                                                            }
                                                        },
                                                        "memberName": "protectAmount"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "round"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "rId"
                                                    }
                                                },
                                                "memberName": "dividendAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getPlayerGoodList",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "Identifier",
                                    "name": "playerGoodsList"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "_player"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "total",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "cardList"
                                },
                                "memberName": "length"
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_length",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "cardList"
                                    },
                                    "memberName": "length"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "_count",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "cardList"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "playerAddress"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_owner"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryOperation",
                                                    "operator": "++",
                                                    "subExpression": {
                                                        "type": "Identifier",
                                                        "name": "_count"
                                                    },
                                                    "isPrefix": false
                                                }
                                            },
                                            "FalseBody": null
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "_count"
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "ownerOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "cardList"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "tokenId error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        "memberName": "playerAddress"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "No owner"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "player"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Not a registered user"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_tokenId"
                                                    }
                                                },
                                                "memberName": "playerAddress"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "The card does not belong to you"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "cardList"
                                                },
                                                "memberName": "length"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "tokenId error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardIndexToApproved"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_tokenId"
                                                }
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Approved"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardIndexToApproved"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_to"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "takeOwnership",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "_newOwner",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "sender"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "_oldOwner",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardList"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    },
                                    "memberName": "playerAddress"
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_newOwner"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Address error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_newOwner"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardIndexToApproved"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_tokenId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Without permission"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        "memberName": "playerAddress"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_newOwner"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "delete",
                                    "subExpression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardIndexToApproved"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    },
                                    "isPrefix": true
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_oldOwner"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_newOwner"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_tokenId"
                                                    }
                                                },
                                                "memberName": "playerAddress"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "The card does not belong to you"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Address error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardIndexToApproved"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_tokenId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Without permission"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        "memberName": "playerAddress"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_to"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardIndexToApproved"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "delete",
                                        "subExpression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardIndexToApproved"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        "isPrefix": true
                                    }
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_tokenId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_from"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "cardList"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_tokenId"
                                                    }
                                                },
                                                "memberName": "playerAddress"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Owner error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Address error"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "cardIndexToApproved"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_tokenId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Without permission"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "cardList"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_tokenId"
                                            }
                                        },
                                        "memberName": "playerAddress"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_to"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "delete",
                                    "subExpression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "cardIndexToApproved"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    },
                                    "isPrefix": true
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_from"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_tokenId"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "senderVerify",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "FBankdatasets",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StructDefinition",
                    "name": "Round",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "start",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "end",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "ended",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endSid",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "amount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "protectAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "dividendAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "jackpotAmount",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Stage",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "start",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "amount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "protectAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "dividendAmount",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Goods",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "rId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startSid",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endSid",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "withdrawSid",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "amount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "reachAmount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "stepSize",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "protectRatio",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Card",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "playerAddress",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "amount",
                            "storageLocation": null
                        }
                    ]
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "FairBankCompute",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "getStageTargetAmount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "computeEarningsAmount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_sId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_currentTargetAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_expectEndSid",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_ratio",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                    "type": "Identifier",
                                    "name": "a"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "b"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "b"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "a"
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "c"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sqrt",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "y",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "z",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "add"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                            },
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "isArray": false
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "y"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "x"
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "z"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "y"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "y"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "z"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "z"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "add"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "TupleExpression",
                                                                                "components": [
                                                                                    {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "/",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "x"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "z"
                                                                                        }
                                                                                    }
                                                                                ],
                                                                                "isArray": false
                                                                            },
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "z"
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "2",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sq",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "mul"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "x"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "x"
                                            }
                                        ],
                                        "names": []
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "pwr",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "y",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ],
                                    "isArray": false
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "y"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "FalseBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "VariableDeclarationStatement",
                                                "variables": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "name": "z",
                                                        "storageLocation": null
                                                    }
                                                ],
                                                "initialValue": {
                                                    "type": "Identifier",
                                                    "name": "x"
                                                }
                                            },
                                            {
                                                "type": "ForStatement",
                                                "initExpression": {
                                                    "type": "VariableDeclarationStatement",
                                                    "variables": [
                                                        {
                                                            "type": "VariableDeclaration",
                                                            "typeName": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "uint256"
                                                            },
                                                            "name": "i",
                                                            "storageLocation": null
                                                        }
                                                    ],
                                                    "initialValue": {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "conditionExpression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                    }
                                                },
                                                "loopExpression": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "UnaryOperation",
                                                        "operator": "++",
                                                        "subExpression": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        },
                                                        "isPrefix": false
                                                    }
                                                },
                                                "body": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "z"
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "mul"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "z"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "z"
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        }
    ]
}