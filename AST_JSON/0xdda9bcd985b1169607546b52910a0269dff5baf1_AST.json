{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.0"
        },
        {
            "type": "ContractDefinition",
            "name": "ERC20",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "remaining",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "EventDefinition",
                    "name": "Transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Approval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "Goo",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "ERC20"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "IdleEth"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "IdleEth"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "symbol",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "Goo"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "Goo"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                            },
                            "name": "decimals",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "roughSupply",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "totalGooProduction",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "owner",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "gameStarted",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "totalEtherGooResearchPool",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "length": null
                            },
                            "name": "totalGooProductionSnapshots",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "length": null
                            },
                            "name": "allocatedGooResearchSnapshots",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "nextSnapshotTime",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "MAX_PRODUCTION_UNITS",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "999",
                                "subdenomination": null
                            },
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "999",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "RAFFLE_TICKET_BASE_GOO_PRICE",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1000",
                                "subdenomination": null
                            },
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1000",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "ethBalance",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "gooBalance",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "gooProductionSnapshots",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "bool"
                                    }
                                }
                            },
                            "name": "gooProductionZeroedSnapshots",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "lastGooSaveTime",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "lastGooProductionUpdate",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "lastGooResearchFundClaim",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "battleCooldown",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitsOwned",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "bool"
                                    }
                                }
                            },
                            "name": "upgradesOwned",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                }
                            },
                            "name": "rareItemOwner",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "rareItemPrice",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitGooProductionIncreases",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitGooProductionMultiplier",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitAttackIncreases",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitAttackMultiplier",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitDefenseIncreases",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitDefenseMultiplier",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitGooStealingIncreases",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "unitGooStealingMultiplier",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "allowed",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                }
                            },
                            "name": "protectedAddresses",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StructDefinition",
                    "name": "TicketPurchases",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "TicketPurchase"
                                },
                                "length": null
                            },
                            "name": "ticketsBought",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "numPurchases",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "raffleRareId",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "TicketPurchase",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endId",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "TicketPurchases"
                                }
                            },
                            "name": "ticketsBoughtByPlayer",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "length": null
                                }
                            },
                            "name": "rafflePlayers",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "raffleEndTime",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "raffleRareId",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "raffleTicketsBought",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "raffleWinner",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "raffleWinningTicketSelected",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "raffleTicketThatWon",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "EventDefinition",
                    "name": "UnitBought",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "UnitSold",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "PlayerAttacked",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "attacker",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "target",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "gooStolen",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "GooGameConfig"
                            },
                            "name": "schema",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Goo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "schema"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "GooGameConfig"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0x21912e81d7eff8bff895302b45da76f7f070e3b9",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()payable{}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": []
                    },
                    "visibility": "default",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "beginGame",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "firstDivsTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryOperation",
                                            "operator": "!",
                                            "subExpression": {
                                                "type": "Identifier",
                                                "name": "gameStarted"
                                            },
                                            "isPrefix": true
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "gameStarted"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "nextSnapshotTime"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "firstDivsTime"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalEtherGooResearchPool"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "Identifier",
                                "name": "roughSupply"
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "+",
                                "left": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "gooBalance"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "player"
                                    }
                                },
                                "right": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "balanceOfUnclaimedGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOfUnclaimedGoo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "lastGooSaveTime"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "player"
                                            }
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "<",
                                        "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "lastGooSaveTime"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "player"
                                            }
                                        },
                                        "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "block"
                                            },
                                            "memberName": "timestamp"
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "getGooProduction"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "player"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "right": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "block"
                                                                    },
                                                                    "memberName": "timestamp"
                                                                },
                                                                "right": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "lastGooSaveTime"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "etherBalanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "Identifier",
                                    "name": "ethBalance"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "player"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "recipient",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "amount"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "gooBalance"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "recipient"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "recipient"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "recipient",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "allowed"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "recipient"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "allowed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "player"
                                            }
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "recipient"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "approvee",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "allowed"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "approvee"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "approvee"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "approvee",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "allowed"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "player"
                                    }
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "approvee"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getGooProduction",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "gooProductionSnapshots"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "player"
                                    }
                                },
                                "index": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "lastGooProductionUpdate"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "player"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "updatePlayersGoo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "gooGain",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "balanceOfUnclaimedGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooSaveTime"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "roughSupply"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "gooGain"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "gooGain"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "updatePlayersGooFromPurchase",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "purchaseCost",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unclaimedGoo",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "balanceOfUnclaimedGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "purchaseCost"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "unclaimedGoo"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "gooDecrease",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "purchaseCost"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "unclaimedGoo"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "roughSupply"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "gooDecrease"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooBalance"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "player"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "gooDecrease"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "gooGain",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "unclaimedGoo"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "purchaseCost"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "roughSupply"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "gooGain"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooBalance"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "player"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "gooGain"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooSaveTime"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "increasePlayersGooProduction",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "increase",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "gooProductionSnapshots"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "allocatedGooResearchSnapshots"
                                            },
                                            "memberName": "length"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "getGooProduction"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            ],
                                            "names": []
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "increase"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooProductionUpdate"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocatedGooResearchSnapshots"
                                        },
                                        "memberName": "length"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalGooProduction"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "increase"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "reducePlayersGooProduction",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "decrease",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "previousProduction",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "getGooProduction"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newProduction",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "SafeMath"
                                        },
                                        "memberName": "sub"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "previousProduction"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "decrease"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "newProduction"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "gooProductionZeroedSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "allocatedGooResearchSnapshots"
                                                        },
                                                        "memberName": "length"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "delete",
                                                "subExpression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "gooProductionSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "allocatedGooResearchSnapshots"
                                                        },
                                                        "memberName": "length"
                                                    }
                                                },
                                                "isPrefix": true
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "gooProductionSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "allocatedGooResearchSnapshots"
                                                        },
                                                        "memberName": "length"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "newProduction"
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooProductionUpdate"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "player"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocatedGooResearchSnapshots"
                                        },
                                        "memberName": "length"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalGooProduction"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "decrease"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyBasicUnit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "gameStarted"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "validUnitId"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "unitId"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitsOwned"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "unitId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "MAX_PRODUCTION_UNITS"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "schema"
                                        },
                                        "memberName": "getGooCostForUnit"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "unitsOwned"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "balanceOf"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "unitCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "schema"
                                                    },
                                                    "memberName": "unitEthCost"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "unitId"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGooFromPurchase"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitCost"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "unitGooProduction"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "increasePlayersGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "getUnitsProduction"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "unitsOwned"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "UnitBought"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyEthUnit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "gameStarted"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "validUnitId"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "unitId"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitsOwned"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "unitId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "MAX_PRODUCTION_UNITS"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "schema"
                                        },
                                        "memberName": "getGooCostForUnit"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "unitsOwned"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "ethCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "SafeMath"
                                        },
                                        "memberName": "mul"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "unitEthCost"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "unitId"
                                                }
                                            ],
                                            "names": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "balanceOf"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "unitCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "value"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "ethCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGooFromPurchase"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitCost"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "ethCost"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "value"
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "devFund",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "50",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "dividends",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "ethCost"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "devFund"
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "4",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalEtherGooResearchPool"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "dividends"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "owner"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "devFund"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "unitGooProduction"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "increasePlayersGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "getUnitsProduction"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "unitsOwned"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "UnitBought"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sellUnit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "unitsOwned"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "unitId"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "amount"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "unitsOwned"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitSalePrice",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "schema"
                                                        },
                                                        "memberName": "getGooCostForUnit"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "amount"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "4",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "gooChange",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "balanceOfUnclaimedGoo"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "unitSalePrice"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooSaveTime"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "roughSupply"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "gooChange"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooBalance"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "gooChange"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "unitGooProduction"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "reducePlayersGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "getUnitsProduction"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "unitEthCost"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "TupleExpression",
                                                                    "components": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "*",
                                                                            "left": {
                                                                                "type": "FunctionCall",
                                                                                "expression": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "schema"
                                                                                    },
                                                                                    "memberName": "unitEthCost"
                                                                                },
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitId"
                                                                                    }
                                                                                ],
                                                                                "names": []
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "amount"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "isArray": false
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "3",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "UnitSold"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyUpgrade",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "gameStarted"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "validUpgradeId"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "upgradeId"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryOperation",
                                            "operator": "!",
                                            "subExpression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "upgradesOwned"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "upgradeId"
                                                }
                                            },
                                            "isPrefix": true
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "gooCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "ethCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeClass",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "gooCost"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "ethCost"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeClass"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeValue"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "getUpgradeInfo"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "balanceOf"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "gooCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "ethBalance"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "value"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ethCost"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "ethCost"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "value"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "-=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "ethBalance"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "ethCost"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "msg"
                                                                            },
                                                                            "memberName": "value"
                                                                        }
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": null
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "devFund",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "ethCost"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "50",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "totalEtherGooResearchPool"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "ethCost"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "devFund"
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "owner"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "devFund"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGooFromPurchase"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "gooCost"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "upgradeUnitMultipliers"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeValue"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradesOwned"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "upgradeId"
                                        }
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "upgradeUnitMultipliers",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeClass",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "productionGain",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "upgradeClass"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitGooProductionIncreases"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "unitId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "upgradeValue"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "productionGain"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "unitsOwned"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "player"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "upgradeValue"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "TupleExpression",
                                                                    "components": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "10",
                                                                                "subdenomination": null
                                                                            },
                                                                            "right": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitGooProductionMultiplier"
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "player"
                                                                                    }
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitId"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "isArray": false
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "increasePlayersGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "productionGain"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "unitGooProductionMultiplier"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "player"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "upgradeValue"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "productionGain"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitsOwned"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "player"
                                                                                }
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "unitId"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "upgradeValue"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "schema"
                                                                                        },
                                                                                        "memberName": "unitGooProduction"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitId"
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                },
                                                                                "right": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitGooProductionIncreases"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "Identifier",
                                                                                            "name": "player"
                                                                                        }
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitId"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "increasePlayersGooProduction"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "productionGain"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "upgradeClass"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "+=",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitAttackIncreases"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "upgradeValue"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "upgradeClass"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitAttackMultiplier"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "upgradeValue"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "upgradeClass"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "+=",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "unitDefenseIncreases"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "player"
                                                                        }
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "upgradeValue"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "upgradeClass"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "5",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "+=",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "unitDefenseMultiplier"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "player"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "upgradeValue"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "upgradeClass"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "6",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitGooStealingIncreases"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "player"
                                                                                }
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "unitId"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "upgradeValue"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "IfStatement",
                                                            "condition": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "upgradeClass"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "7",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "TrueBody": {
                                                                "type": "Block",
                                                                "statements": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+=",
                                                                            "left": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitGooStealingMultiplier"
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "player"
                                                                                    }
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitId"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "upgradeValue"
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "FalseBody": null
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "removeUnitMultipliers",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeClass",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "productionLoss",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "upgradeClass"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitGooProductionIncreases"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "unitId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "upgradeValue"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "productionLoss"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "unitsOwned"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "player"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "upgradeValue"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "TupleExpression",
                                                                    "components": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "10",
                                                                                "subdenomination": null
                                                                            },
                                                                            "right": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitGooProductionMultiplier"
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "player"
                                                                                    }
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitId"
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "isArray": false
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "reducePlayersGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "player"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "productionLoss"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "-=",
                                                    "left": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "unitGooProductionMultiplier"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "player"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "upgradeValue"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "productionLoss"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitsOwned"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "player"
                                                                                }
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "unitId"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "upgradeValue"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "MemberAccess",
                                                                                        "expression": {
                                                                                            "type": "Identifier",
                                                                                            "name": "schema"
                                                                                        },
                                                                                        "memberName": "unitGooProduction"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitId"
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                },
                                                                                "right": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitGooProductionIncreases"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "Identifier",
                                                                                            "name": "player"
                                                                                        }
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitId"
                                                                                    }
                                                                                }
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "reducePlayersGooProduction"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "productionLoss"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "upgradeClass"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "-=",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitAttackIncreases"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "upgradeValue"
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "upgradeClass"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "-=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitAttackMultiplier"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "upgradeValue"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "upgradeClass"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "-=",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "unitDefenseIncreases"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "player"
                                                                        }
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "upgradeValue"
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "upgradeClass"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "5",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "-=",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "unitDefenseMultiplier"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "player"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "upgradeValue"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "upgradeClass"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "6",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitGooStealingIncreases"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "player"
                                                                                }
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "unitId"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "upgradeValue"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "IfStatement",
                                                            "condition": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "upgradeClass"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "7",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "TrueBody": {
                                                                "type": "Block",
                                                                "statements": [
                                                                    {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "-=",
                                                                            "left": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "IndexAccess",
                                                                                    "base": {
                                                                                        "type": "Identifier",
                                                                                        "name": "unitGooStealingMultiplier"
                                                                                    },
                                                                                    "index": {
                                                                                        "type": "Identifier",
                                                                                        "name": "player"
                                                                                    }
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitId"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "upgradeValue"
                                                                            }
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "FalseBody": null
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyRareItem",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "rareId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "validRareId"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "rareId"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "name": "previousOwner",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "rareItemOwner"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "rareId"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "previousOwner"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "ethCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "rareItemPrice"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "rareId"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "value"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "ethCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeClass",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeClass"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeValue"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "getRareInfo"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "upgradeUnitMultipliers"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeValue"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "previousOwner"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "removeUnitMultipliers"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "previousOwner"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeValue"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "ethCost"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "value"
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "value"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "ethCost"
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "ethBalance"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "-",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "value"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "ethCost"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": null
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "devFund",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "50",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "dividends",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ethCost"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "20",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalEtherGooResearchPool"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "dividends"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "owner"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "devFund"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareItemOwner"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "rareId"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareItemPrice"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "rareId"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "ethCost"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "previousOwner"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "ethCost"
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "dividends"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "devFund"
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdrawEther",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "amount"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "ethBalance"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "claimResearchDividends",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "referer",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "startSnapshot",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "endSnapShot",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "startSnapshot"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "endSnapShot"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "startSnapshot"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "lastGooResearchFundClaim"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "endSnapShot"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "allocatedGooResearchSnapshots"
                                                },
                                                "memberName": "length"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "researchShare",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "previousProduction",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooProductionSnapshots"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "index": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "lastGooResearchFundClaim"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "Identifier",
                                        "name": "startSnapshot"
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endSnapShot"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "productionDuringSnapshot",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "bool"
                                                    },
                                                    "name": "soldAllProduction",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionZeroedSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "productionDuringSnapshot"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryOperation",
                                                    "operator": "!",
                                                    "subExpression": {
                                                        "type": "Identifier",
                                                        "name": "soldAllProduction"
                                                    },
                                                    "isPrefix": true
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "productionDuringSnapshot"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "previousProduction"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "previousProduction"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "productionDuringSnapshot"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "researchShare"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "allocatedGooResearchSnapshots"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "productionDuringSnapshot"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "totalGooProductionSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "endSnapShot"
                                                }
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "UnaryOperation",
                                            "operator": "!",
                                            "subExpression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionZeroedSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            },
                                            "isPrefix": true
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "previousProduction"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "gooProductionSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "endSnapShot"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "previousProduction"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "lastGooResearchFundClaim"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "endSnapShot"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "referalDivs",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "!=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "referer"
                                        },
                                        "right": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "!=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "referer"
                                        },
                                        "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "referalDivs"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "researchShare"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "100",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "ethBalance"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "referer"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "referalDivs"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "researchShare"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "referalDivs"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "snapshotDailyGooResearchFunding",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "todaysEtherResearchFund",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "/",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "totalEtherGooResearchPool"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "isArray": false
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalEtherGooResearchPool"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "todaysEtherResearchFund"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "totalGooProductionSnapshots"
                                        },
                                        "memberName": "push"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "totalGooProduction"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocatedGooResearchSnapshots"
                                        },
                                        "memberName": "push"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "todaysEtherResearchFund"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "nextSnapshotTime"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "block"
                                            },
                                            "memberName": "timestamp"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "24",
                                            "subdenomination": "hours"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyRaffleTicket",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "raffleEndTime"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "amount"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "ticketsCost",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "SafeMath"
                                        },
                                        "memberName": "mul"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "RAFFLE_TICKET_BASE_GOO_PRICE"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "balanceOf"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "ticketsCost"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGooFromPurchase"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "ticketsCost"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "TicketPurchases"
                                        },
                                        "name": "purchases",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "ticketsBoughtByPlayer"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "purchases"
                                        },
                                        "memberName": "raffleRareId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "raffleRareId"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "purchases"
                                                    },
                                                    "memberName": "numPurchases"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "purchases"
                                                    },
                                                    "memberName": "raffleRareId"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "raffleRareId"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "rafflePlayers"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "raffleRareId"
                                                        }
                                                    },
                                                    "memberName": "push"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "purchases"
                                        },
                                        "memberName": "numPurchases"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "purchases"
                                            },
                                            "memberName": "ticketsBought"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "purchases"
                                                        },
                                                        "memberName": "ticketsBought"
                                                    },
                                                    "memberName": "length"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "purchases"
                                            },
                                            "memberName": "ticketsBought"
                                        },
                                        "index": {
                                            "type": "UnaryOperation",
                                            "operator": "++",
                                            "subExpression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "purchases"
                                                },
                                                "memberName": "numPurchases"
                                            },
                                            "isPrefix": false
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "TicketPurchase"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "raffleTicketsBought"
                                            },
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "raffleTicketsBought"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "amount"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleTicketsBought"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "startRareRaffle",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "endTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "rareId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "validRareId"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "rareId"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "rareItemOwner"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "rareId"
                                                }
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleWinningTicketSelected"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": false
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleTicketThatWon"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleWinner"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleTicketsBought"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleEndTime"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endTime"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleRareId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "rareId"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "awardRafflePrize",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "checkWinner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "checkIndex",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "raffleEndTime"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "raffleWinner"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "rareItemOwner"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "raffleRareId"
                                                }
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "UnaryOperation",
                                    "operator": "!",
                                    "subExpression": {
                                        "type": "Identifier",
                                        "name": "raffleWinningTicketSelected"
                                    },
                                    "isPrefix": true
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "drawRandomWinner"
                                                },
                                                "arguments": [],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "checkWinner"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "UserDefinedTypeName",
                                                        "namePath": "TicketPurchases"
                                                    },
                                                    "name": "tickets",
                                                    "storageLocation": "storage"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "ticketsBoughtByPlayer"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "checkWinner"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tickets"
                                                            },
                                                            "memberName": "numPurchases"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "checkIndex"
                                                        },
                                                        "right": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "tickets"
                                                            },
                                                            "memberName": "numPurchases"
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tickets"
                                                        },
                                                        "memberName": "raffleRareId"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "raffleRareId"
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "VariableDeclarationStatement",
                                                        "variables": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "typeName": {
                                                                    "type": "UserDefinedTypeName",
                                                                    "namePath": "TicketPurchase"
                                                                },
                                                                "name": "checkTicket",
                                                                "storageLocation": "storage"
                                                            }
                                                        ],
                                                        "initialValue": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "tickets"
                                                                },
                                                                "memberName": "ticketsBought"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "checkIndex"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "raffleTicketThatWon"
                                                                },
                                                                "right": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "checkTicket"
                                                                    },
                                                                    "memberName": "startId"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "raffleTicketThatWon"
                                                                },
                                                                "right": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "checkTicket"
                                                                    },
                                                                    "memberName": "endId"
                                                                }
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "assignRafflePrize"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "checkWinner"
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                },
                                                                null
                                                            ]
                                                        },
                                                        "FalseBody": null
                                                    }
                                                ]
                                            },
                                            "FalseBody": null
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "rafflePlayers"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "raffleRareId"
                                            }
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "address"
                                                    },
                                                    "name": "player",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "rafflePlayers"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "raffleRareId"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "UserDefinedTypeName",
                                                        "namePath": "TicketPurchases"
                                                    },
                                                    "name": "playersTickets",
                                                    "storageLocation": "storage"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "ticketsBoughtByPlayer"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "player"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "endIndex",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "playersTickets"
                                                    },
                                                    "memberName": "numPurchases"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "raffleTicketThatWon"
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "playersTickets"
                                                                },
                                                                "memberName": "ticketsBought"
                                                            },
                                                            "index": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "memberName": "startId"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "raffleTicketThatWon"
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "playersTickets"
                                                                },
                                                                "memberName": "ticketsBought"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "endIndex"
                                                            }
                                                        },
                                                        "memberName": "endId"
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ForStatement",
                                                        "initExpression": {
                                                            "type": "VariableDeclarationStatement",
                                                            "variables": [
                                                                {
                                                                    "type": "VariableDeclaration",
                                                                    "typeName": {
                                                                        "type": "ElementaryTypeName",
                                                                        "name": "uint256"
                                                                    },
                                                                    "name": "j",
                                                                    "storageLocation": null
                                                                }
                                                            ],
                                                            "initialValue": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "conditionExpression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "j"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "playersTickets"
                                                                },
                                                                "memberName": "numPurchases"
                                                            }
                                                        },
                                                        "loopExpression": {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "UnaryOperation",
                                                                "operator": "++",
                                                                "subExpression": {
                                                                    "type": "Identifier",
                                                                    "name": "j"
                                                                },
                                                                "isPrefix": false
                                                            }
                                                        },
                                                        "body": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "VariableDeclarationStatement",
                                                                    "variables": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "typeName": {
                                                                                "type": "UserDefinedTypeName",
                                                                                "namePath": "TicketPurchase"
                                                                            },
                                                                            "name": "playerTicket",
                                                                            "storageLocation": "storage"
                                                                        }
                                                                    ],
                                                                    "initialValue": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "playersTickets"
                                                                            },
                                                                            "memberName": "ticketsBought"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "j"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": ">=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "raffleTicketThatWon"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "playerTicket"
                                                                                },
                                                                                "memberName": "startId"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "raffleTicketThatWon"
                                                                            },
                                                                            "right": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "playerTicket"
                                                                                },
                                                                                "memberName": "endId"
                                                                            }
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                    "type": "FunctionCall",
                                                                                    "expression": {
                                                                                        "type": "Identifier",
                                                                                        "name": "assignRafflePrize"
                                                                                    },
                                                                                    "arguments": [
                                                                                        {
                                                                                            "type": "Identifier",
                                                                                            "name": "player"
                                                                                        }
                                                                                    ],
                                                                                    "names": []
                                                                                }
                                                                            },
                                                                            null
                                                                        ]
                                                                    },
                                                                    "FalseBody": null
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": null
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "assignRafflePrize",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "winner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleWinner"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "winner"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareItemOwner"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "raffleRareId"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "winner"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareItemPrice"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "raffleRareId"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "schema"
                                                            },
                                                            "memberName": "rareStartPrice"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "raffleRareId"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "21",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "20",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "updatePlayersGoo"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "winner"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeClass",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "unitId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "upgradeValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeClass"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "unitId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "upgradeValue"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "getRareInfo"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "raffleRareId"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "upgradeUnitMultipliers"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "winner"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeClass"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "unitId"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "upgradeValue"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "drawRandomWinner",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "raffleEndTime"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryOperation",
                                            "operator": "!",
                                            "subExpression": {
                                                "type": "Identifier",
                                                "name": "raffleWinningTicketSelected"
                                            },
                                            "isPrefix": true
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "seed",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleTicketsBought"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleTicketThatWon"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "addmod"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "uint256"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "block"
                                                            },
                                                            "memberName": "blockhash"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "block"
                                                                    },
                                                                    "memberName": "number"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "seed"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "raffleTicketsBought"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "raffleWinningTicketSelected"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "protectAddress",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "exchange",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "isProtected",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "getGooProduction"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "exchange"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "protectedAddresses"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "exchange"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "isProtected"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "attackPlayer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "target",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "battleCooldown"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "target"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "UnaryOperation",
                                            "operator": "!",
                                            "subExpression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "protectedAddresses"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "target"
                                                }
                                            },
                                            "isPrefix": true
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "attackingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "defendingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "stealingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "attackingPower"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "defendingPower"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "stealingPower"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "getPlayersBattlePower"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "target"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "battleCooldown"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "target"
                                        }
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "defendingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "schema"
                                                        },
                                                        "memberName": "getWeakenedDefensePower"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "defendingPower"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "attackingPower"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "defendingPower"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "battleCooldown"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "block"
                                                        },
                                                        "memberName": "timestamp"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "30",
                                                        "subdenomination": "minutes"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "balanceOf"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "target"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "stealingPower"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "VariableDeclarationStatement",
                                                        "variables": [
                                                            {
                                                                "type": "VariableDeclaration",
                                                                "typeName": {
                                                                    "type": "ElementaryTypeName",
                                                                    "name": "uint256"
                                                                },
                                                                "name": "unclaimedGoo",
                                                                "storageLocation": null
                                                            }
                                                        ],
                                                        "initialValue": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "balanceOfUnclaimedGoo"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "stealingPower"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "unclaimedGoo"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "VariableDeclarationStatement",
                                                                    "variables": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "typeName": {
                                                                                "type": "ElementaryTypeName",
                                                                                "name": "uint256"
                                                                            },
                                                                            "name": "gooDecrease",
                                                                            "storageLocation": null
                                                                        }
                                                                    ],
                                                                    "initialValue": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "stealingPower"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "unclaimedGoo"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "-=",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "gooBalance"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "target"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "gooDecrease"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "VariableDeclarationStatement",
                                                                    "variables": [
                                                                        {
                                                                            "type": "VariableDeclaration",
                                                                            "typeName": {
                                                                                "type": "ElementaryTypeName",
                                                                                "name": "uint256"
                                                                            },
                                                                            "name": "gooGain",
                                                                            "storageLocation": null
                                                                        }
                                                                    ],
                                                                    "initialValue": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "-",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "unclaimedGoo"
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "stealingPower"
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "+=",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "gooBalance"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "target"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "gooGain"
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "gooBalance"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "stealingPower"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "EmitStatement",
                                                        "eventCall": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "PlayerAttacked"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                },
                                                                {
                                                                    "type": "BooleanLiteral",
                                                                    "value": true
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "stealingPower"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "EmitStatement",
                                                        "eventCall": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "PlayerAttacked"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                },
                                                                {
                                                                    "type": "BooleanLiteral",
                                                                    "value": true
                                                                },
                                                                {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "balanceOf"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "target"
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "gooBalance"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "balanceOf"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "target"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "gooBalance"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "lastGooSaveTime"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "target"
                                                    }
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "block"
                                                    },
                                                    "memberName": "timestamp"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "battleCooldown"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "block"
                                                        },
                                                        "memberName": "timestamp"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": "minutes"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "EmitStatement",
                                            "eventCall": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "PlayerAttacked"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "target"
                                                    },
                                                    {
                                                        "type": "BooleanLiteral",
                                                        "value": false
                                                    },
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getPlayersBattlePower",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "attacker",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "defender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "battleUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "attackingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "defendingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "stealingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attackingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsAttack"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "attacker"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "attacker"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "stealingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsStealingCapacity"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "attacker"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "attacker"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "defendingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsDefense"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "defender"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "defender"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "attackingPower"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "defendingPower"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "stealingPower"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getPlayersBattleStats",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "battleUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "attackingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "defendingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "stealingPower",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attackingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsAttack"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "stealingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsStealingCapacity"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "defendingPower"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "getUnitsDefense"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "player"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        },
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitsOwned"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "startId"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "attackingPower"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "defendingPower"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "stealingPower"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getUnitsProduction",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "schema"
                                                                    },
                                                                    "memberName": "unitGooProduction"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "right": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitGooProductionIncreases"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitGooProductionMultiplier"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        }
                                    ],
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getUnitsAttack",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "schema"
                                                                    },
                                                                    "memberName": "unitAttack"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "right": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitAttackIncreases"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitAttackMultiplier"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        }
                                    ],
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getUnitsDefense",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "schema"
                                                                    },
                                                                    "memberName": "unitDefense"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "right": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitDefenseIncreases"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitDefenseMultiplier"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        }
                                    ],
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getUnitsStealingCapacity",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "*",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "amount"
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "schema"
                                                                    },
                                                                    "memberName": "unitStealingCapacity"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "unitId"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "right": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "unitGooStealingIncreases"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "player"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitGooStealingMultiplier"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "player"
                                                                }
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        }
                                    ],
                                    "isArray": false
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "10",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getGameInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "bool"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "length": null
                                        },
                                        "name": "units",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "length": null
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "currentNumberOfUnits"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "bool"
                                            },
                                            "length": null
                                        },
                                        "name": "upgrades",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "bool"
                                            },
                                            "length": null
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "currentNumberOfUpgrades"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "productionUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "i",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "units"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitsOwned"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "startId"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "battleUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "units"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "unitsOwned"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "startId"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "upgradeIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "upgrades"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "upgradesOwned"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "startId"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "totalEtherGooResearchPool"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "totalGooProduction"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "nextSnapshotTime"
                                    },
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "balanceOf"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": []
                                    },
                                    {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "ethBalance"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "getGooProduction"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": []
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "units"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "upgrades"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getRareItemInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "length": null
                                        },
                                        "name": "itemOwners",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "length": null
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "currentNumberOfRares"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "length": null
                                        },
                                        "name": "itemPrices",
                                        "storageLocation": "memory"
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "NewExpression",
                                        "typeName": {
                                            "type": "ArrayTypeName",
                                            "baseTypeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "length": null
                                        }
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "schema"
                                                },
                                                "memberName": "currentNumberOfRares"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "rareIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "i",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "itemOwners"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "rareItemOwner"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "startId"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "itemPrices"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "rareItemPrice"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "startId"
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "isPrefix": false
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "itemOwners"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "itemPrices"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "viewUnclaimedResearchDividends",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startSnapshot",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "lastGooResearchFundClaim"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "latestSnapshot",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocatedGooResearchSnapshots"
                                        },
                                        "memberName": "length"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "researchShare",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "previousProduction",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "gooProductionSnapshots"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "index": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "lastGooResearchFundClaim"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "Identifier",
                                        "name": "startSnapshot"
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "latestSnapshot"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "productionDuringSnapshot",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "bool"
                                                    },
                                                    "name": "soldAllProduction",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "gooProductionZeroedSnapshots"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "productionDuringSnapshot"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "UnaryOperation",
                                                    "operator": "!",
                                                    "subExpression": {
                                                        "type": "Identifier",
                                                        "name": "soldAllProduction"
                                                    },
                                                    "isPrefix": true
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "productionDuringSnapshot"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "previousProduction"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "previousProduction"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "productionDuringSnapshot"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "researchShare"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "allocatedGooResearchSnapshots"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "productionDuringSnapshot"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "totalGooProductionSnapshots"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "researchShare"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "startSnapshot"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "latestSnapshot"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getRafflePlayers",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "raffleId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rafflePlayers"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "raffleId"
                                        }
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getPlayersTickets",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "TicketPurchases"
                                        },
                                        "name": "playersTickets",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "ticketsBoughtByPlayer"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "player"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "playersTickets"
                                        },
                                        "memberName": "raffleRareId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "raffleRareId"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ArrayTypeName",
                                                        "baseTypeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "length": null
                                                    },
                                                    "name": "startIds",
                                                    "storageLocation": "memory"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "NewExpression",
                                                    "typeName": {
                                                        "type": "ArrayTypeName",
                                                        "baseTypeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "length": null
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "playersTickets"
                                                        },
                                                        "memberName": "numPurchases"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ArrayTypeName",
                                                        "baseTypeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "length": null
                                                    },
                                                    "name": "endIds",
                                                    "storageLocation": "memory"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "NewExpression",
                                                    "typeName": {
                                                        "type": "ArrayTypeName",
                                                        "baseTypeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "length": null
                                                    }
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "playersTickets"
                                                        },
                                                        "memberName": "numPurchases"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ForStatement",
                                            "initExpression": {
                                                "type": "VariableDeclarationStatement",
                                                "variables": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "name": "i",
                                                        "storageLocation": null
                                                    }
                                                ],
                                                "initialValue": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "conditionExpression": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "playersTickets"
                                                    },
                                                    "memberName": "numPurchases"
                                                }
                                            },
                                            "loopExpression": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "UnaryOperation",
                                                    "operator": "++",
                                                    "subExpression": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    },
                                                    "isPrefix": false
                                                }
                                            },
                                            "body": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "startIds"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "playersTickets"
                                                                        },
                                                                        "memberName": "ticketsBought"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "memberName": "startId"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "endIds"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "playersTickets"
                                                                        },
                                                                        "memberName": "ticketsBought"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "memberName": "endId"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "startIds"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "endIds"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getLatestRaffleInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "Identifier",
                                        "name": "raffleEndTime"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "raffleRareId"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "raffleTicketsBought"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "raffleWinner"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "raffleTicketThatWon"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "updateGooConfig",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "newSchemaAddress",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "GooGameConfig"
                                        },
                                        "name": "newSchema",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "GooGameConfig"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "newSchemaAddress"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "requireExistingUnitsSame"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "newSchema"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "requireExistingUpgradesSame"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "newSchema"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "schema"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "GooGameConfig"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "newSchema"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "requireExistingUnitsSame",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "GooGameConfig"
                                },
                                "name": "newSchema",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "productionUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitEthCost"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitEthCost"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitGooProduction"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitGooProduction"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "battleUnitIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitEthCost"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitEthCost"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitAttack"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitAttack"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitDefense"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitDefense"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "schema"
                                                                },
                                                                "memberName": "unitStealingCapacity"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "newSchema"
                                                                },
                                                                "memberName": "unitStealingCapacity"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "startId"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "requireExistingUpgradesSame",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "GooGameConfig"
                                },
                                "name": "newSchema",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "startId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "endId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "oldClass",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "oldUnitId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "oldValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newClass",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newUnitId",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "rareIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "oldGooCost",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": null
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "oldEthCost",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldGooCost"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldEthCost"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldClass"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldUnitId"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldValue"
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "schema"
                                                        },
                                                        "memberName": "getUpgradeInfo"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "newGooCost",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": null
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "newEthCost",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": null
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newGooCost"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newEthCost"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newClass"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newUnitId"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newValue"
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "newSchema"
                                                        },
                                                        "memberName": "getUpgradeInfo"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldGooCost"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newGooCost"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldEthCost"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "oldEthCost"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldClass"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "oldClass"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldUnitId"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newUnitId"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldValue"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newValue"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "Identifier",
                                                "name": "startId"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "endId"
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "schema"
                                            },
                                            "memberName": "rareIdRange"
                                        },
                                        "arguments": [],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "WhileStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startId"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endId"
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldClass"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldUnitId"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "oldValue"
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "schema"
                                                        },
                                                        "memberName": "getRareInfo"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newClass"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newUnitId"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "newValue"
                                                        }
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "newSchema"
                                                        },
                                                        "memberName": "getRareInfo"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "startId"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldClass"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newClass"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldUnitId"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newUnitId"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "oldValue"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "newValue"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "++",
                                                "subExpression": {
                                                    "type": "Identifier",
                                                    "name": "startId"
                                                },
                                                "isPrefix": false
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "GooGameConfig",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Unit"
                                }
                            },
                            "name": "unitInfo",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Upgrade"
                                }
                            },
                            "name": "upgradeInfo",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Rare"
                                }
                            },
                            "name": "rareInfo",
                            "expression": null,
                            "visibility": "private",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "currentNumberOfUnits",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "14",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "14",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "currentNumberOfUpgrades",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "42",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "42",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "currentNumberOfRares",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "2",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "2",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StructDefinition",
                    "name": "Unit",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "unitId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "baseGooCost",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "gooCostIncreaseHalf",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ethCost",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "baseGooProduction",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "attackValue",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "defenseValue",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "gooStealingCapacity",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Upgrade",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "upgradeId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "gooCost",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ethCost",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "upgradeClass",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "unitId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "upgradeValue",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Rare",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "rareId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ethCost",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "rareClass",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "unitId",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "rareValue",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "FunctionDefinition",
                    "name": "GooGameConfig",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "3",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.01",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "12",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "250",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "5",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1250",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "6",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "7",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.05",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "60",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "8",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "12500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "40",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "20",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "41",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "41",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "250",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "125",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "42",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "42",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.01",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "43",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "43",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "44",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "44",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1250",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "20",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "unitInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "45",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Unit"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "45",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.02",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1000",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "3",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "4",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "5",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "6",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "7",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "8",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "9",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "9",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "10",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "11",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "11",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "12",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "12",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "13",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "13",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "14",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "14",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "15",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "15",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "16",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "16",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "17",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "17",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "18",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "18",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "19",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "13",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "20",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "20",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "21",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "21",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "22",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "22",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "23",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "23",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "24",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "24",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "8",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "25",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "26",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "26",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "27",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "27",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "28",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "28",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "41",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "29",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "29",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "41",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "30",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "41",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "31",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "31",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "42",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "32",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "32",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "42",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "33",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "33",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "20000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "42",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "34",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "34",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "43",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "35",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "35",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "43",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "36",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "36",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "43",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "37",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "37",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.1",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "44",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "15",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "38",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "38",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "25000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "44",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "39",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "39",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.2",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "44",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "15",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "40",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "40",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "6",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "45",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "41",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "41",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "45",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "upgradeInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "42",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Upgrade"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "42",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "250000",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "7",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "45",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Rare"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "rareInfo"
                                        },
                                        "index": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Rare"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0.5",
                                                "subdenomination": "ether"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getGooCostForUnit",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "existing",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "amount"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "existing"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "unitInfo"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "unitId"
                                                            }
                                                        },
                                                        "memberName": "baseGooCost"
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "unitInfo"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "unitId"
                                                                }
                                                            },
                                                            "memberName": "baseGooCost"
                                                        },
                                                        "right": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "existing"
                                                                        },
                                                                        "right": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitInfo"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "unitId"
                                                                                }
                                                                            },
                                                                            "memberName": "gooCostIncreaseHalf"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "2",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": ">",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "amount"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "VariableDeclarationStatement",
                                                "variables": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "name": "existingCost",
                                                        "storageLocation": null
                                                    }
                                                ],
                                                "initialValue": null
                                            },
                                            {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "existing"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "existingCost"
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "+",
                                                                    "left": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitInfo"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitId"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "baseGooCost"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "existing"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    },
                                                                    "right": {
                                                                        "type": "TupleExpression",
                                                                        "components": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "*",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "*",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "existing"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "TupleExpression",
                                                                                        "components": [
                                                                                            {
                                                                                                "type": "BinaryOperation",
                                                                                                "operator": "-",
                                                                                                "left": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "existing"
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "NumberLiteral",
                                                                                                    "number": "1",
                                                                                                    "subdenomination": null
                                                                                                }
                                                                                            }
                                                                                        ],
                                                                                        "isArray": false
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "MemberAccess",
                                                                                    "expression": {
                                                                                        "type": "IndexAccess",
                                                                                        "base": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitInfo"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "Identifier",
                                                                                            "name": "unitId"
                                                                                        }
                                                                                    },
                                                                                    "memberName": "gooCostIncreaseHalf"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "isArray": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": null
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "+=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "existing"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "amount"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "VariableDeclarationStatement",
                                                "variables": [
                                                    {
                                                        "type": "VariableDeclaration",
                                                        "typeName": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "uint256"
                                                        },
                                                        "name": "newCost",
                                                        "storageLocation": null
                                                    }
                                                ],
                                                "initialValue": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "SafeMath"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "SafeMath"
                                                                },
                                                                "memberName": "mul"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "unitInfo"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "memberName": "baseGooCost"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "existing"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "SafeMath"
                                                                },
                                                                "memberName": "mul"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "SafeMath"
                                                                        },
                                                                        "memberName": "mul"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "existing"
                                                                        },
                                                                        {
                                                                            "type": "TupleExpression",
                                                                            "components": [
                                                                                {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "existing"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "NumberLiteral",
                                                                                        "number": "1",
                                                                                        "subdenomination": null
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "isArray": false
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "unitInfo"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "unitId"
                                                                        }
                                                                    },
                                                                    "memberName": "gooCostIncreaseHalf"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "-",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "newCost"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "existingCost"
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": null
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getWeakenedDefensePower",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "defendingPower",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "Identifier",
                                    "name": "defendingPower"
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "2",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "validUnitId",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "BinaryOperation",
                                        "operator": "||",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "9",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "39",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "unitId"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "46",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "validUpgradeId",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "43",
                                                "subdenomination": null
                                            }
                                        }
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "validRareId",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "rareId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            }
                                        }
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "unitEthCost",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "unitInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "unitId"
                                    }
                                },
                                "memberName": "ethCost"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "unitGooProduction",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "unitInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "unitId"
                                    }
                                },
                                "memberName": "baseGooProduction"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "unitAttack",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "unitInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "unitId"
                                    }
                                },
                                "memberName": "attackValue"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "unitDefense",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "unitInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "unitId"
                                    }
                                },
                                "memberName": "defenseValue"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "unitStealingCapacity",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "unitId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "unitInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "unitId"
                                    }
                                },
                                "memberName": "gooStealingCapacity"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "rareStartPrice",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "rareId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "rareInfo"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "rareId"
                                    }
                                },
                                "memberName": "ethCost"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "productionUnitIdRange",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    },
                                    {
                                        "type": "NumberLiteral",
                                        "number": "8",
                                        "subdenomination": null
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "battleUnitIdRange",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "40",
                                        "subdenomination": null
                                    },
                                    {
                                        "type": "NumberLiteral",
                                        "number": "45",
                                        "subdenomination": null
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "upgradeIdRange",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    },
                                    {
                                        "type": "NumberLiteral",
                                        "number": "42",
                                        "subdenomination": null
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "rareIdRange",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    },
                                    {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getUpgradeInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "upgradeId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradeInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        },
                                        "memberName": "gooCost"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradeInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        },
                                        "memberName": "ethCost"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradeInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        },
                                        "memberName": "upgradeClass"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradeInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        },
                                        "memberName": "unitId"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "upgradeInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "upgradeId"
                                            }
                                        },
                                        "memberName": "upgradeValue"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getRareInfo",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "rareId",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "TupleExpression",
                                "components": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "rareInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            }
                                        },
                                        "memberName": "rareClass"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "rareInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            }
                                        },
                                        "memberName": "unitId"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "rareInfo"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "rareId"
                                            }
                                        },
                                        "memberName": "rareValue"
                                    }
                                ],
                                "isArray": false
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "b"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                    "type": "Identifier",
                                    "name": "a"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "b"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        }
    ]
}