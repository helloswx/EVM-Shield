{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.24"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "c",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "c"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "c",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "c"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "-",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "c",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "c"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "c"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "b"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "c",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "c"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath8",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath16",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "b"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "Address",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "isContract",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "account",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "size",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": [
                                        {
                                            "type": "AssemblyAssignment",
                                            "names": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                }
                                            ],
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "extcodesize",
                                                "arguments": [
                                                    {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "account",
                                                        "arguments": []
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": ">",
                                "left": {
                                    "type": "Identifier",
                                    "name": "size"
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "master",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "inquire_location",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "inquire_slave_address",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_slave",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "inquire_land_info",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_city",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "domain_attribute",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_city",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "_index",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "inquire_tot_attribute",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_slave",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_domain",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                    },
                                    "length": {
                                        "type": "NumberLiteral",
                                        "number": "5",
                                        "subdenomination": null
                                    }
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "inquire_owner",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "_city",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "material",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "control_burn",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "boxIndex",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "materialIndex",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "target",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "owned",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "manager",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "manager"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "ModifierDefinition",
                    "name": "onlymanager",
                    "parameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "manager"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferownership",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_new_manager",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "manager"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_new_manager"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlymanager",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "mix",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "owned"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "EventDefinition",
                    "name": "mix_result",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "player",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "result",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "rate",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "arina_address",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xe6987cd613dfda0995a95b3e6acbabececd41376",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xe6987cd613dfda0995a95b3e6acbabececd41376",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "master_address",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x0ac10bf0342fa2724e93d250751186ba5b659303",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x0ac10bf0342fa2724e93d250751186ba5b659303",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "material_contract",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x65844f2e98495b6c8780f689c5d13bb7f4975d65",
                                "subdenomination": null
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x65844f2e98495b6c8780f689c5d13bb7f4975d65",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramA",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramB",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramC",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramD",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramE",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ArrayTypeName",
                                "baseTypeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "length": {
                                    "type": "NumberLiteral",
                                    "number": "5",
                                    "subdenomination": null
                                }
                            },
                            "name": "paramF",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramA"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramB"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "5",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramC"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "200",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramD"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "300",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "150",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramE"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "400",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "200",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "150",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "50",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "paramF"
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "500",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "300",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "200",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "150",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "100",
                                                "subdenomination": null
                                            }
                                        ],
                                        "isArray": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                    },
                    "libraryName": "SafeMath"
                },
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint16"
                    },
                    "libraryName": "SafeMath16"
                },
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint8"
                    },
                    "libraryName": "SafeMath8"
                },
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                    },
                    "libraryName": "Address"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_material_contract",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_material_contract",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "material_contract"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_material_contract"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlymanager",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_master",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_new_master",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "master_address"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_new_master"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlymanager",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "materialMix",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "city",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "id",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "proIndex",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                    },
                                    "length": null
                                },
                                "name": "mixArray",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "master"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "master_address"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "inquire_owner"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "city"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "name": "_city",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "isStateVar": false,
                                        "isIndexed": false,
                                        "decl": {}
                                    },
                                    {
                                        "type": "VariableDeclaration",
                                        "name": "_id",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "isStateVar": false,
                                        "isIndexed": false,
                                        "decl": {}
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "master"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "master_address"
                                                }
                                            ],
                                            "names": []
                                        },
                                        "memberName": "inquire_location"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "city"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_city"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "id"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_id"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "produce",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "attribute",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "index2",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "total",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint16"
                                        },
                                        "name": "random",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint16"
                                    },
                                    "arguments": [
                                        {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "keccak256"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "abi"
                                                                },
                                                                "memberName": "encodePacked"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "now"
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "mixArray"
                                                                    },
                                                                    "memberName": "length"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "proIndex"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "produce"
                                                        },
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null,
                                                        null
                                                    ],
                                                    "isArray": false
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "master"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "master_address"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "memberName": "inquire_land_info"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "city"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "proIndex"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            null,
                                                            {
                                                                "type": "Identifier",
                                                                "name": "produce"
                                                            },
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null,
                                                            null
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "master"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "master_address"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "inquire_land_info"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "city"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "id"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "proIndex"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                null,
                                                                null,
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "produce"
                                                                },
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                null,
                                                                null
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "master"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "Identifier",
                                                                            "name": "master_address"
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                },
                                                                "memberName": "inquire_land_info"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "city"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "id"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "proIndex"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "4",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "produce"
                                                                    },
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null
                                                                ],
                                                                "isArray": false
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "master"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "master_address"
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    },
                                                                    "memberName": "inquire_land_info"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "city"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "id"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "produce"
                                                                    },
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null,
                                                                    null
                                                                ],
                                                                "isArray": false
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "master"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "master_address"
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    },
                                                                    "memberName": "inquire_land_info"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "city"
                                                                    },
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "id"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "attribute"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "produce"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "master"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "master_address"
                                                                }
                                                            ],
                                                            "names": []
                                                        },
                                                        "memberName": "inquire_tot_attribute"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "city"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "index": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "proIndex"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attribute"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attribute"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "10",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "attribute"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "index2"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "attribute"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "attribute"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "4",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                            "type": "BinaryOperation",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "index2"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "1",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attribute"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "attribute"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "6",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "index2"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "attribute"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "attribute"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "8",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index2"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "3",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "FalseBody": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index2"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "BinaryOperation",
                                        "operator": "=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "mixArray"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "total"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "total"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "getParam"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "mixArray"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "index2"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint8"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "mixArray"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "proIndex"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "Identifier",
                                                                    "name": "mixArray"
                                                                },
                                                                "index": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "%",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "mixArray"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "30",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "proIndex"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "3",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "mixArray"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "%",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "mixArray"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "40",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "proIndex"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "4",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "Identifier",
                                                                            "name": "mixArray"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "%",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "mixArray"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "60",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "proIndex"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "5",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "IndexAccess",
                                                                            "base": {
                                                                                "type": "Identifier",
                                                                                "name": "mixArray"
                                                                            },
                                                                            "index": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "%",
                                                                            "left": {
                                                                                "type": "IndexAccess",
                                                                                "base": {
                                                                                    "type": "Identifier",
                                                                                    "name": "mixArray"
                                                                                },
                                                                                "index": {
                                                                                    "type": "Identifier",
                                                                                    "name": "i"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "68",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": null
                                                    }
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "material"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "material_contract"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "control_burn"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "proIndex"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "mixArray"
                                                                    },
                                                                    "index": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "1",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "%",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "random"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1000",
                                                    "subdenomination": null
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "total"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "master"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "master_address"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "domain_attribute"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "city"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "id"
                                                    },
                                                    {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "proIndex"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "EmitStatement",
                                            "eventCall": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "mix_result"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "BooleanLiteral",
                                                        "value": true
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "total"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "EmitStatement",
                                            "eventCall": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "mix_result"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "BooleanLiteral",
                                                        "value": false
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "total"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "getParam",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "index1",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": "index2",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint16"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "||",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "||",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "6",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "31",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "index1"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "32",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "40",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "46",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "index1"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "61",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "index1"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "62",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "TupleExpression",
                                        "components": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index1"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "68",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index1"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "74",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        ],
                                        "isArray": false
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "paramA"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "index2"
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "||",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": ">",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index1"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "5",
                                                                                "subdenomination": null
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index1"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "11",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "33",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "34",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "45",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "<",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "51",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index1"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "63",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "index1"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "64",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "right": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "index1"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "73",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "index1"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "79",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "paramB"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "index2"
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "TupleExpression",
                                                                    "components": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": ">",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "16",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "isArray": false
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "35",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "36",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "index1"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "50",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "<",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "index1"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "56",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "index1"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "65",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "index1"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "66",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "78",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "84",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "paramC"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "index2"
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "||",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "TupleExpression",
                                                                "components": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": ">",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index1"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "15",
                                                                                "subdenomination": null
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index1"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "21",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                ],
                                                                "isArray": false
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "37",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "38",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "55",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "<",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "61",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                },
                                                "right": {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "83",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "89",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "paramD"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "index2"
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "||",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "||",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "||",
                                                                "left": {
                                                                    "type": "TupleExpression",
                                                                    "components": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": ">",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "25",
                                                                                    "subdenomination": null
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index1"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "31",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        }
                                                                    ],
                                                                    "isArray": false
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "index1"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "39",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "==",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index1"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "40",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "index1"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "67",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "index1"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "68",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "paramF"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "index2"
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "paramE"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "index2"
                                                            }
                                                        }
                                                    ]
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "private",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            ],
            "kind": "contract"
        }
    ]
}