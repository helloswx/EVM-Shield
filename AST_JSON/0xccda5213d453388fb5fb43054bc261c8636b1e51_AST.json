{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.25"
        },
        {
            "type": "ContractDefinition",
            "name": "owned",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "owner",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "ModifierDefinition",
                    "name": "onlyOwner",
                    "parameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferOwnership",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "newOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newOwner"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "ERC20Basic",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "totalSupply",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "who",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "game",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "owned"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "stop",
                            "expression": {
                                "type": "BooleanLiteral",
                                "value": false
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BooleanLiteral",
                        "value": false
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "tokenAddress_GIC",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0x340e85491c5F581360811d0cE5CC7476c72900Ba",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0x340e85491c5F581360811d0cE5CC7476c72900Ba",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "tokenAddress_Arina",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xE6987CD613Dfda0995A95b3E6acBAbECecd41376",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xE6987CD613Dfda0995A95b3E6acBAbECecd41376",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "address_A",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xcC22f3Bd8c684463c0Ed6659a001AA62e0a7A146",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xcC22f3Bd8c684463c0Ed6659a001AA62e0a7A146",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "address_B",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0xb0D63Fcfb2101C8a1B9b2f0Ff96A13CfEA1A2E65",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0xb0D63Fcfb2101C8a1B9b2f0Ff96A13CfEA1A2E65",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                }
                            },
                            "name": "readyTime",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "airdrop_GIC",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "25",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "25",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "airdrop_Arina",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "500",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "8",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "500",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "8",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "total_airdrop_GIC",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "21000000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "21000000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "total_airdrop_Arina",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "84000000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "8",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "84000000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "8",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "sent_times",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "0",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "sent_limit",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "/",
                                "left": {
                                    "type": "Identifier",
                                    "name": "total_airdrop_GIC"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "airdrop_GIC"
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "/",
                        "left": {
                            "type": "Identifier",
                            "name": "total_airdrop_GIC"
                        },
                        "right": {
                            "type": "Identifier",
                            "name": "airdrop_GIC"
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "cooldown",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "600",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "600",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint24"
                            },
                            "name": "Probability",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1000000",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1000000",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint"
                            },
                            "name": "random_source",
                            "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "arguments": [
                                    {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "keccak256"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "difficulty"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "now"
                                            }
                                        ],
                                        "names": []
                                    }
                                ],
                                "names": []
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "FunctionCall",
                        "expression": {
                            "type": "ElementaryTypeName",
                            "name": "uint"
                        },
                        "arguments": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "keccak256"
                                },
                                "arguments": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "difficulty"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "now"
                                    }
                                ],
                                "names": []
                            }
                        ],
                        "names": []
                    }
                },
                {
                    "type": "EventDefinition",
                    "name": "Play_game",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "player",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "comp",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "record",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Random",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint24"
                                },
                                "name": "random_player",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint24"
                                },
                                "name": "random_lottery",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "stop_game",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "stop"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "start_game",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "stop"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": false
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_address_GIC",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "new_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "tokenAddress_GIC"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "new_address"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_address_Arina",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "new_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "tokenAddress_Arina"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "new_address"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_address_A",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "new_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "address_A"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "new_address"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_address_B",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "new_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "address_B"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "new_address"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "set_cooldown",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "new_cooldown",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "cooldown"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "new_cooldown"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdraw_GIC",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "ERC20Basic"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "tokenAddress_GIC"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "memberName": "transfer"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "owner"
                                                },
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "18",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdraw_Arina",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "ERC20Basic"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "tokenAddress_Arina"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "memberName": "transfer"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "owner"
                                                },
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_amount"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "8",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "withdraw_eth",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "owner"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "this"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "memberName": "balance"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()payablepublic{if(msg.value==0){play_game(0);}}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "play_game"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "play_paper",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "play_game"
                                    },
                                    "arguments": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "play_scissors",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "play_game"
                                    },
                                    "arguments": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "play_stone",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "play_game"
                                    },
                                    "arguments": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "play_game",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "stop"
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": false
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "readyTime"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "player"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "sent_times"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "sent_limit"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "random_source"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "comp",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint8"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "%",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "uint"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "keccak256"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "random_source"
                                                            },
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "memberName": "difficulty"
                                                            },
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "memberName": "timestamp"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "result",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "compare"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "comp"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "result"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "2",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "sent_times"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "ERC20Basic"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "tokenAddress_GIC"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "transfer"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "airdrop_GIC"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "name": "_player_amount",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "isStateVar": false,
                                                    "isIndexed": false,
                                                    "decl": {}
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "name": "addressA_amount",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "isStateVar": false,
                                                    "isIndexed": false,
                                                    "decl": {}
                                                },
                                                {
                                                    "type": "VariableDeclaration",
                                                    "name": "addressB_amount",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "isStateVar": false,
                                                    "isIndexed": false,
                                                    "decl": {}
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "Arina_amount"
                                                },
                                                "arguments": [],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "ERC20Basic"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "tokenAddress_Arina"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "transfer"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "_player_amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "ERC20Basic"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "tokenAddress_Arina"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "transfer"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "address_A"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "addressA_amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "ERC20Basic"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "Identifier",
                                                                        "name": "tokenAddress_Arina"
                                                                    }
                                                                ],
                                                                "names": []
                                                            },
                                                            "memberName": "transfer"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "address_B"
                                                            },
                                                            {
                                                                "type": "Identifier",
                                                                "name": "addressB_amount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "result"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": []
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "result"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "readyTime"
                                                            },
                                                            "index": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "sender"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "memberName": "timestamp"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "cooldown"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "revert"
                                                },
                                                "arguments": [],
                                                "names": []
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "bal",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "ERC20Basic"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tokenAddress_GIC"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "memberName": "balanceOf"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "this"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "ERC20Basic"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tokenAddress_Arina"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "memberName": "balanceOf"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "this"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint24"
                                        },
                                        "name": "random_player",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint24"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "keccak256"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "now"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "random_source"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Probability"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint24"
                                        },
                                        "name": "random_lottery",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "%",
                                    "left": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint24"
                                        },
                                        "arguments": [
                                            {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "keccak256"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "random_source"
                                                    },
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "block"
                                                        },
                                                        "memberName": "difficulty"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "bal"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        ],
                                        "names": []
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "Probability"
                                    }
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Play_game"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "player"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "comp"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "result"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "EmitStatement",
                                "eventCall": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Random"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "random_player"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "random_lottery"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "random_player"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "random_lottery"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint8"
                                                    },
                                                    "name": "_level",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "level_judgment"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint"
                                                    },
                                                    "name": "_eth",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "eth_amount_judgment"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "_level"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "ElementaryTypeName",
                                                            "name": "address"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "this"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "balance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "_eth"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                "memberName": "transfer"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "_eth"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                "memberName": "transfer"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "ElementaryTypeName",
                                                                            "name": "address"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "Identifier",
                                                                                "name": "this"
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    },
                                                                    "memberName": "balance"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "compare",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "_player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_comp",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "result",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "_result",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_player"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_comp"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_result"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_player"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_comp"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_result"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_player"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_comp"
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_result"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_player"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "_comp"
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_result"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "2",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_result"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "0",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "_result"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Arina_judgment",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "Arina_totBalance",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "ERC20Basic"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "tokenAddress_Arina"
                                                }
                                            ],
                                            "names": []
                                        },
                                        "memberName": "balanceOf"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "this"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "Arina_totBalance"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "total_airdrop_Arina"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "Identifier",
                                            "name": "airdrop_Arina"
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "total_airdrop_Arina"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "Arina_totBalance"
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "Arina_totBalance"
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "total_airdrop_Arina"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "4",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "BinaryOperation",
                                                "operator": "/",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "airdrop_Arina"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "2",
                                                    "subdenomination": null
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "total_airdrop_Arina"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "Arina_totBalance"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "Arina_totBalance"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "total_airdrop_Arina"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "8",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "airdrop_Arina"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "total_airdrop_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "8",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "Arina_totBalance"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "Arina_totBalance"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "total_airdrop_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "16",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "airdrop_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "8",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "total_airdrop_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "16",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "Arina_totBalance"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "Arina_totBalance"
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "total_airdrop_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "32",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "airdrop_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "16",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "total_airdrop_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "32",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "Arina_totBalance"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "Arina_totBalance"
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "total_airdrop_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "64",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "airdrop_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "32",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "total_airdrop_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "64",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "Arina_totBalance"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "Arina_totBalance"
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "total_airdrop_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "128",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "airdrop_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "64",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "IfStatement",
                                                            "condition": {
                                                                "type": "BinaryOperation",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": ">",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "total_airdrop_Arina"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "128",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "Arina_totBalance"
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": ">=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "Arina_totBalance"
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "total_airdrop_Arina"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "256",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "TrueBody": {
                                                                "type": "Block",
                                                                "statements": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "/",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "airdrop_Arina"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "128",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "FalseBody": {
                                                                "type": "IfStatement",
                                                                "condition": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "total_airdrop_Arina"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "256",
                                                                                "subdenomination": null
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "Arina_totBalance"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "Arina_totBalance"
                                                                        },
                                                                        "right": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "total_airdrop_Arina"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "512",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "TrueBody": {
                                                                    "type": "Block",
                                                                    "statements": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "airdrop_Arina"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "256",
                                                                                "subdenomination": null
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "FalseBody": {
                                                                    "type": "IfStatement",
                                                                    "condition": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": ">",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "/",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "total_airdrop_Arina"
                                                                            },
                                                                            "right": {
                                                                                "type": "NumberLiteral",
                                                                                "number": "512",
                                                                                "subdenomination": null
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "Arina_totBalance"
                                                                        }
                                                                    },
                                                                    "TrueBody": {
                                                                        "type": "Block",
                                                                        "statements": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "/",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "airdrop_Arina"
                                                                                },
                                                                                "right": {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "512",
                                                                                    "subdenomination": null
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "FalseBody": {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "revert"
                                                                            },
                                                                            "arguments": [],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "level_judgment",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "_level",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "GIC_balance",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "ERC20Basic"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "tokenAddress_GIC"
                                                }
                                            ],
                                            "names": []
                                        },
                                        "memberName": "balanceOf"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_address"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "GIC_balance"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "NumberLiteral",
                                            "number": "1000",
                                            "subdenomination": null
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "18",
                                                "subdenomination": null
                                            }
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "1000",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "**",
                                                    "left": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "18",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "GIC_balance"
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "GIC_balance"
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "*",
                                                "left": {
                                                    "type": "NumberLiteral",
                                                    "number": "10000",
                                                    "subdenomination": null
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "**",
                                                    "left": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "18",
                                                        "subdenomination": null
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "2",
                                                "subdenomination": null
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "NumberLiteral",
                                                        "number": "10000",
                                                        "subdenomination": null
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "18",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "GIC_balance"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "GIC_balance"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "NumberLiteral",
                                                        "number": "100000",
                                                        "subdenomination": null
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "**",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "18",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "3",
                                                    "subdenomination": null
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "100000",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "**",
                                                            "left": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "18",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "GIC_balance"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "GIC_balance"
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "500000",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "**",
                                                            "left": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "18",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "4",
                                                        "subdenomination": null
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "NumberLiteral",
                                                            "number": "500000",
                                                            "subdenomination": null
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "**",
                                                            "left": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "18",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "GIC_balance"
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "NumberLiteral",
                                                            "number": "5",
                                                            "subdenomination": null
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "revert"
                                                        },
                                                        "arguments": [],
                                                        "names": []
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "eth_amount_judgment",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "_level",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_eth",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_level"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": "ether"
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_level"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": "ether"
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_level"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "5",
                                                    "subdenomination": "ether"
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_level"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "4",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": "ether"
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_level"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "NumberLiteral",
                                                            "number": "20",
                                                            "subdenomination": "ether"
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "revert"
                                                        },
                                                        "arguments": [],
                                                        "names": []
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Arina_amount_judgment",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint8"
                                },
                                "name": "_level",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_Arina",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_addressA",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_addressB",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_level"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "5",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    }
                                                },
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "1",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    }
                                                },
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "*",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "_Arina"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "4",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "10",
                                                        "subdenomination": null
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "_level"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "2",
                                            "subdenomination": null
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "6",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "1",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        }
                                                    },
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "*",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "_Arina"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "3",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "10",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_level"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "3",
                                                "subdenomination": null
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "TupleExpression",
                                                    "components": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "7",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "1",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "_Arina"
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "2",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "10",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "isArray": false
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "_level"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "4",
                                                    "subdenomination": null
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "8",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "10",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "1",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "10",
                                                                    "subdenomination": null
                                                                }
                                                            },
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "/",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "_Arina"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "1",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "NumberLiteral",
                                                                    "number": "10",
                                                                    "subdenomination": null
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "==",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "_level"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "5",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_Arina"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "9",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "10",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "_Arina"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "1",
                                                                            "subdenomination": null
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "10",
                                                                        "subdenomination": null
                                                                    }
                                                                },
                                                                {
                                                                    "type": "NumberLiteral",
                                                                    "number": "0",
                                                                    "subdenomination": null
                                                                }
                                                            ],
                                                            "isArray": false
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "revert"
                                                        },
                                                        "arguments": [],
                                                        "names": []
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Arina_amount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_player",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_addressA",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_addressB",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint8"
                                        },
                                        "name": "_level",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "level_judgment"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "_amount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Arina_judgment"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            },
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "Arina_amount_judgment"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "_level"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "_amount"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Arina_balance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "ERC20Basic"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokenAddress_Arina"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "memberName": "balanceOf"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "this"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "view_readyTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_readyTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "block"
                                        },
                                        "memberName": "timestamp"
                                    },
                                    "right": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "readyTime"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_address"
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "-",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "readyTime"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_address"
                                                }
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "block"
                                                },
                                                "memberName": "timestamp"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "self_readyTime",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_readyTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "view_readyTime"
                                },
                                "arguments": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                }
            ],
            "kind": "contract"
        }
    ]
}