{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.19"
        },
        {
            "type": "ContractDefinition",
            "name": "FsTKAuthority",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "isAuthorized",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "sender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_contract",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "validate",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "ServiceProvider",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "serviceFallback",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "gas",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "TokenReceiver",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "tokenFallback",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "ERC20",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "EventDefinition",
                    "name": "Transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Approval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "FsTKToken",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "EventDefinition",
                    "name": "Transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "value",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "CancelSubscription",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Subscribe",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "startTime",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "interval",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyService",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "ServiceProvider"
                                },
                                "name": "service",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "expectedValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "newValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "increaseAllowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "decreaseAllowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "decreaseAllowanceOrEmtpy",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": [],
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "interface"
        },
        {
            "type": "ContractDefinition",
            "name": "AddressExtension",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "isValid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "!=",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "0",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "_address"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "isAccount",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "result",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": [
                                        {
                                            "type": "AssemblyAssignment",
                                            "names": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                }
                                            ],
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "iszero",
                                                "arguments": [
                                                    {
                                                        "type": "AssemblyExpression",
                                                        "functionName": "extcodesize",
                                                        "arguments": [
                                                            {
                                                                "type": "AssemblyExpression",
                                                                "functionName": "_address",
                                                                "arguments": []
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "toBytes",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "InLineAssemblyStatement",
                                "language": null,
                                "body": {
                                    "type": "AssemblyBlock",
                                    "operations": [
                                        {
                                            "type": "AssemblyLocalDefinition",
                                            "names": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "m"
                                                }
                                            ],
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "mload",
                                                "arguments": [
                                                    {
                                                        "type": "HexNumber",
                                                        "value": "0x40"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": [
                                                {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": [
                                                        {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "m",
                                                            "arguments": []
                                                        },
                                                        {
                                                            "type": "DecimalNumber",
                                                            "value": "20"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "xor",
                                                    "arguments": [
                                                        {
                                                            "type": "HexNumber",
                                                            "value": "0x140000000000000000000000000000000000000000"
                                                        },
                                                        {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "_address",
                                                            "arguments": []
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "AssemblyExpression",
                                            "functionName": "mstore",
                                            "arguments": [
                                                {
                                                    "type": "HexNumber",
                                                    "value": "0x40"
                                                },
                                                {
                                                    "type": "AssemblyExpression",
                                                    "functionName": "add",
                                                    "arguments": [
                                                        {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "m",
                                                            "arguments": []
                                                        },
                                                        {
                                                            "type": "DecimalNumber",
                                                            "value": "52"
                                                        }
                                                    ]
                                                }
                                            ]
                                        },
                                        {
                                            "type": "AssemblyAssignment",
                                            "names": [
                                                {
                                                    "type": "Identifier",
                                                    "name": "b"
                                                }
                                            ],
                                            "expression": {
                                                "type": "AssemblyExpression",
                                                "functionName": "m",
                                                "arguments": []
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "Math",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StructDefinition",
                    "name": "Fraction",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "numerator",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "denominator",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "r"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "r"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "a"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "r"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "-",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "TupleExpression",
                                                "components": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "a"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "b"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "isArray": false
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "min",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "y",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "Conditional",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "y"
                                    }
                                },
                                "TrueExpression": {
                                    "type": "Identifier",
                                    "name": "x"
                                },
                                "FalseExpression": {
                                    "type": "Identifier",
                                    "name": "y"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "max",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "y",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "Conditional",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "y"
                                    }
                                },
                                "TrueExpression": {
                                    "type": "Identifier",
                                    "name": "x"
                                },
                                "FalseExpression": {
                                    "type": "Identifier",
                                    "name": "y"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mulDiv",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "m",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "d",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "r",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "||",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "==",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "m"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "0",
                                            "subdenomination": null
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "r"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "m"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "==",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "r"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "m"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "/=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "r"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "r"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "mul"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "d"
                                                            }
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "m"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Fraction"
                                },
                                "name": "f",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "mulDiv"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "f"
                                        },
                                        "memberName": "numerator"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "f"
                                        },
                                        "memberName": "denominator"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "x",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Fraction"
                                },
                                "name": "f",
                                "storageLocation": "memory",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "mulDiv"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "x"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "f"
                                        },
                                        "memberName": "denominator"
                                    },
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "f"
                                        },
                                        "memberName": "numerator"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "FsTKAllocation",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "VESTED_AMOUNT",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "5500000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "18",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "isArray": false
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "5500000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "TupleExpression",
                            "components": [
                                {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            ],
                            "isArray": false
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "VESTED_AMOUNT_TOTAL",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "Identifier",
                                    "name": "VESTED_AMOUNT"
                                },
                                "right": {
                                    "type": "NumberLiteral",
                                    "number": "6",
                                    "subdenomination": null
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "Identifier",
                            "name": "VESTED_AMOUNT"
                        },
                        "right": {
                            "type": "NumberLiteral",
                            "number": "6",
                            "subdenomination": null
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "RELEASE_EPOCH",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1642032000",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1642032000",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "ERC20"
                            },
                            "name": "token",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "initialize",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "token"
                                                    }
                                                ],
                                                "names": []
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "token"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "ERC20"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()external{require(token.transfer(0x808b0730252DAA3a12CadC72f42E46E92a5e1bC8,VESTED_AMOUNT)&&true&&true&&true&&true&&true&&token.transfer(0xdA01fAFaF5E49e9467f99f5969cab499a5759cC6,VESTED_AMOUNT)&&token.transfer(0xddab6c29090E6111A490527614Ceac583D02C8De,VESTED_AMOUNT)&&true&&true&&true&&true&&true&&true&&token.transfer(0x5E6C9EC32b088c9FA1Fc0FEFa38A9B4De4169316,VESTED_AMOUNT)&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&token.transfer(0xFFB5d7C71e8680D0e9482e107F019a2b25D225B5,VESTED_AMOUNT)&&true&&true&&token.transfer(0x91cE537b1a8118Aa20Ef7F3093697a7437a5Dc4B,VESTED_AMOUNT)&&true&&true&&true&&true&&true&&true&&block.timestamp>=RELEASE_EPOCH&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true&&true);}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "&&",
                                                                "left": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "&&",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "&&",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "&&",
                                                                                    "left": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "&&",
                                                                                        "left": {
                                                                                            "type": "BinaryOperation",
                                                                                            "operator": "&&",
                                                                                            "left": {
                                                                                                "type": "BinaryOperation",
                                                                                                "operator": "&&",
                                                                                                "left": {
                                                                                                    "type": "BinaryOperation",
                                                                                                    "operator": "&&",
                                                                                                    "left": {
                                                                                                        "type": "BinaryOperation",
                                                                                                        "operator": "&&",
                                                                                                        "left": {
                                                                                                            "type": "BinaryOperation",
                                                                                                            "operator": "&&",
                                                                                                            "left": {
                                                                                                                "type": "BinaryOperation",
                                                                                                                "operator": "&&",
                                                                                                                "left": {
                                                                                                                    "type": "BinaryOperation",
                                                                                                                    "operator": "&&",
                                                                                                                    "left": {
                                                                                                                        "type": "BinaryOperation",
                                                                                                                        "operator": "&&",
                                                                                                                        "left": {
                                                                                                                            "type": "BinaryOperation",
                                                                                                                            "operator": "&&",
                                                                                                                            "left": {
                                                                                                                                "type": "BinaryOperation",
                                                                                                                                "operator": "&&",
                                                                                                                                "left": {
                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                    "operator": "&&",
                                                                                                                                    "left": {
                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                        "operator": "&&",
                                                                                                                                        "left": {
                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                            "operator": "&&",
                                                                                                                                            "left": {
                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                "operator": "&&",
                                                                                                                                                "left": {
                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                    "operator": "&&",
                                                                                                                                                    "left": {
                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                        "operator": "&&",
                                                                                                                                                        "left": {
                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                            "operator": "&&",
                                                                                                                                                            "left": {
                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                "operator": "&&",
                                                                                                                                                                "left": {
                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                    "left": {
                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                        "left": {
                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                            "left": {
                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                "left": {
                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                    "left": {
                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                        "left": {
                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                            "left": {
                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                "left": {
                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "left": {
type": "BinaryOperation",
operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
operator": "&&",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "left": {
type": "BinaryOperation",
operator": "&&",
left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "BinaryOperation",
operator": "&&",
left": {
type": "FunctionCall",
expression": {
type": "MemberAccess",
expression": {
type": "Identifier",
name": "token"
},
memberName": "transfer"
},
arguments": [
{
type": "NumberLiteral",
number": "0x808b0730252DAA3a12CadC72f42E46E92a5e1bC8",
subdenomination": null
},
{
type": "Identifier",
name": "VESTED_AMOUNT"
}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "names": []
},
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "FunctionCall",
expression": {
type": "MemberAccess",
expression": {
type": "Identifier",
name": "token"
},
memberName": "transfer"
},
arguments": [
{
type": "NumberLiteral",
number": "0xdA01fAFaF5E49e9467f99f5969cab499a5759cC6",
subdenomination": null
},
{
type": "Identifier",
name": "VESTED_AMOUNT"
}

names": []
}
},
right": {
type": "FunctionCall",
expression": {
type": "MemberAccess",
expression": {
type": "Identifier",
name": "token"
},
memberName": "transfer"
},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "arguments": [
{
type": "NumberLiteral",
number": "0xddab6c29090E6111A490527614Ceac583D02C8De",
subdenomination": null
},
{
type": "Identifier",
name": "VESTED_AMOUNT"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }

names": []
}
},
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
},
right": {
type": "BooleanLiteral",
value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
right": {
type": "FunctionCall",
expression": {
type": "MemberAccess",
expression": {
type": "Identifier",
name": "token"
},
memberName": "transfer"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
arguments": [
{
type": "NumberLiteral",
number": "0x5E6C9EC32b088c9FA1Fc0FEFa38A9B4De4169316",
subdenomination": null
},
{
type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "name": "VESTED_AMOUNT"
}

names": []
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
}
},
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
},
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
right": {
type": "BooleanLiteral",
value": true
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
type": "BooleanLiteral",
value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                                            "type": "FunctionCall",
                                                                                                                                                                                                                                                                                                                                                                                            "expression": {
                                                                                                                                                                                                                                                                                                                                                                                                "type": "MemberAccess",
                                                                                                                                                                                                                                                                                                                                                                                                "expression": {
                                                                                                                                                                                                                                                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                                                                    "name": "token"
                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                "memberName": "transfer"
                                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                                            "arguments": [
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                    "type": "NumberLiteral",
                                                                                                                                                                                                                                                                                                                                                                                                    "number": "0xFFB5d7C71e8680D0e9482e107F019a2b25D225B5",
                                                                                                                                                                                                                                                                                                                                                                                                    "subdenomination": null
                                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                                                                                                                                                    "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                                                                    "name": "VESTED_AMOUNT"
                                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                                            ],
                                                                                                                                                                                                                                                                                                                                                                                            "names": []
                                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                                "type": "FunctionCall",
                                                                                                                                                                                                                                                                                                                                                                                "expression": {
                                                                                                                                                                                                                                                                                                                                                                                    "type": "MemberAccess",
                                                                                                                                                                                                                                                                                                                                                                                    "expression": {
                                                                                                                                                                                                                                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                                                        "name": "token"
                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                    "memberName": "transfer"
                                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                                "arguments": [
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                        "type": "NumberLiteral",
                                                                                                                                                                                                                                                                                                                                                                                        "number": "0x91cE537b1a8118Aa20Ef7F3093697a7437a5Dc4B",
                                                                                                                                                                                                                                                                                                                                                                                        "subdenomination": null
                                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                                                        "name": "VESTED_AMOUNT"
                                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                                ],
                                                                                                                                                                                                                                                                                                                                                                                "names": []
                                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                                    "type": "BinaryOperation",
                                                                                                                                                                                                                                                                                                                                                    "operator": ">=",
                                                                                                                                                                                                                                                                                                                                                    "left": {
                                                                                                                                                                                                                                                                                                                                                        "type": "MemberAccess",
                                                                                                                                                                                                                                                                                                                                                        "expression": {
                                                                                                                                                                                                                                                                                                                                                            "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                            "name": "block"
                                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                                        "memberName": "timestamp"
                                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                                        "type": "Identifier",
                                                                                                                                                                                                                                                                                                                                                        "name": "RELEASE_EPOCH"
                                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            },
                                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        },
                                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    },
                                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                },
                                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            },
                                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        },
                                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    },
                                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                },
                                                                                                                                                                                                                "right": {
                                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                                }
                                                                                                                                                                                                            },
                                                                                                                                                                                                            "right": {
                                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                                "value": true
                                                                                                                                                                                                            }
                                                                                                                                                                                                        },
                                                                                                                                                                                                        "right": {
                                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                                            "value": true
                                                                                                                                                                                                        }
                                                                                                                                                                                                    },
                                                                                                                                                                                                    "right": {
                                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                                        "value": true
                                                                                                                                                                                                    }
                                                                                                                                                                                                },
                                                                                                                                                                                                "right": {
                                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                                    "value": true
                                                                                                                                                                                                }
                                                                                                                                                                                            },
                                                                                                                                                                                            "right": {
                                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                                "value": true
                                                                                                                                                                                            }
                                                                                                                                                                                        },
                                                                                                                                                                                        "right": {
                                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                                            "value": true
                                                                                                                                                                                        }
                                                                                                                                                                                    },
                                                                                                                                                                                    "right": {
                                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                                        "value": true
                                                                                                                                                                                    }
                                                                                                                                                                                },
                                                                                                                                                                                "right": {
                                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                                    "value": true
                                                                                                                                                                                }
                                                                                                                                                                            },
                                                                                                                                                                            "right": {
                                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                                "value": true
                                                                                                                                                                            }
                                                                                                                                                                        },
                                                                                                                                                                        "right": {
                                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                                            "value": true
                                                                                                                                                                        }
                                                                                                                                                                    },
                                                                                                                                                                    "right": {
                                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                                        "value": true
                                                                                                                                                                    }
                                                                                                                                                                },
                                                                                                                                                                "right": {
                                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                                    "value": true
                                                                                                                                                                }
                                                                                                                                                            },
                                                                                                                                                            "right": {
                                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                                "value": true
                                                                                                                                                            }
                                                                                                                                                        },
                                                                                                                                                        "right": {
                                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                                            "value": true
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "right": {
                                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                                        "value": true
                                                                                                                                                    }
                                                                                                                                                },
                                                                                                                                                "right": {
                                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                                    "value": true
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "right": {
                                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                                "value": true
                                                                                                                                            }
                                                                                                                                        },
                                                                                                                                        "right": {
                                                                                                                                            "type": "BooleanLiteral",
                                                                                                                                            "value": true
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "right": {
                                                                                                                                        "type": "BooleanLiteral",
                                                                                                                                        "value": true
                                                                                                                                    }
                                                                                                                                },
                                                                                                                                "right": {
                                                                                                                                    "type": "BooleanLiteral",
                                                                                                                                    "value": true
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "right": {
                                                                                                                                "type": "BooleanLiteral",
                                                                                                                                "value": true
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "right": {
                                                                                                                            "type": "BooleanLiteral",
                                                                                                                            "value": true
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "right": {
                                                                                                                        "type": "BooleanLiteral",
                                                                                                                        "value": true
                                                                                                                    }
                                                                                                                },
                                                                                                                "right": {
                                                                                                                    "type": "BooleanLiteral",
                                                                                                                    "value": true
                                                                                                                }
                                                                                                            },
                                                                                                            "right": {
                                                                                                                "type": "BooleanLiteral",
                                                                                                                "value": true
                                                                                                            }
                                                                                                        },
                                                                                                        "right": {
                                                                                                            "type": "BooleanLiteral",
                                                                                                            "value": true
                                                                                                        }
                                                                                                    },
                                                                                                    "right": {
                                                                                                        "type": "BooleanLiteral",
                                                                                                        "value": true
                                                                                                    }
                                                                                                },
                                                                                                "right": {
                                                                                                    "type": "BooleanLiteral",
                                                                                                    "value": true
                                                                                                }
                                                                                            },
                                                                                            "right": {
                                                                                                "type": "BooleanLiteral",
                                                                                                "value": true
                                                                                            }
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "BooleanLiteral",
                                                                                            "value": true
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "BooleanLiteral",
                                                                                        "value": true
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "BooleanLiteral",
                                                                                    "value": true
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "BooleanLiteral",
                                                                                "value": true
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "BooleanLiteral",
                                                                            "value": true
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "BooleanLiteral",
                                                                        "value": true
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "BooleanLiteral",
                                                                    "value": true
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BooleanLiteral",
                                                                "value": true
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BooleanLiteral",
                                                            "value": true
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BooleanLiteral",
                                                        "value": true
                                                    }
                                                },
                                                "right": {
                                                    "type": "BooleanLiteral",
                                                    "value": true
                                                }
                                            },
                                            "right": {
                                                "type": "BooleanLiteral",
                                                "value": true
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "Authorizable",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                    },
                    "libraryName": "AddressExtension"
                },
                {
                    "type": "EventDefinition",
                    "name": "FsTKAuthorityChanged",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_address",
                                "isStateVar": false,
                                "isIndexed": true
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "ModifierDefinition",
                    "name": "onlyFsTKAuthorized",
                    "parameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "fstkAuthority"
                                                },
                                                "memberName": "isAuthorized"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                },
                                                {
                                                    "type": "Identifier",
                                                    "name": "this"
                                                },
                                                {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "data"
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "FsTKAuthority"
                            },
                            "name": "fstkAuthority",
                            "expression": null,
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Authorizable",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FsTKAuthority"
                                },
                                "name": "_fstkAuthority",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_fstkAuthority"
                                                },
                                                "memberName": "validate"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "FsTKAuthorityChanged"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "fstkAuthority"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_fstkAuthority"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "changeFsTKAuthority",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FsTKAuthority"
                                },
                                "name": "_fstkAuthority",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "_fstkAuthority"
                                                },
                                                "memberName": "validate"
                                            },
                                            "arguments": [],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "FsTKAuthorityChanged"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "fstkAuthority"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "_fstkAuthority"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyFsTKAuthorized",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "AbstractToken",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "ERC20"
                    },
                    "arguments": null
                },
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "FsTKToken"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "address"
                    },
                    "libraryName": "AddressExtension"
                },
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                    },
                    "libraryName": "Math"
                },
                {
                    "type": "StructDefinition",
                    "name": "Subscription",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "amount",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startTime",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "interval",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "epoch",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "collectTime",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "StructDefinition",
                    "name": "Account",
                    "members": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "balance",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "allowances",
                            "storageLocation": null
                        },
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Subscription"
                                }
                            },
                            "name": "subscriptions",
                            "storageLocation": null
                        }
                    ]
                },
                {
                    "type": "ModifierDefinition",
                    "name": "liquid",
                    "parameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "isLiquid"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "isLiquid",
                            "expression": {
                                "type": "BooleanLiteral",
                                "value": true
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BooleanLiteral",
                        "value": true
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "erc20ApproveChecking",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Account"
                                }
                            },
                            "name": "accounts",
                            "expression": null,
                            "visibility": "internal",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "MemberAccess",
                                "expression": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    }
                                },
                                "memberName": "balance"
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "accounts"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "owner"
                                        }
                                    },
                                    "memberName": "allowances"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "spender"
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "value"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "senderAccount"
                                                },
                                                "memberName": "balance"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "senderAccount"
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "accounts"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "to"
                                            }
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "NewExpression",
                                                "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "liquid",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "fromAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "from"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fromAccount"
                                                    },
                                                    "memberName": "balance"
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                },
                                                "right": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "fromAccount"
                                                        },
                                                        "memberName": "allowances"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "fromAccount"
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "fromAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "accounts"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "to"
                                            }
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "from"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "from"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "NewExpression",
                                                "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "liquid",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "Identifier",
                                    "name": "erc20ApproveChecking"
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "0",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        },
                                                        "right": {
                                                            "type": "TupleExpression",
                                                            "components": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "==",
                                                                    "left": {
                                                                        "type": "IndexAccess",
                                                                        "base": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "senderAccount"
                                                                            },
                                                                            "memberName": "allowances"
                                                                        },
                                                                        "index": {
                                                                            "type": "Identifier",
                                                                            "name": "spender"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "NumberLiteral",
                                                                        "number": "0",
                                                                        "subdenomination": null
                                                                    }
                                                                }
                                                            ],
                                                            "isArray": false
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "value"
                                            },
                                            "right": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "senderAccount"
                                                },
                                                "memberName": "balance"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "-=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "senderAccount"
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "+=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "accounts"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "to"
                                            }
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "data"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "UnaryOperation",
                                    "operator": "!",
                                    "subExpression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "to"
                                            },
                                            "memberName": "isAccount"
                                        },
                                        "arguments": [],
                                        "names": []
                                    },
                                    "isPrefix": true
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "TokenReceiver"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "to"
                                                            }
                                                        ],
                                                        "names": []
                                                    },
                                                    "memberName": "tokenFallback"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "liquid",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyService",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "ServiceProvider"
                                },
                                "name": "service",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bytes"
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "gas",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "msg"
                                    },
                                    "memberName": "gas"
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "currentValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "senderAccount"
                                        },
                                        "memberName": "allowances"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "service"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "service"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "currentValue"
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "value"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "service"
                                        },
                                        "memberName": "serviceFallback"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "data"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "gas"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "service"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "currentValue"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "liquid",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    },
                                    "length": null
                                },
                                "name": "data",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "data"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "address"
                                                    },
                                                    "name": "receiver",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": ">>",
                                                        "left": {
                                                            "type": "IndexAccess",
                                                            "base": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                            },
                                                            "index": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "96",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "value",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "&",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                    }
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0xffffffffffffffffffffffff",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "value"
                                                        },
                                                        "right": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "senderAccount"
                                                            },
                                                            "memberName": "balance"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "senderAccount"
                                                    },
                                                    "memberName": "balance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "accounts"
                                                        },
                                                        "index": {
                                                            "type": "Identifier",
                                                            "name": "receiver"
                                                        }
                                                    },
                                                    "memberName": "balance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "Transfer"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "receiver"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "Transfer"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "receiver"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    },
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "NewExpression",
                                                            "typeName": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "bytes"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "liquid",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "subscriptionOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "owner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "collector",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "Subscription"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "accounts"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "owner"
                                        }
                                    },
                                    "memberName": "subscriptions"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "collector"
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "subscribe",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "collector",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "startTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "interval",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "accounts"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "memberName": "subscriptions"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "collector"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "Subscription"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "startTime"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "interval"
                                            },
                                            {
                                                "type": "Identifier",
                                                "name": "amount"
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            },
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": [
                                            "startTime",
                                            "interval",
                                            "amount",
                                            "epoch",
                                            "collectTime"
                                        ]
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Subscribe"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "collector"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "startTime"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "interval"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "cancelSubscription",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "collector",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "UnaryOperation",
                                    "operator": "delete",
                                    "subExpression": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "accounts"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "memberName": "subscriptions"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "collector"
                                        }
                                    },
                                    "isPrefix": true
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "CancelSubscription"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "collector"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "collect",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "fromAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "from"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Subscription"
                                        },
                                        "name": "info",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "fromAccount"
                                        },
                                        "memberName": "subscriptions"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "epoch",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": "/",
                                        "left": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "block"
                                                            },
                                                            "memberName": "timestamp"
                                                        },
                                                        "memberName": "sub"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "info"
                                                            },
                                                            "memberName": "startTime"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "right": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "info"
                                            },
                                            "memberName": "interval"
                                        }
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "1",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "info"
                                                    },
                                                    "memberName": "amount"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "epoch"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "info"
                                                    },
                                                    "memberName": "epoch"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "totalAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "TupleExpression",
                                            "components": [
                                                {
                                                    "type": "BinaryOperation",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "epoch"
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "info"
                                                        },
                                                        "memberName": "epoch"
                                                    }
                                                }
                                            ],
                                            "isArray": false
                                        },
                                        "memberName": "mul"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "info"
                                            },
                                            "memberName": "amount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalAmount"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "fromAccount"
                                        },
                                        "memberName": "balance"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "UnaryOperation",
                                                "operator": "delete",
                                                "subExpression": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "fromAccount"
                                                        },
                                                        "memberName": "subscriptions"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "isPrefix": true
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "CancelSubscription"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "from"
                                                    },
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "info"
                                                    },
                                                    "memberName": "collectTime"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "block"
                                                    },
                                                    "memberName": "timestamp"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "-=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fromAccount"
                                                    },
                                                    "memberName": "balance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "totalAmount"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "+=",
                                                "left": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "accounts"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "memberName": "balance"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "totalAmount"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "Transfer"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "from"
                                                    },
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "totalAmount"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "Transfer"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "from"
                                                    },
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "totalAmount"
                                                    },
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "NewExpression",
                                                            "typeName": {
                                                                "type": "ElementaryTypeName",
                                                                "name": "bytes"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "collect",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ArrayTypeName",
                                    "baseTypeName": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "length": null
                                },
                                "name": "froms",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ForStatement",
                                "initExpression": {
                                    "type": "VariableDeclarationStatement",
                                    "variables": [
                                        {
                                            "type": "VariableDeclaration",
                                            "typeName": {
                                                "type": "ElementaryTypeName",
                                                "name": "uint256"
                                            },
                                            "name": "i",
                                            "storageLocation": null
                                        }
                                    ],
                                    "initialValue": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                },
                                "conditionExpression": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "froms"
                                        },
                                        "memberName": "length"
                                    }
                                },
                                "loopExpression": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                        "type": "UnaryOperation",
                                        "operator": "++",
                                        "subExpression": {
                                            "type": "Identifier",
                                            "name": "i"
                                        },
                                        "isPrefix": false
                                    }
                                },
                                "body": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "address"
                                                    },
                                                    "name": "from",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "froms"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "UserDefinedTypeName",
                                                        "namePath": "Account"
                                                    },
                                                    "name": "fromAccount",
                                                    "storageLocation": "storage"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "accounts"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "from"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "UserDefinedTypeName",
                                                        "namePath": "Subscription"
                                                    },
                                                    "name": "info",
                                                    "storageLocation": "storage"
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fromAccount"
                                                    },
                                                    "memberName": "subscriptions"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "epoch",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "block"
                                                                        },
                                                                        "memberName": "timestamp"
                                                                    },
                                                                    "memberName": "sub"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "info"
                                                                        },
                                                                        "memberName": "startTime"
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "info"
                                                        },
                                                        "memberName": "interval"
                                                    }
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "1",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "info"
                                                                },
                                                                "memberName": "amount"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "epoch"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "info"
                                                                },
                                                                "memberName": "epoch"
                                                            }
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "totalAmount",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "TupleExpression",
                                                        "components": [
                                                            {
                                                                "type": "BinaryOperation",
                                                                "operator": "-",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "epoch"
                                                                },
                                                                "right": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "info"
                                                                    },
                                                                    "memberName": "epoch"
                                                                }
                                                            }
                                                        ],
                                                        "isArray": false
                                                    },
                                                    "memberName": "mul"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "info"
                                                        },
                                                        "memberName": "amount"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": ">",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "totalAmount"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "fromAccount"
                                                    },
                                                    "memberName": "balance"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "UnaryOperation",
                                                            "operator": "delete",
                                                            "subExpression": {
                                                                "type": "IndexAccess",
                                                                "base": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "fromAccount"
                                                                    },
                                                                    "memberName": "subscriptions"
                                                                },
                                                                "index": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            },
                                                            "isPrefix": true
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "CancelSubscription"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "from"
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "info"
                                                                },
                                                                "memberName": "collectTime"
                                                            },
                                                            "right": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "block"
                                                                },
                                                                "memberName": "timestamp"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "-=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "fromAccount"
                                                                },
                                                                "memberName": "balance"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "totalAmount"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+=",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "IndexAccess",
                                                                    "base": {
                                                                        "type": "Identifier",
                                                                        "name": "accounts"
                                                                    },
                                                                    "index": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "msg"
                                                                        },
                                                                        "memberName": "sender"
                                                                    }
                                                                },
                                                                "memberName": "balance"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "totalAmount"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "Transfer"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "from"
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "totalAmount"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "Transfer"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "from"
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                {
                                                                    "type": "Identifier",
                                                                    "name": "totalAmount"
                                                                },
                                                                {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "NewExpression",
                                                                        "typeName": {
                                                                            "type": "ElementaryTypeName",
                                                                            "name": "bytes"
                                                                        }
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "0",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "expectedValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "newValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "senderAccount"
                                                    },
                                                    "memberName": "allowances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "spender"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "expectedValue"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newValue"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "newValue"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "increaseAllowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "senderAccount"
                                                },
                                                "memberName": "allowances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "spender"
                                            }
                                        },
                                        "memberName": "add"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newValue"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "newValue"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "decreaseAllowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "senderAccount"
                                                },
                                                "memberName": "allowances"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "spender"
                                            }
                                        },
                                        "memberName": "sub"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newValue"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "newValue"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "decreaseAllowanceOrEmtpy",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "UserDefinedTypeName",
                                            "namePath": "Account"
                                        },
                                        "name": "senderAccount",
                                        "storageLocation": "storage"
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "accounts"
                                    },
                                    "index": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "currentValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "senderAccount"
                                        },
                                        "memberName": "allowances"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "spender"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "newValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "value"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "currentValue"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "newValue"
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "-",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "currentValue"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": null
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "senderAccount"
                                            },
                                            "memberName": "allowances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newValue"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "newValue"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setLiquid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "_isLiquid",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "isLiquid"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_isLiquid"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setERC20ApproveChecking",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "_erc20ApproveChecking",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "erc20ApproveChecking"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_erc20ApproveChecking"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "FunderSmartToken",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "AbstractToken"
                    },
                    "arguments": null
                },
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "Authorizable"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "Funder Smart Token"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "Funder Smart Token"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "symbol",
                            "expression": {
                                "type": "stringLiteral",
                                "value": "FST"
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "stringLiteral",
                        "value": "FST"
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "totalSupply",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "330000000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "TupleExpression",
                                    "components": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "18",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "isArray": false
                                }
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "330000000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "TupleExpression",
                            "components": [
                                {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            ],
                            "isArray": false
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint8"
                            },
                            "name": "decimals",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": true,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "18",
                        "subdenomination": null
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "FunderSmartToken",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FsTKAuthority"
                                },
                                "name": "_fstkAuthority",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "fstkWallet",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "FsTKAllocation"
                                },
                                "name": "allocation",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "vestedAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocation"
                                        },
                                        "memberName": "VESTED_AMOUNT_TOTAL"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "accounts"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "allocation"
                                            }
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "vestedAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "allocation"
                                        },
                                        "memberName": "initialize"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "allocation"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "vestedAmount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "allocation"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "vestedAmount"
                                        },
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "NewExpression",
                                                "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "releaseAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "totalSupply"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "vestedAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "accounts"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "fstkWallet"
                                            }
                                        },
                                        "memberName": "balance"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "releaseAmount"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "fstkWallet"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "releaseAmount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "ElementaryTypeName",
                                                "name": "address"
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "fstkWallet"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "releaseAmount"
                                        },
                                        {
                                            "type": "FunctionCall",
                                            "expression": {
                                                "type": "NewExpression",
                                                "typeName": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "bytes"
                                                }
                                            },
                                            "arguments": [
                                                {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            ],
                                            "names": []
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "Authorizable",
                            "arguments": [
                                {
                                    "type": "Identifier",
                                    "name": "_fstkAuthority"
                                }
                            ]
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setLiquid",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "_isLiquid",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "AbstractToken"
                                        },
                                        "memberName": "setLiquid"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_isLiquid"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyFsTKAuthorized",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setERC20ApproveChecking",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "_erc20ApproveChecking",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "AbstractToken"
                                        },
                                        "memberName": "setERC20ApproveChecking"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_erc20ApproveChecking"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyFsTKAuthorized",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferToken",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "ERC20"
                                },
                                "name": "erc20",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "erc20"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyFsTKAuthorized",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        }
    ]
}