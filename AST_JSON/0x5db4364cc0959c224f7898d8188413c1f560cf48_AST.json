{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.5.0"
        },
        {
            "type": "ContractDefinition",
            "name": "Receiver",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "implementation",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "isPayable",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "EventDefinition",
                    "name": "LogImplementationChanged",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_oldImplementation",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_newImplementation",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "LogPaymentReceived",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "sender",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "constructor",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_implementation",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "_isPayable",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_implementation"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Implementation address cannot be 0"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "implementation"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_implementation"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "isPayable"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_isPayable"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": true,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "ModifierDefinition",
                    "name": "onlyImplementation",
                    "parameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "implementation"
                                            }
                                        },
                                        {
                                            "type": "stringLiteral",
                                            "value": "Only the contract implementation may perform this action"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "drain",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                },
                                                "memberName": "call"
                                            },
                                            "memberName": "value"
                                        },
                                        "arguments": [
                                            {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "address"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "this"
                                                        }
                                                    ],
                                                    "names": []
                                                },
                                                "memberName": "balance"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "arguments": [
                                        {
                                            "type": "stringLiteral",
                                            "value": ""
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyImplementation",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()externalpayable{if(msg.sender!=implementation){if(isPayable){emitLogPaymentReceived(msg.sender,msg.value);}else{revert(\"not payable\");}}else{assembly{switchcalldatasizecase0{}default{letfree_ptr:=mload(0x40)calldatacopy(free_ptr,0,calldatasize)letresult:=delegatecall(gas,caller,free_ptr,calldatasize,0,0)returndatacopy(free_ptr,0,returndatasize)ifiszero(result){revert(free_ptr,returndatasize)}return(free_ptr,returndatasize)}}}}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "implementation"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "Identifier",
                                                "name": "isPayable"
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "EmitStatement",
                                                        "eventCall": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "LogPaymentReceived"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "sender"
                                                                },
                                                                {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "msg"
                                                                    },
                                                                    "memberName": "value"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "revert"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "stringLiteral",
                                                                    "value": "not payable"
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "InLineAssemblyStatement",
                                            "language": null,
                                            "body": {
                                                "type": "AssemblyBlock",
                                                "operations": [
                                                    {
                                                        "type": "AssemblySwitch",
                                                        "expression": {
                                                            "type": "AssemblyExpression",
                                                            "functionName": "calldatasize",
                                                            "arguments": []
                                                        },
                                                        "cases": [
                                                            {
                                                                "type": "AssemblyCase",
                                                                "block": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": []
                                                                },
                                                                "value": {
                                                                    "type": "DecimalNumber",
                                                                    "value": "0"
                                                                }
                                                            },
                                                            {
                                                                "type": "AssemblyCase",
                                                                "block": {
                                                                    "type": "AssemblyBlock",
                                                                    "operations": [
                                                                        {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "free_ptr"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "mload",
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "HexNumber",
                                                                                        "value": "0x40"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "calldatacopy",
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "free_ptr",
                                                                                    "arguments": []
                                                                                },
                                                                                {
                                                                                    "type": "DecimalNumber",
                                                                                    "value": "0"
                                                                                },
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "calldatasize",
                                                                                    "arguments": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "AssemblyLocalDefinition",
                                                                            "names": [
                                                                                {
                                                                                    "type": "Identifier",
                                                                                    "name": "result"
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "delegatecall",
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "gas",
                                                                                        "arguments": []
                                                                                    },
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "caller",
                                                                                        "arguments": []
                                                                                    },
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "free_ptr",
                                                                                        "arguments": []
                                                                                    },
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "calldatasize",
                                                                                        "arguments": []
                                                                                    },
                                                                                    {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "0"
                                                                                    },
                                                                                    {
                                                                                        "type": "DecimalNumber",
                                                                                        "value": "0"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "returndatacopy",
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "free_ptr",
                                                                                    "arguments": []
                                                                                },
                                                                                {
                                                                                    "type": "DecimalNumber",
                                                                                    "value": "0"
                                                                                },
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "returndatasize",
                                                                                    "arguments": []
                                                                                }
                                                                            ]
                                                                        },
                                                                        {
                                                                            "type": "AssemblyIf",
                                                                            "condition": {
                                                                                "type": "AssemblyExpression",
                                                                                "functionName": "iszero",
                                                                                "arguments": [
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "result",
                                                                                        "arguments": []
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "body": {
                                                                                "type": "AssemblyBlock",
                                                                                "operations": [
                                                                                    {
                                                                                        "type": "AssemblyExpression",
                                                                                        "functionName": "revert",
                                                                                        "arguments": [
                                                                                            {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "free_ptr",
                                                                                                "arguments": []
                                                                                            },
                                                                                            {
                                                                                                "type": "AssemblyExpression",
                                                                                                "functionName": "returndatasize",
                                                                                                "arguments": []
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "type": "AssemblyExpression",
                                                                            "functionName": "return",
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "free_ptr",
                                                                                    "arguments": []
                                                                                },
                                                                                {
                                                                                    "type": "AssemblyExpression",
                                                                                    "functionName": "returndatasize",
                                                                                    "arguments": []
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "default": true
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "visibility": "external",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                }
            ],
            "kind": "contract"
        }
    ]
}