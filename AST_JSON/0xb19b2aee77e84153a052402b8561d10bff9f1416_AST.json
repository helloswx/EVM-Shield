{
    "type": "SourceUnit",
    "children": [
        {
            "type": "PragmaDirective",
            "name": "solidity",
            "value": "^0.4.18"
        },
        {
            "type": "ContractDefinition",
            "name": "SafeMath",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "mul",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "*",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "||",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "==",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "/",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "c"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                    }
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "b"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "div",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "/",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "a"
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": "*",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "c"
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "%",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                    }
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "sub",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "b"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                    "type": "Identifier",
                                    "name": "a"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "b"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "add",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "a",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "b",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "c",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "+",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "b"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "assert"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "c"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "a"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "Identifier",
                                "name": "c"
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "pure"
                }
            ],
            "kind": "library"
        },
        {
            "type": "ContractDefinition",
            "name": "Ownable",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "owner",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "EventDefinition",
                    "name": "OwnershipTransferred",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "previousOwner",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "newOwner",
                                "isStateVar": false,
                                "isIndexed": true
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "Ownable",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "ModifierDefinition",
                    "name": "onlyOwner",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "owner"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "Identifier",
                                    "name": "_"
                                }
                            }
                        ]
                    }
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferOwnership",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "newOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "newOwner"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "OwnershipTransferred"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "owner"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "newOwner"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newOwner"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "ERC20Interface",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "remaining",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": [],
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "EventDefinition",
                    "name": "Transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "from",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "EventDefinition",
                    "name": "Approval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "HypeRideToken",
            "baseContracts": [
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "ERC20Interface"
                    },
                    "arguments": null
                },
                {
                    "type": "InheritanceSpecifier",
                    "baseName": {
                        "type": "UserDefinedTypeName",
                        "namePath": "Ownable"
                    },
                    "arguments": null
                }
            ],
            "subNodes": [
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                    },
                    "libraryName": "SafeMath"
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "name",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "string"
                            },
                            "name": "symbol",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "decimals",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "_totalSupply",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                }
                            },
                            "name": "tokenBalances",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "ownerWallet",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "Mapping",
                                "keyType": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "valueType": {
                                    "type": "Mapping",
                                    "keyType": {
                                        "type": "ElementaryTypeName",
                                        "name": "address"
                                    },
                                    "valueType": {
                                        "type": "ElementaryTypeName",
                                        "name": "uint256"
                                    }
                                }
                            },
                            "name": "allowed",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "HypeRideToken",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "wallet",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    "right": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ownerWallet"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "wallet"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "name"
                                    },
                                    "right": {
                                        "type": "stringLiteral",
                                        "value": "HYPERIDE"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "symbol"
                                    },
                                    "right": {
                                        "type": "stringLiteral",
                                        "value": "HYPE"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "decimals"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_totalSupply"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "NumberLiteral",
                                            "number": "150000000",
                                            "subdenomination": null
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "uint"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "decimals"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "wallet"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_totalSupply"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "balanceOf",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "balance",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "Identifier",
                                    "name": "tokenBalances"
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "tokenOwner"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transfer",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "to"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "tokens"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokens"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "to"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "to"
                                                }
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokens"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "tokens"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferFrom",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_from",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_to",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_to"
                                            },
                                            "right": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "ElementaryTypeName",
                                                    "name": "address"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "NumberLiteral",
                                                        "number": "0",
                                                        "subdenomination": null
                                                    }
                                                ],
                                                "names": []
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_value"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_from"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_value"
                                            },
                                            "right": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "allowed"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_from"
                                                    }
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_from"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_from"
                                                }
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_value"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_to"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_to"
                                                }
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_value"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "allowed"
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_from"
                                            }
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "allowed"
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_from"
                                                    }
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_value"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "_from"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_to"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "approve",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_value",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "allowed"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_spender"
                                        }
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_value"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_spender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_value"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "totalSupply",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                    "type": "Identifier",
                                    "name": "_totalSupply"
                                },
                                "right": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "tokenBalances"
                                    },
                                    "index": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "ElementaryTypeName",
                                            "name": "address"
                                        },
                                        "arguments": [
                                            {
                                                "type": "NumberLiteral",
                                                "number": "0",
                                                "subdenomination": null
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "allowance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenOwner",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "remaining",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "IndexAccess",
                                "base": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "Identifier",
                                        "name": "allowed"
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "tokenOwner"
                                    }
                                },
                                "index": {
                                    "type": "Identifier",
                                    "name": "spender"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "increaseApproval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_addedValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "Identifier",
                                                "name": "allowed"
                                            },
                                            "index": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            }
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "_spender"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "Identifier",
                                                        "name": "allowed"
                                                    },
                                                    "index": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    }
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "_spender"
                                                }
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "_addedValue"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_spender"
                                        },
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "allowed"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_spender"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "decreaseApproval",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_spender",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "_subtractedValue",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint"
                                        },
                                        "name": "oldValue",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "IndexAccess",
                                    "base": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "allowed"
                                        },
                                        "index": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    },
                                    "index": {
                                        "type": "Identifier",
                                        "name": "_spender"
                                    }
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": ">",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_subtractedValue"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "oldValue"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "allowed"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_spender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "0",
                                                    "subdenomination": null
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "IndexAccess",
                                                    "base": {
                                                        "type": "IndexAccess",
                                                        "base": {
                                                            "type": "Identifier",
                                                            "name": "allowed"
                                                        },
                                                        "index": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        }
                                                    },
                                                    "index": {
                                                        "type": "Identifier",
                                                        "name": "_spender"
                                                    }
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "oldValue"
                                                        },
                                                        "memberName": "sub"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "_subtractedValue"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Approval"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "_spender"
                                        },
                                        {
                                            "type": "IndexAccess",
                                            "base": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "allowed"
                                                },
                                                "index": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "sender"
                                                }
                                            },
                                            "index": {
                                                "type": "Identifier",
                                                "name": "_spender"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "BooleanLiteral",
                                "value": true
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()publicpayable{revert();}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "revert"
                                    },
                                    "arguments": [],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "transferAnyERC20Token",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "tokenAddress",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": "success",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "ERC20Interface"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokenAddress"
                                            }
                                        ],
                                        "names": []
                                    },
                                    "memberName": "transfer"
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "owner"
                                    },
                                    {
                                        "type": "Identifier",
                                        "name": "tokens"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "mint",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "wallet",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "buyer",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "tokenAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "wallet"
                                                }
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "tokenAmount"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "buyer"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "buyer"
                                                }
                                            },
                                            "memberName": "add"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokenAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "IndexAccess",
                                        "base": {
                                            "type": "Identifier",
                                            "name": "tokenBalances"
                                        },
                                        "index": {
                                            "type": "Identifier",
                                            "name": "wallet"
                                        }
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "IndexAccess",
                                                "base": {
                                                    "type": "Identifier",
                                                    "name": "tokenBalances"
                                                },
                                                "index": {
                                                    "type": "Identifier",
                                                    "name": "wallet"
                                                }
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokenAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "Transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "Identifier",
                                            "name": "wallet"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "buyer"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "tokenAmount"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "_totalSupply"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "_totalSupply"
                                            },
                                            "memberName": "sub"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "tokenAmount"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [
                        {
                            "type": "ModifierInvocation",
                            "name": "onlyOwner",
                            "arguments": []
                        }
                    ],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                }
            ],
            "kind": "contract"
        },
        {
            "type": "ContractDefinition",
            "name": "HypeRideCrowdsale",
            "baseContracts": [],
            "subNodes": [
                {
                    "type": "UsingForDeclaration",
                    "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "uint256"
                    },
                    "libraryName": "SafeMath"
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "UserDefinedTypeName",
                                "namePath": "HypeRideToken"
                            },
                            "name": "token",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "startTime",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "endTime",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "address"
                            },
                            "name": "wallet",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "ratePerWei",
                            "expression": {
                                "type": "NumberLiteral",
                                "number": "1000",
                                "subdenomination": null
                            },
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "NumberLiteral",
                        "number": "1000",
                        "subdenomination": null
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "weiRaised",
                            "expression": null,
                            "visibility": "public",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "TOKENS_SOLD",
                            "expression": null,
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": null
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "maxTokensToSale",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "150000000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "150000000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "maxTokensToSaleInPreICOPhase",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "7500000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "7500000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "maxTokensToSaleInICOPhase1",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "14250000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "14250000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "maxTokensToSaleInICOPhase2",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "20250000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "20250000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256"
                            },
                            "name": "maxTokensToSaleInICOPhase3",
                            "expression": {
                                "type": "BinaryOperation",
                                "operator": "*",
                                "left": {
                                    "type": "NumberLiteral",
                                    "number": "25750000",
                                    "subdenomination": null
                                },
                                "right": {
                                    "type": "BinaryOperation",
                                    "operator": "**",
                                    "left": {
                                        "type": "NumberLiteral",
                                        "number": "10",
                                        "subdenomination": null
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "18",
                                        "subdenomination": null
                                    }
                                }
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                            "type": "NumberLiteral",
                            "number": "25750000",
                            "subdenomination": null
                        },
                        "right": {
                            "type": "BinaryOperation",
                            "operator": "**",
                            "left": {
                                "type": "NumberLiteral",
                                "number": "10",
                                "subdenomination": null
                            },
                            "right": {
                                "type": "NumberLiteral",
                                "number": "18",
                                "subdenomination": null
                            }
                        }
                    }
                },
                {
                    "type": "StateVariableDeclaration",
                    "variables": [
                        {
                            "type": "VariableDeclaration",
                            "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "bool"
                            },
                            "name": "isCrowdsalePaused",
                            "expression": {
                                "type": "BooleanLiteral",
                                "value": false
                            },
                            "visibility": "default",
                            "isStateVar": true,
                            "isDeclaredConst": false,
                            "isIndexed": false
                        }
                    ],
                    "initialValue": {
                        "type": "BooleanLiteral",
                        "value": false
                    }
                },
                {
                    "type": "EventDefinition",
                    "name": "TokenPurchase",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "purchaser",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "beneficiary",
                                "isStateVar": false,
                                "isIndexed": true
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "value",
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "VariableDeclaration",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "amount",
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "isAnonymous": false
                },
                {
                    "type": "FunctionDefinition",
                    "name": "HypeRideCrowdsale",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "_startTime",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            },
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "_wallet",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_startTime"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "endTime"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "startTime"
                                        },
                                        "right": {
                                            "type": "NumberLiteral",
                                            "number": "120",
                                            "subdenomination": "days"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "startTime"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "now"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "endTime"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "startTime"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "!=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "_wallet"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "0x0",
                                                "subdenomination": null
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "wallet"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "_wallet"
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "token"
                                    },
                                    "right": {
                                        "type": "FunctionCall",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "createTokenContract"
                                        },
                                        "arguments": [
                                            {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        ],
                                        "names": []
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "createTokenContract",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "wall",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "UserDefinedTypeName",
                                    "namePath": "HypeRideToken"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "NewExpression",
                                    "typeName": {
                                        "type": "UserDefinedTypeName",
                                        "namePath": "HypeRideToken"
                                    }
                                },
                                "arguments": [
                                    {
                                        "type": "Identifier",
                                        "name": "wall"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "function()publicpayable{buyTokens(msg.sender);}",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "buyTokens"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "sender"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "determineBonus",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": "tokens",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "bonus",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "timeElapsed",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "now"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "timeElapsedInDays",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "timeElapsed"
                                        },
                                        "memberName": "div"
                                    },
                                    "arguments": [
                                        {
                                            "type": "NumberLiteral",
                                            "number": "1",
                                            "subdenomination": "days"
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "timeElapsedInDays"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "30",
                                        "subdenomination": null
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "TOKENS_SOLD"
                                                },
                                                "right": {
                                                    "type": "Identifier",
                                                    "name": "maxTokensToSaleInPreICOPhase"
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bonus"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "tokens"
                                                                    },
                                                                    "memberName": "mul"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "NumberLiteral",
                                                                        "number": "50",
                                                                        "subdenomination": null
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bonus"
                                                            },
                                                            "right": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "MemberAccess",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "memberName": "div"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "NumberLiteral",
                                                                        "number": "100",
                                                                        "subdenomination": null
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "FunctionCall",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "require"
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "<=",
                                                                    "left": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "+",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "Identifier",
                                                                                "name": "TOKENS_SOLD"
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "tokens"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        }
                                                                    },
                                                                    "right": {
                                                                        "type": "Identifier",
                                                                        "name": "maxTokensToSaleInPreICOPhase"
                                                                    }
                                                                }
                                                            ],
                                                            "names": []
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "BinaryOperation",
                                                        "operator": ">=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "TOKENS_SOLD"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "maxTokensToSaleInPreICOPhase"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "TOKENS_SOLD"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "maxTokensToSaleInICOPhase1"
                                                        }
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bonus"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokens"
                                                                        },
                                                                        "memberName": "mul"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "35",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bonus"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "memberName": "div"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "100",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "<=",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "TOKENS_SOLD"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "bonus"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "maxTokensToSaleInICOPhase1"
                                                                        }
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSaleInICOPhase1"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSaleInICOPhase2"
                                                            }
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokens"
                                                                            },
                                                                            "memberName": "mul"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "20",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "bonus"
                                                                            },
                                                                            "memberName": "div"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "100",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "require"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "TOKENS_SOLD"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tokens"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "maxTokensToSaleInICOPhase2"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                }
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                },
                                                                                "memberName": "mul"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                },
                                                                                "memberName": "div"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "100",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "require"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "TOKENS_SOLD"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tokens"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "bonus"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "0",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "timeElapsedInDays"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "30",
                                                "subdenomination": null
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "timeElapsedInDays"
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "60",
                                                "subdenomination": null
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "IfStatement",
                                                "condition": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "TOKENS_SOLD"
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "maxTokensToSaleInICOPhase1"
                                                    }
                                                },
                                                "TrueBody": {
                                                    "type": "Block",
                                                    "statements": [
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bonus"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "tokens"
                                                                        },
                                                                        "memberName": "mul"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "35",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "BinaryOperation",
                                                                "operator": "=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "bonus"
                                                                },
                                                                "right": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "MemberAccess",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "memberName": "div"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "NumberLiteral",
                                                                            "number": "100",
                                                                            "subdenomination": null
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                                "type": "FunctionCall",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "require"
                                                                },
                                                                "arguments": [
                                                                    {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "<=",
                                                                        "left": {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "+",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "TOKENS_SOLD"
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "bonus"
                                                                            }
                                                                        },
                                                                        "right": {
                                                                            "type": "Identifier",
                                                                            "name": "maxTokensToSaleInICOPhase1"
                                                                        }
                                                                    }
                                                                ],
                                                                "names": []
                                                            }
                                                        }
                                                    ]
                                                },
                                                "FalseBody": {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "&&",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": ">=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSaleInICOPhase1"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSaleInICOPhase2"
                                                            }
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokens"
                                                                            },
                                                                            "memberName": "mul"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "20",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "bonus"
                                                                            },
                                                                            "memberName": "div"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "100",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "require"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "TOKENS_SOLD"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tokens"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "maxTokensToSaleInICOPhase2"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                }
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                },
                                                                                "memberName": "mul"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                },
                                                                                "memberName": "div"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "100",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "require"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "TOKENS_SOLD"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tokens"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "bonus"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "0",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": {
                                        "type": "IfStatement",
                                        "condition": {
                                            "type": "BinaryOperation",
                                            "operator": "&&",
                                            "left": {
                                                "type": "BinaryOperation",
                                                "operator": ">=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "timeElapsedInDays"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "60",
                                                    "subdenomination": null
                                                }
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "<",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "timeElapsedInDays"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "90",
                                                    "subdenomination": null
                                                }
                                            }
                                        },
                                        "TrueBody": {
                                            "type": "Block",
                                            "statements": [
                                                {
                                                    "type": "IfStatement",
                                                    "condition": {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "TOKENS_SOLD"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "maxTokensToSaleInICOPhase2"
                                                        }
                                                    },
                                                    "TrueBody": {
                                                        "type": "Block",
                                                        "statements": [
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "tokens"
                                                                            },
                                                                            "memberName": "mul"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "20",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "BinaryOperation",
                                                                    "operator": "=",
                                                                    "left": {
                                                                        "type": "Identifier",
                                                                        "name": "bonus"
                                                                    },
                                                                    "right": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "MemberAccess",
                                                                            "expression": {
                                                                                "type": "Identifier",
                                                                                "name": "bonus"
                                                                            },
                                                                            "memberName": "div"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "NumberLiteral",
                                                                                "number": "100",
                                                                                "subdenomination": null
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            },
                                                            {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                    "type": "FunctionCall",
                                                                    "expression": {
                                                                        "type": "Identifier",
                                                                        "name": "require"
                                                                    },
                                                                    "arguments": [
                                                                        {
                                                                            "type": "BinaryOperation",
                                                                            "operator": "<=",
                                                                            "left": {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "TOKENS_SOLD"
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "tokens"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                }
                                                                            },
                                                                            "right": {
                                                                                "type": "Identifier",
                                                                                "name": "maxTokensToSaleInICOPhase2"
                                                                            }
                                                                        }
                                                                    ],
                                                                    "names": []
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "FalseBody": {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "&&",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": ">=",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase2"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "BinaryOperation",
                                                                "operator": "<",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                }
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                },
                                                                                "memberName": "mul"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                },
                                                                                "memberName": "div"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "100",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "require"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "TOKENS_SOLD"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tokens"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "bonus"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "0",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        },
                                        "FalseBody": {
                                            "type": "IfStatement",
                                            "condition": {
                                                "type": "BinaryOperation",
                                                "operator": "&&",
                                                "left": {
                                                    "type": "BinaryOperation",
                                                    "operator": ">=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "timeElapsedInDays"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "90",
                                                        "subdenomination": null
                                                    }
                                                },
                                                "right": {
                                                    "type": "BinaryOperation",
                                                    "operator": "<",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "timeElapsedInDays"
                                                    },
                                                    "right": {
                                                        "type": "NumberLiteral",
                                                        "number": "120",
                                                        "subdenomination": null
                                                    }
                                                }
                                            },
                                            "TrueBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "IfStatement",
                                                        "condition": {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSaleInICOPhase3"
                                                            }
                                                        },
                                                        "TrueBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "tokens"
                                                                                },
                                                                                "memberName": "mul"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "10",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "FunctionCall",
                                                                            "expression": {
                                                                                "type": "MemberAccess",
                                                                                "expression": {
                                                                                    "type": "Identifier",
                                                                                    "name": "bonus"
                                                                                },
                                                                                "memberName": "div"
                                                                            },
                                                                            "arguments": [
                                                                                {
                                                                                    "type": "NumberLiteral",
                                                                                    "number": "100",
                                                                                    "subdenomination": null
                                                                                }
                                                                            ],
                                                                            "names": []
                                                                        }
                                                                    }
                                                                },
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "FunctionCall",
                                                                        "expression": {
                                                                            "type": "Identifier",
                                                                            "name": "require"
                                                                        },
                                                                        "arguments": [
                                                                            {
                                                                                "type": "BinaryOperation",
                                                                                "operator": "<=",
                                                                                "left": {
                                                                                    "type": "BinaryOperation",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                        "type": "BinaryOperation",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                            "type": "Identifier",
                                                                                            "name": "TOKENS_SOLD"
                                                                                        },
                                                                                        "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "tokens"
                                                                                        }
                                                                                    },
                                                                                    "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "bonus"
                                                                                    }
                                                                                },
                                                                                "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "maxTokensToSaleInICOPhase3"
                                                                                }
                                                                            }
                                                                        ],
                                                                        "names": []
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "FalseBody": {
                                                            "type": "Block",
                                                            "statements": [
                                                                {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                        "type": "BinaryOperation",
                                                                        "operator": "=",
                                                                        "left": {
                                                                            "type": "Identifier",
                                                                            "name": "bonus"
                                                                        },
                                                                        "right": {
                                                                            "type": "NumberLiteral",
                                                                            "number": "0",
                                                                            "subdenomination": null
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "FalseBody": {
                                                "type": "Block",
                                                "statements": [
                                                    {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                            "type": "BinaryOperation",
                                                            "operator": "=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "bonus"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "view"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "buyTokens",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "address"
                                },
                                "name": "beneficiary",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "weiAmount",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "uint256"
                                        },
                                        "name": "tokens",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": null
                            },
                            {
                                "type": "IfStatement",
                                "condition": {
                                    "type": "BinaryOperation",
                                    "operator": "<=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "now"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endTime"
                                    }
                                },
                                "TrueBody": {
                                    "type": "Block",
                                    "statements": [
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "!=",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "beneficiary"
                                                        },
                                                        "right": {
                                                            "type": "NumberLiteral",
                                                            "number": "0x0",
                                                            "subdenomination": null
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "==",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "isCrowdsalePaused"
                                                        },
                                                        "right": {
                                                            "type": "BooleanLiteral",
                                                            "value": false
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "validPurchase"
                                                        },
                                                        "arguments": [],
                                                        "names": []
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "<",
                                                        "left": {
                                                            "type": "Identifier",
                                                            "name": "TOKENS_SOLD"
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "maxTokensToSale"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "weiAmount"
                                                },
                                                "right": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "msg"
                                                    },
                                                    "memberName": "value"
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "tokens"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "weiAmount"
                                                        },
                                                        "memberName": "mul"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "ratePerWei"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "VariableDeclarationStatement",
                                            "variables": [
                                                {
                                                    "type": "VariableDeclaration",
                                                    "typeName": {
                                                        "type": "ElementaryTypeName",
                                                        "name": "uint256"
                                                    },
                                                    "name": "bonus",
                                                    "storageLocation": null
                                                }
                                            ],
                                            "initialValue": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "determineBonus"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tokens"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "tokens"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "tokens"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "bonus"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "require"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "BinaryOperation",
                                                        "operator": "<=",
                                                        "left": {
                                                            "type": "BinaryOperation",
                                                            "operator": "+",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "tokens"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "Identifier",
                                                            "name": "maxTokensToSale"
                                                        }
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "weiRaised"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "weiRaised"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "weiAmount"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "MemberAccess",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "token"
                                                    },
                                                    "memberName": "mint"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "Identifier",
                                                        "name": "wallet"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "beneficiary"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tokens"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "TokenPurchase"
                                                },
                                                "arguments": [
                                                    {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "sender"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "beneficiary"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "weiAmount"
                                                    },
                                                    {
                                                        "type": "Identifier",
                                                        "name": "tokens"
                                                    }
                                                ],
                                                "names": []
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "BinaryOperation",
                                                "operator": "=",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "TOKENS_SOLD"
                                                },
                                                "right": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "TOKENS_SOLD"
                                                        },
                                                        "memberName": "add"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "tokens"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            }
                                        },
                                        {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                                "type": "FunctionCall",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "forwardFunds"
                                                },
                                                "arguments": [],
                                                "names": []
                                            }
                                        }
                                    ]
                                },
                                "FalseBody": {
                                    "type": "IfStatement",
                                    "condition": {
                                        "type": "BinaryOperation",
                                        "operator": "&&",
                                        "left": {
                                            "type": "BinaryOperation",
                                            "operator": ">",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "endTime"
                                            }
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "<=",
                                            "left": {
                                                "type": "Identifier",
                                                "name": "now"
                                            },
                                            "right": {
                                                "type": "BinaryOperation",
                                                "operator": "+",
                                                "left": {
                                                    "type": "Identifier",
                                                    "name": "endTime"
                                                },
                                                "right": {
                                                    "type": "NumberLiteral",
                                                    "number": "365",
                                                    "subdenomination": "days"
                                                }
                                            }
                                        }
                                    },
                                    "TrueBody": {
                                        "type": "Block",
                                        "statements": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "!=",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "beneficiary"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0x0",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "==",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "isCrowdsalePaused"
                                                            },
                                                            "right": {
                                                                "type": "BooleanLiteral",
                                                                "value": false
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": ">",
                                                            "left": {
                                                                "type": "MemberAccess",
                                                                "expression": {
                                                                    "type": "Identifier",
                                                                    "name": "msg"
                                                                },
                                                                "memberName": "value"
                                                            },
                                                            "right": {
                                                                "type": "NumberLiteral",
                                                                "number": "0",
                                                                "subdenomination": null
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "<",
                                                            "left": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSale"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "weiAmount"
                                                    },
                                                    "right": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "msg"
                                                        },
                                                        "memberName": "value"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "tokens"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "weiAmount"
                                                            },
                                                            "memberName": "mul"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "ratePerWei"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "require"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "BinaryOperation",
                                                            "operator": "<=",
                                                            "left": {
                                                                "type": "BinaryOperation",
                                                                "operator": "+",
                                                                "left": {
                                                                    "type": "Identifier",
                                                                    "name": "TOKENS_SOLD"
                                                                },
                                                                "right": {
                                                                    "type": "Identifier",
                                                                    "name": "tokens"
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "Identifier",
                                                                "name": "maxTokensToSale"
                                                            }
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "weiRaised"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "weiRaised"
                                                            },
                                                            "memberName": "add"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "weiAmount"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "MemberAccess",
                                                        "expression": {
                                                            "type": "Identifier",
                                                            "name": "token"
                                                        },
                                                        "memberName": "mint"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "Identifier",
                                                            "name": "wallet"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "beneficiary"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "tokens"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "TokenPurchase"
                                                    },
                                                    "arguments": [
                                                        {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "msg"
                                                            },
                                                            "memberName": "sender"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "beneficiary"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "weiAmount"
                                                        },
                                                        {
                                                            "type": "Identifier",
                                                            "name": "tokens"
                                                        }
                                                    ],
                                                    "names": []
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "BinaryOperation",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "Identifier",
                                                        "name": "TOKENS_SOLD"
                                                    },
                                                    "right": {
                                                        "type": "FunctionCall",
                                                        "expression": {
                                                            "type": "MemberAccess",
                                                            "expression": {
                                                                "type": "Identifier",
                                                                "name": "TOKENS_SOLD"
                                                            },
                                                            "memberName": "add"
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Identifier",
                                                                "name": "tokens"
                                                            }
                                                        ],
                                                        "names": []
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "FunctionCall",
                                                    "expression": {
                                                        "type": "Identifier",
                                                        "name": "forwardFunds"
                                                    },
                                                    "arguments": [],
                                                    "names": []
                                                }
                                            }
                                        ]
                                    },
                                    "FalseBody": null
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "payable"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "forwardFunds",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": [],
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "wallet"
                                        },
                                        "memberName": "transfer"
                                    },
                                    "arguments": [
                                        {
                                            "type": "MemberAccess",
                                            "expression": {
                                                "type": "Identifier",
                                                "name": "msg"
                                            },
                                            "memberName": "value"
                                        }
                                    ],
                                    "names": []
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "validPurchase",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "withinPeriod",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "&&",
                                    "left": {
                                        "type": "BinaryOperation",
                                        "operator": ">=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "now"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "startTime"
                                        }
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "<=",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "now"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "endTime"
                                        }
                                    }
                                }
                            },
                            {
                                "type": "VariableDeclarationStatement",
                                "variables": [
                                    {
                                        "type": "VariableDeclaration",
                                        "typeName": {
                                            "type": "ElementaryTypeName",
                                            "name": "bool"
                                        },
                                        "name": "nonZeroPurchase",
                                        "storageLocation": null
                                    }
                                ],
                                "initialValue": {
                                    "type": "BinaryOperation",
                                    "operator": "!=",
                                    "left": {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "value"
                                    },
                                    "right": {
                                        "type": "NumberLiteral",
                                        "number": "0",
                                        "subdenomination": null
                                    }
                                }
                            },
                            {
                                "type": "BinaryOperation",
                                "operator": "&&",
                                "left": {
                                    "type": "Identifier",
                                    "name": "withinPeriod"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "nonZeroPurchase"
                                }
                            }
                        ]
                    },
                    "visibility": "internal",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "hasEnded",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": ">",
                                "left": {
                                    "type": "Identifier",
                                    "name": "now"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "endTime"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "changeEndDate",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "endTimeUnixTimestamp",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "endTime"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "endTimeUnixTimestamp"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "changeStartDate",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "startTimeUnixTimestamp",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "startTime"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "startTimeUnixTimestamp"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "setPriceRate",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "newPrice",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "ratePerWei"
                                    },
                                    "right": {
                                        "type": "Identifier",
                                        "name": "newPrice"
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "circulateTokensForSale",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint256"
                                },
                                "name": "tokenAmount",
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "tokenAmount"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "*",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "tokenAmount"
                                        },
                                        "right": {
                                            "type": "BinaryOperation",
                                            "operator": "**",
                                            "left": {
                                                "type": "NumberLiteral",
                                                "number": "10",
                                                "subdenomination": null
                                            },
                                            "right": {
                                                "type": "NumberLiteral",
                                                "number": "18",
                                                "subdenomination": null
                                            }
                                        }
                                    }
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "maxTokensToSale"
                                    },
                                    "right": {
                                        "type": "BinaryOperation",
                                        "operator": "+",
                                        "left": {
                                            "type": "Identifier",
                                            "name": "maxTokensToSale"
                                        },
                                        "right": {
                                            "type": "Identifier",
                                            "name": "tokenAmount"
                                        }
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "pauseCrowdsale",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "isCrowdsalePaused"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": true
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "resumeCrowdsale",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "bool"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "FunctionCall",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "require"
                                    },
                                    "arguments": [
                                        {
                                            "type": "BinaryOperation",
                                            "operator": "==",
                                            "left": {
                                                "type": "MemberAccess",
                                                "expression": {
                                                    "type": "Identifier",
                                                    "name": "msg"
                                                },
                                                "memberName": "sender"
                                            },
                                            "right": {
                                                "type": "Identifier",
                                                "name": "wallet"
                                            }
                                        }
                                    ],
                                    "names": []
                                }
                            },
                            {
                                "type": "ExpressionStatement",
                                "expression": {
                                    "type": "BinaryOperation",
                                    "operator": "=",
                                    "left": {
                                        "type": "Identifier",
                                        "name": "isCrowdsalePaused"
                                    },
                                    "right": {
                                        "type": "BooleanLiteral",
                                        "value": false
                                    }
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": null
                },
                {
                    "type": "FunctionDefinition",
                    "name": "remainingTokensForSale",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                    "type": "Identifier",
                                    "name": "maxTokensToSale"
                                },
                                "right": {
                                    "type": "Identifier",
                                    "name": "TOKENS_SOLD"
                                }
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                },
                {
                    "type": "FunctionDefinition",
                    "name": "showMyTokenBalance",
                    "parameters": {
                        "type": "ParameterList",
                        "parameters": []
                    },
                    "returnParameters": {
                        "type": "ParameterList",
                        "parameters": [
                            {
                                "type": "Parameter",
                                "typeName": {
                                    "type": "ElementaryTypeName",
                                    "name": "uint"
                                },
                                "name": null,
                                "storageLocation": null,
                                "isStateVar": false,
                                "isIndexed": false
                            }
                        ]
                    },
                    "body": {
                        "type": "Block",
                        "statements": [
                            {
                                "type": "FunctionCall",
                                "expression": {
                                    "type": "MemberAccess",
                                    "expression": {
                                        "type": "Identifier",
                                        "name": "token"
                                    },
                                    "memberName": "balanceOf"
                                },
                                "arguments": [
                                    {
                                        "type": "MemberAccess",
                                        "expression": {
                                            "type": "Identifier",
                                            "name": "msg"
                                        },
                                        "memberName": "sender"
                                    }
                                ],
                                "names": []
                            }
                        ]
                    },
                    "visibility": "public",
                    "modifiers": [],
                    "isConstructor": false,
                    "isFallback": false,
                    "isReceive": false,
                    "stateMutability": "constant"
                }
            ],
            "kind": "contract"
        }
    ]
}