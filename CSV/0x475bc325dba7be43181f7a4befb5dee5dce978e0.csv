Function Name,State Variables Modified,Can Transfer Ether
"migrate(address,uint256)",,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
balanceOf(address),,False
"approve(address,uint256)",,True
"allowance(address,address)",,False
"constructor(address,uint256)","ethFundDeposit, isFunding, fundingStartBlock, fundingStopBlock, currentSupply, totalSupply, currentSupply, totalSupply",False
setTokenExchangeRate(uint256),"tokenExchangeRate, tokenExchangeRate",False
increaseSupply(uint256),"currentSupply, totalSupply, currentSupply, currentSupply",False
decreaseSupply(uint256),"tokenRaised, currentSupply, currentSupply, currentSupply",False
"startFunding(uint256,uint256)","isFunding, fundingStartBlock, fundingStopBlock, isFunding",False
stopFunding(),"isFunding, isFunding",False
setMigrateContract(address),"newContractAddr, newContractAddr",False
changeOwner(address),ethFundDeposit,False
migrate(),"isFunding, newContractAddr, tokenMigrated, tokenMigrated, newContractAddr",True
transferETH(),ethFundDeposit,True
"allocateToken(address,uint256)","tokenExchangeRate, tokenIssued, tokenIssued",False
"function()publicpayable{require(isFunding);require(msg.value!=0);require(block.number>=fundingStartBlock);require(block.number<=fundingStopBlock);uint256tokens=safeMult(msg.value,tokenExchangeRate);require(tokens+tokenRaised<=currentSupply);tokenRaised=safeAdd(tokenRaised,tokens);balances[msg.sender]+=tokens;emitIssueToken(msg.sender,msg.value);}()","isFunding, fundingStartBlock, fundingStopBlock, tokenExchangeRate, tokenRaised, currentSupply, tokenRaised, tokenRaised",True
