Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
"constructor(uint256,address)","startTime, finishTime, TIME_DURATION_MAX, totalSupply, price, feeOwner, owner",True
balanceOf(address),playerOf,False
getLuckyPendingSize(),luckyPendings,False
getLuckyRecordSize(),luckyRecords,False
getGameInfo(),"totalPot, sharePot, finalPot, luckyPot, price, totalSupply, feeIndex, feePercents, feePercents, feeIndex, finishTime, finishTime, winner, winner, lastPlayer, winner, winAmount, finalPot",False
getPlayerInfo(address),"playerOf, sharePot, totalSupply",False
getDealerAndLuckyInfo(uint256),"dealerDay, dealers, playerOf, dealers, dealers, luckyRecords, luckyRecords, luckyRecords, luckyRecords",False
"transfer(address,uint256)","playerOf, finishTime, winner, sharePot, totalSupply, feeIndex, feePercents, feePercents, feeIndex, feeAmount, feeAmount",True
"function()isActivatedisAccountpayablepublic{uint256_eth=msg.value;require(now<finishTime);InternalBuyEventmemory_buyEvent=InternalBuyEvent({flag1:0});Playerstorage_player=playerOf[msg.sender];if(_player.pid==0){require(_eth>=FEE_REGISTER_ACCOUNT);uint256_fee=FEE_REGISTER_ACCOUNT.sub(BUY_AMOUNT_MIN);_eth=_eth.sub(_fee);feeAmount=feeAmount.add(_fee);playerCount=playerCount.add(1);Playermemory_p=Player({pid:playerCount,ethTotal:0,ethBalance:0,ethWithdraw:0,ethShareWithdraw:0,tokenBalance:0,tokenDay:0,tokenDayBalance:0});playerOf[msg.sender]=_p;playerIdOf[_p.pid]=msg.sender;_player=playerOf[msg.sender];_buyEvent.flag1+=1;}buy(_player,_buyEvent,_eth);}()","finishTime, playerOf, FEE_REGISTER_ACCOUNT, FEE_REGISTER_ACCOUNT, BUY_AMOUNT_MIN, feeAmount, feeAmount, playerCount, playerCount, playerCount, playerOf, playerIdOf, playerOf",True
changeFeeOwner(address),"feeOwner, feeOwner",False
withdrawFee(uint256),"finishTime, winner, feeAmount, feeAmount, feeAmount, feeOwner",True
