Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, addresses, payoutDate",True
"function()payablepublic{if(msg.value==0){return;}require(msg.value>=MINIMUM_INVEST,""Too small amount, minimum 0.001 ether"");investorstorageuser=investors[msg.sender];if(user.id==0){user.id=addresses.length;addresses.push(msg.sender);addresses.length++;investorCount++;addressreferrer=bytesToAddress(msg.data);if(investors[referrer].deposit>0&&referrer!=msg.sender){user.referrer=referrer;}}user.deposit+=msg.value;user.deposits+=1;user.date=now;emitInvest(msg.sender,msg.value);depositAmount+=msg.value;owner.transfer(msg.value/5);if(user.referrer>0x0){uintbonusAmount=(msg.value/100)*INTEREST;user.referrer.transfer(bonusAmount);emitRefFee(user.referrer,bonusAmount);if(user.deposits==1){msg.sender.transfer(bonusAmount);emitCashback(msg.sender,bonusAmount);}}}()","MINIMUM_INVEST, investors, addresses, addresses, addresses, investors, owner",True
payout(uint),"payoutDate, PAYOUT_CUMULATIVE_INTERVAL, addresses, addresses, investors, investors, owner, payoutDate",True
payoutSelf(address),"investors, investors, investors, owner",True
getInvestorDeposit(address),investors,False
getInvestorCount(),,False
getDepositAmount(),,False
getInvestorDatePayout(address),investors,False
getPayoutCumulativeInterval(),PAYOUT_CUMULATIVE_INTERVAL,False
"setDatePayout(address,uint)",investors,False
setPayoutCumulativeInterval(uint),PAYOUT_CUMULATIVE_INTERVAL,False
getInvestorUnPaidAmount(address),"investors, investors",False
