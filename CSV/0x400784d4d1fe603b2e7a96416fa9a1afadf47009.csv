Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
pause(),paused,False
unpause(),paused,False
"safeAdd(uint,uint)",,False
"safeSub(uint,uint)",,False
"safeMul(uint,uint)",,False
"safeDiv(uint,uint)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
constructor(),"symbol, name, decimals, _totalSupply, decimals, transferAdmins, owner, balances, owner, _totalSupply, owner, _totalSupply",True
totalSupply(),_totalSupply,False
balanceOf(address),balances,False
"transfer(address,uint)","balances, balances, balances, balances, balances",True
"approve(address,uint)","allowed, allowed",True
"transferFrom(address,address,uint)","allowed, balances, balances, balances, allowed, allowed, balances, balances",True
"allowance(address,address)",allowed,False
"setTransferAdmin(address,bool)",transferAdmins,True
enablesTransfers(),transferEnabled,True
burn(uint256),"balances, balances, _totalSupply, _totalSupply",True
function()publicpayable{revert();}(),,False
"constructor(,address,uint256)","token, beneficiary, releaseTime1, releaseTime2, releaseTime1, releaseTime3, releaseTime1",False
setInitialBalance(),"initialBalance, token",False
updateReleaseTime(uint256),"releaseTime1, releaseTime1, releaseTime1, releaseTime2, releaseTime1, releaseTime3, releaseTime1",False
release(),"releaseTime1, initialBalance, step, releaseTime1, step, releaseTime2, step, releaseTime3, token, token, beneficiary, step",True
"constructor(,address,uint,uint,uint,uint)","isVerifier, token, beneficiary, preSaleTime, mainSaleTime, endSaleTime, hardCap",True
"function()publicpayablewhenNotPaused{uintamount=msg.value;uintnewTotalContribution=safeAdd(contributionAmtOf[msg.sender],msg.value);require(amount>=minContribution);if(preSale){require(newTotalContribution<=preMaxContribution);}if(mainSale){require(newTotalContribution<=mainMaxContribution);}allocateTokens(msg.sender,amount);}()","contributionAmtOf, minContribution, preSale, preMaxContribution, mainSale, mainMaxContribution",True
"tokenTransfer(address,uint)",token,True
beneficiaryWithdrawal(),"beneficiary, beneficiary",True
terminate(),saleEnded,False
setRate(uint),"lowRate, highRate, rate, rate",False
startPreSale(),"beforeSale, preSale",False
startMainSale(),"preSale, mainSale",False
endSale(),"preSale, mainSale, saleEnded",False
updatePreSaleTime(uint),"beforeSale, preSaleTime, preSaleTime",False
updateMainSaleTime(uint),"mainSale, mainSaleTime, mainSaleTime",False
updateEndSaleTime(uint),"saleEnded, endSaleTime, endSaleTime",False
burnUnsoldTokens(),"token, token",False
addVerifier(address),isVerifier,False
removeVerifier(address),isVerifier,False
verifyKYC(),kycVerified,False
"moveReleaseTime(address,uint256)","timeLocks, timeLocks",False
releaseLock(address),"timeLocks, timeLocks",False
"offChainTrans(address,uint256,uint256,bool)","token, contributionAmtOf, contributionAmtOf, tokenBalanceOf, tokenBalanceOf, timeLocks, token, timeLocks, timeLocks, token",True
