Function Name,State Variables Modified,Can Transfer Ether
"setOtherManager(address,uint8)",otherManagers,False
setPrimaryManager(address),managerPrimary,False
setSecondaryManager(address),managerSecondary,False
setBanker(address),bankManager,False
pause(),paused,False
unpause(),paused,False
hasError(),error,False
noError(),error,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"setApprovalForAll(address,bool)",,False
"isApprovedForAll(address,address)",,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
totalSupply(),,False
"tokenOfOwnerByIndex(address,uint256)",,False
tokenByIndex(uint256),,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
balanceOf(address),ownedTokensCount,False
ownerOf(uint256),tokenOwner,False
exists(uint256),tokenOwner,False
"approve(address,uint256)",tokenApprovals,True
getApproved(uint256),tokenApprovals,False
"setApprovalForAll(address,bool)",operatorApprovals,True
"isApprovedForAll(address,address)",operatorApprovals,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,True
"onERC721Received(address,uint256,bytes)",,False
"onERC721Received(address,uint256,bytes)",,False
tokenURI(uint256),tokenURIBase,False
"tokenOfOwnerByIndex(address,uint256)",ownedTokens,False
totalSupply(),allTokens,False
tokenByIndex(uint256),allTokens,False
name(),name_,False
symbol(),symbol_,False
supportsInterface(bytes4),,False
implementsERC721(),,False
constructor(),"paused, error, canBurn, managerPrimary, managerSecondary, bankManager, name_, symbol_",True
"getAssetIDForTypeSequenceID(uint256,uint256)",sequenceIDToTypeForID,False
getAssetDetails(uint256),"nftDataA, nftDataB, ownedTokensIndex",False
totalSupplyOfType(uint256),"assetTypeTotalCount, assetTypeBurnedCount",False
totalCreatedOfType(uint256),assetTypeTotalCount,False
totalBurnedOfType(uint256),assetTypeBurnedCount,False
getAssetRawMeta(uint256),"nftDataA, nftDataB",False
getAssetIdItemType(uint256),nftDataA,False
getAssetIdTypeSequenceId(uint256),nftDataB,False
getIsNFTAttached(uint256),nftDataB,False
getAssetIdCreator(uint256),nftDataA,False
"isAssetIdOwnerOrApproved(address,uint256)",,False
getAssetIdOwner(uint256),,False
getAssetIdOwnerIndex(uint256),ownedTokensIndex,False
tokensOfOwner(address),,False
getTypeName(uint32),assetTypeName,False
"transferFrom(address,address,uint256)",,False
"multiBatchTransferFrom(,,)",,True
"batchTransferFrom(,address,address)",,True
"multiBatchSafeTransferFrom(,,)",,False
"batchSafeTransferFrom(,address,address)",,False
"batchApprove(,address)",,False
"batchSetApprovalForAll(,bool)",,False
requestDetachment(uint256),"attachedSystemActive, detachmentTime",True
attachAsset(uint256),,True
batchAttachAssets(),,False
batchDetachAssets(),,False
requestDetachmentOnPause(uint256),,True
batchBurnAssets(),,False
burnAsset(uint256),"canBurn, assetTypeBurnedCount",True
setTokenURIBase(string),,False
"setPermanentLimitForType(uint32,uint256)","assetTypeCreationLimit, assetTypeCreationLimit",False
"setTypeName(uint32,string)",assetTypeName,False
"batchSpawnAsset(address,,,uint256)",,False
"batchSpawnAsset(,,,uint256)",,False
"batchSpawnAssetWithCreator(,,,,)",,False
"spawnAsset(address,uint256,uint256,uint256)",,False
"spawnAssetWithCreator(address,uint256,uint256,uint256,address)",,False
withdrawBalance(),bankManager,True
setCanBurn(bool),canBurn,False
burnAssetOperator(uint256),assetTypeBurnedCount,False
toggleAttachedEnforement(bool),attachedSystemActive,False
setDetachmentTime(uint256),detachmentTime,False
setNFTDetached(uint256),,True
setBatchDetachCollectibles(),,False
