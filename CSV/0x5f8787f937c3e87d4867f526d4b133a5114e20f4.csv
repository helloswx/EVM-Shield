Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"mint(address,uint256)",,False
"burn(address,uint256)",,False
"burnFrom(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)",,False
"burn(address,uint256)",,False
"burnFrom(address,uint256)","allowed, allowed, allowed",True
constructor(),"owner, owner, tokenReserve, tokenReserve",False
constructor(),"admin, coinContract, owner, coinContract, remainingTokens, cap",True
"function()publicpayable{require(currentStage==Stages.icoStart);require(msg.value>0);require(remainingTokens>0);uint256weiAmount=msg.value;uint256tokens=weiAmount.mul(basePrice).div(1ether);require(remainingTokens>=tokens);tokensSold=tokensSold.add(tokens);remainingTokens=cap.sub(tokensSold);coinContract.transfer(msg.sender,tokens);admin.transfer(weiAmount);emitInvest(msg.sender,msg.value,tokens);}()","remainingTokens, basePrice, remainingTokens, tokensSold, tokensSold, remainingTokens, cap, tokensSold, coinContract, admin",True
startIco(),admin,True
finalizeIco(),admin,True
