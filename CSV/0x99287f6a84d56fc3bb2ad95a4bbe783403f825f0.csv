Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
"increaseApproval(address,uint)",,True
"decreaseApproval(address,uint)",,True
"DadiPreSale(,uint256)","owner, token, tokenSupply",True
"function()publicnonZeropayable{require(state==SaleState.PreSale);buyTokens(msg.sender,msg.value);}()",state,True
addPreSaleWallet(address),preSaleWallets,False
"addWhitelistUsers(,)",,False
"addWhitelistUser(address,uint256)","whitelisted, whitelisted, whitelistedIndex, whitelisted",False
calculateTokens(uint256),"ethRate, preSaleTokenPrice",False
setState(uint256),"state, state",False
setPurchasePeriod(uint256),purchasePeriod,False
startPreSale(uint256),"state, purchasePeriod, state",False
updateEthRate(uint256),ethRate,False
"offlineTransaction(address,uint256)",,True
finalizeSale(),"state, state",False
closeSale(address),"state, state, token, state",True
setTokenDistribution(),"state, state",False
distributeTokens(address),"state, investors, investors, investors, token",True
"distributeToAlternateAddress(address,address)","state, investors, investors, token",True
"redistributeTokens(address,address)","investors, investors, token, state",True
getTokensAvailable(),"tokenSupply, tokensPurchased",False
getTokensPurchased(),tokensPurchased,False
getBalance(),,False
ethToUsd(uint256),ethRate,False
isSuccessful(),state,False
getWhitelistUser(address),"whitelisted, whitelisted",False
getInvestorCount(),investorIndex,False
getInvestor(address),"investors, investors, investors",False
