Function Name,State Variables Modified,Can Transfer Ether
"addOracles(,)","oracles, oracles",False
"removeOracles(,)","oracles, oracles",False
isHolderAddress(address),,False
allowance(address),,False
"changeAllowance(address,uint)",,False
isService(address),,False
"__transferWithReference(address,uint,string,address)",,False
"__transferFromWithReference(address,address,uint,string,address)",,False
"__approve(address,uint,address)",,False
"__process(bytes,address)",,False
"isTransferAllowed(address,address,address,address,uint)",,False
name(bytes32),,False
"setProxy(address,bytes32)",,False
"isOwner(address,bytes32)",,False
totalSupply(bytes32),,False
"balanceOf(address,bytes32)",,False
"allowance(address,address,bytes32)",,False
baseUnit(bytes32),,False
"proxyTransferWithReference(address,uint,bytes32,string,address)",,False
"proxyTransferFromWithReference(address,address,uint,bytes32,string,address)",,False
"proxyApprove(address,uint,bytes32,address)",,False
"issueAsset(bytes32,uint,string,string,uint8,bool)",,False
"reissueAsset(bytes32,uint)",,False
"revokeAsset(bytes32,uint)",,False
isReissuable(bytes32),,False
"changeOwnership(bytes32,address)",,False
"function()publicpayable{_getAsset().__process.value(msg.value)(msg.data,msg.sender);}()",,True
"init(,string,string)","platform, platform, symbol, smbl, name",False
totalSupply(),"platform, smbl",False
balanceOf(address),"platform, smbl",False
"allowance(address,address)","platform, smbl",False
decimals(),"platform, smbl",False
"transfer(address,uint)",,True
"transferWithReference(address,uint,string)",,True
"__transferWithReference(address,uint,string,address)","platform, smbl",True
"transferFrom(address,address,uint)",,True
"__transferFromWithReference(address,address,uint,string,address)","platform, smbl",True
"approve(address,uint)",,True
"__approve(address,uint,address)","platform, smbl",True
"emitTransfer(address,address,uint)",,False
"emitApprove(address,address,uint)",,False
getLatestVersion(),,False
getPendingVersion(),,False
getPendingVersionTimestamp(),,False
proposeUpgrade(address),,False
purgeUpgrade(),,False
commitUpgrade(),,False
"isTransferAllowed(address,address,address,address,uint)",,False
function()payablepublic{revert();}(),,False
registerUser(address),"membersCount, membersCount",False
unregisterUser(address),"membersCount, membersCount",False
"createGroup(bytes32,uint)","groupsCount, groupsCount",False
"changeGroupActiveStatus(bytes32,bool)",groupsBlocked,False
"addUsersToGroup(bytes32,)",,False
"removeUsersFromGroup(bytes32,)",,False
isRegisteredUser(address),,False
"isUserInGroup(bytes32,address)",,False
isGroupExists(bytes32),,False
getGroups(),groupsCount,False
signIn(address),,False
signOut(address),,False
"addPolicyRule(bytes4,address,bytes32,uint,uint)",,False
"removePolicyRule(bytes4,address,bytes32)",,False
"addTx(bytes32,bytes4,address)",,False
deleteTx(bytes32),,False
"accept(bytes32,bytes32)",,False
"decline(bytes32,bytes32)",,False
revoke(bytes32),,False
hasConfirmedRecord(bytes32),,False
"getPolicyDetails(bytes4,address)",,False
PendingManager(address),accessManager,False
function()payablepublic{revert();}(),,False
setAccessManager(address),accessManager,False
signIn(address),authorized,False
signOut(address),authorized,False
"addPolicyRule(bytes4,address,bytes32,uint,uint)","accessManager, policiesCount, policiesCount",False
"removePolicyRule(bytes4,address,bytes32)",accessManager,False
"addTx(bytes32,bytes4,address)","txCount, txCount",False
deleteTx(bytes32),"txCount, txCount, txCount",False
"accept(bytes32,bytes32)",accessManager,True
"decline(bytes32,bytes32)",accessManager,True
"forceRejectVotes(bytes32,address)",,False
revoke(bytes32),,True
hasConfirmedRecord(bytes32),,False
"getPolicyDetails(bytes4,address)",,False
"isGroupInPolicy(bytes32,bytes32)",,False
isPolicyExist(bytes32),,False
isTxExist(bytes32),,False
getPendingManager(),,False
"ServiceController(address,address,address,address)","pendingManager, proxy, profiterole, treasury",False
getPendingManager(),pendingManager,False
"addEmissionProvider(address,uint)",,False
"removeEmissionProvider(address,uint)",,False
"addBurningMan(address,uint)",,False
"removeBurningMan(address,uint)",,False
"updateProfiterole(address,uint)",profiterole,False
"updateTreasury(address,uint)",treasury,False
"updatePendingManager(address,uint)",pendingManager,False
"addSideService(address,uint)","sideServices, sideServices",False
"removeSideService(address,uint)",sideServices,False
isService(address),"profiterole, treasury, proxy, pendingManager, sideServices",False
"DataController(address,address)",serviceController,False
function()payablepublic{revert();}(),,False
setWithdraw(address),withdrawal,False
getPendingManager(),serviceController,False
getHolderInfo(bytes32),holderIndex,True
getHolderAddresses(bytes32),holderIndex,False
getHolderCountryCode(bytes32),holderIndex,False
getHolderExternalIdByAddress(address),,False
isRegisteredAddress(address),holderIndex,False
"isHolderOwnAddress(bytes32,address)",holderIndex,False
getCountryInfo(uint),,False
getCountryLimit(uint),,False
addCountryCode(uint),,False
"registerHolder(bytes32,address,uint)","holderIndex, holdersCount, holdersCount, holderIndex",True
"addHolderAddress(bytes32,address)","holderIndex, holderIndex",False
"removeHolderAddress(bytes32,address)",holderIndex,False
"changeOperational(bytes32,bool)",holderIndex,False
"updateTextForHolder(bytes32,bytes)",holderIndex,False
"updateLimitPerDay(bytes32,uint)",holderIndex,True
"updateLimitPerMonth(bytes32,uint)",holderIndex,True
"changeCountryLimit(uint,uint)",,False
"withdrawFrom(address,uint)",holderIndex,True
"depositTo(address,uint)",holderIndex,True
"updateCountryHoldersCount(uint,uint)",,False
"changeAllowance(address,uint)","serviceController, allowance",False
