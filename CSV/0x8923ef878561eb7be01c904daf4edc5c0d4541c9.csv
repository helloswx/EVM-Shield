Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
halt(),halted,False
unhalt(),halted,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
isToken(),,False
isUpgradeAgent(),,False
"upgradeFrom(address,uint256)",,False
upgrade(uint256),"balances, balances, totalSupply, totalSupply, totalUpgraded, totalUpgraded, upgradeAgent, upgradeAgent",True
setUpgradeAgent(address),"upgradeMaster, upgradeAgent, upgradeAgent, upgradeAgent, totalSupply, upgradeAgent",True
getUpgradeState(),"upgradeAgent, totalUpgraded",False
setUpgradeMaster(address),"upgradeMaster, upgradeMaster",True
canUpgrade(),,False
"mint(address,uint)","totalSupply, totalSupply, balances, balances",False
"setMintAgent(address,bool)",mintAgents,False
setReleaseAgent(address),releaseAgent,False
"setTransferAgent(address,bool)",transferAgents,True
releaseTokenTransfer(),released,False
burn(uint256),"balances, balances, balances, totalSupply, totalSupply",True
releaseTokenTransfer(),,False
canUpgrade(),released,False
setOperatorCommission(uint),operatorProductCommissionInPerc,False
setOwnersCommission(uint),ownersProductCommissionInPerc,False
"independentSellerJoined(address,uint,address)",operatorProductCommissionInPerc,False
"ownersProductAdded(address,uint,address)",ownersProductCommissionInPerc,False
isFinalizeAgent(),,False
isSane(),,False
isPricingStrategy(),,False
isSane(address),,False
isPresalePurchase(address),,False
"calculatePrice(uint,uint,uint,address,uint)",,False
"setPreicoAddress(address,uint)",preicoAddresses,False
getMilestone(uint),"milestones, milestones",False
getPricingStartsAt(),,False
getPricingEndsAt(),,False
isSane(address),"crowdsale, crowdsale",False
getCurrentPrice(),,False
"calculatePrice(uint,uint,uint,address,uint)","decimals, preicoAddresses, preicoAddresses",False
isPresalePurchase(address),preicoAddresses,False
"preallocate(address,uint,uint)","token, weiRaised, weiRaised, tokensSold, tokensSold, investedAmountOf, investedAmountOf, tokenAmountOf, tokenAmountOf",False
"investWithSignedAddress(address,uint128,uint8,bytes32,bytes32)",signerAddress,False
"investWithCustomerId(address,uint128)",requiredSignedAddress,False
invest(address),"requireCustomerId, requiredSignedAddress",False
"buyWithSignedAddress(uint128,uint8,bytes32,bytes32)",,True
buyWithCustomerId(uint128),,True
buy(),,True
finalize(),"finalized, finalizeAgent, finalizeAgent, finalized",False
setMultisig(address),"investorCount, MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE, multisigWallet",False
loadRefund(),"loadedRefund, loadedRefund",False
refund(),"investedAmountOf, investedAmountOf, weiRefunded, weiRefunded",True
isMinimumGoalReached(),"weiRaised, minimumFundingGoal",False
isFinalizerSane(),finalizeAgent,False
isPricingSane(),pricingStrategy,False
getState(),"finalized, finalizeAgent, finalizeAgent, pricingStrategy, startsAt, endsAt, weiRaised, loadedRefund, weiRaised",False
isCrowdsale(),,False
isCrowdsaleFull(),,False
isCrowdsaleFull(),"tokensSold, maximumSellableTokens",False
getToken(),"crowdsale, crowdsale",False
buyWithCustomerId(uint128),,False
buy(),,False
buyForEverybody(),"crowdsale, crowdsale, weiRaised, tokensBought, tokensBought, tokensBought",False
getClaimAmount(address),"balances, tokensBought, weiRaised",False
getClaimLeft(address),claimed,False
setCrowdsale(),"crowdsale, crowdsale",False
setTimeLock(uint),timeLock,False
forceRefund(),forcedRefund,False
loadRefund(),,False
getState(),"forcedRefund, tokensBought, freezeEndsAt",False
isPresale(),,False
