Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
constructor(address),,False
setGameAddress(address),gameAddress,False
"buyTokens(address,uint256)",,False
startEthLottery(),isEthLottery,False
startTokensLottery(),isTokensLottery,False
restartEthLottery(),"ethLotteryParticipants, ethLotteryBalances, ethLotteryParticipants, ethLotteryParticipants, ethLotteryBank, isEthLottery",False
restartTokensLottery(),"tokensLotteryParticipants, tokensLotteryBalances, tokensLotteryParticipants, tokensLotteryParticipants, tokensLotteryBank, isTokensLottery",False
updateEthLotteryBank(uint256),"ethLotteryBank, ethLotteryBank",False
updateTokensLotteryBank(uint256),"tokensLotteryBank, tokensLotteryBank",False
"swapTokens(address,uint256)",investTokenAddress,True
sendToEthLottery(uint256),"isEthLottery, ethLotteryParticipants, maxLotteryParticipants, ethLotteryBalances, ethLotteryParticipants, ethLotteryBalances, ethLotteryBalances, ethLotteryBank, ethLotteryBank",True
sendToTokensLottery(uint256),"isTokensLottery, tokensLotteryParticipants, maxLotteryParticipants, tokensLotteryBalances, tokensLotteryParticipants, tokensLotteryBalances, tokensLotteryBalances, tokensLotteryBank, tokensLotteryBank",True
ethLotteryParticipants(),ethLotteryParticipants,False
tokensLotteryParticipants(),tokensLotteryParticipants,False
setInvestTokenAddress(address),investTokenAddress,False
setMaxLotteryParticipants(uint256),maxLotteryParticipants,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256,uint256)",,False
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
getHolders(),holders,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
constructor(address),"bonusToken, swapTokensLimit, swapTokensLimit, swapTokensLimit",False
function()publicpayable{if(msg.sender!=gameAddress){addressreferrer;if(msg.data.length==20){referrer=bytesToAddress(bytes(msg.data));}buyTokens(referrer);}}(),gameAddress,True
buyTokens(address),"isUser, referrers, isUser",True
"sellTokens(uint256,uint)",,True
swapTokens(uint256),"TOKENS_DIVIDER, swapTokensLimit, bonusToken, bonusToken, swapTokensLimit, swapTokensLimit, priceCoeff, priceCoeff",True
reinvest(uint256),"ethStorage, ethStorage, ethStorage, ethStorage",True
withdraw(uint256),"ethStorage, ethStorage",True
"transfer(address,uint256,uint256)",gameAddress,True
sendDividendsToHolders(uint),"holdersIndex, totalInvestDividends, investDividends, totalCasinoDividends, casinoDividends, holders, holdersIndex, holders, holdersIndex, holders, holdersIndex, MIN_HOLDERS_BALANCE, totalInvestDividends, totalInvestDividends, investDividends, investDividends, holders, holdersIndex, ethStorage, holders, holdersIndex, ethStorage, holders, holdersIndex, totalCasinoDividends, totalCasinoDividends, casinoDividends, casinoDividends, holders, holdersIndex, ethStorage, holders, holdersIndex, ethStorage, holders, holdersIndex, holdersIndex, holdersIndex, holders, holdersIndex",False
setGameAddress(address),gameAddress,False
"sendToGame(address,uint256,uint256)",gameAddress,True
gameDividends(uint256),"casinoDividends, casinoDividends",False
price(),"priceCoeff, a",False
