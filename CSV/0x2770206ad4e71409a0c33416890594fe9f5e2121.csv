Function Name,State Variables Modified,Can Transfer Ether
getClaim(bytes32),,False
getClaimIdsByTopic(uint256),,False
"addClaim(uint256,uint256,address,bytes,bytes,string)",,False
removeClaim(bytes32),,False
getKey(bytes32),,False
"keyHasPurpose(bytes32,uint256)",,False
getKeysByPurpose(uint256),,False
"addKey(bytes32,uint256,uint256)",,False
"removeKey(bytes32,uint256)",,False
"execute(address,uint256,bytes)",,False
"approve(uint256,bool)",,False
init(),,True
"getKey(,bytes32)",,False
"getKeyPurposes(,bytes32)",,False
"getKeysByPurpose(,uint256)",,False
"addKey(,bytes32,uint256,uint256)",,True
"addPurpose(,bytes32,uint256)",,True
"approve(,uint256,bool)",,True
"execute(,address,uint256,bytes)",,True
"removeKey(,bytes32,uint256)",,True
"keyHasPurpose(,bytes32,uint256)",,False
constructor(),,False
getKey(bytes32),,False
getKeyPurposes(bytes32),,False
getKeysByPurpose(uint256),,False
"addKey(bytes32,uint256,uint256)",,False
"addPurpose(bytes32,uint256)",,False
"approve(uint256,bool)",,False
"execute(address,uint256,bytes)",,False
"removeKey(bytes32,uint256)",,False
"keyHasPurpose(bytes32,uint256)",,False
"addClaim(,,uint256,uint256,address,bytes,bytes,string)",,True
"addClaims(,,,,bytes,bytes,)",,False
"removeClaim(,,bytes32)",,True
"updateSelfClaims(,,,bytes,)",,True
"getClaim(,bytes32)",,False
"addClaim(uint256,uint256,address,bytes,bytes,string)",,False
"addClaims(,,bytes,bytes,)",,False
removeClaim(bytes32),,False
"updateSelfClaims(,bytes,)",,False
getClaim(bytes32),,False
getClaimIdsByTopic(uint256),,False
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
addFactory(address),factories,False
removeFactory(address),factories,False
"setInitialOwnerInFoundation(address,address)","contractsToOwners, ownersToContracts, contractsToOwners, contractsIndex, ownersToContracts, membersToContracts",False
"transferOwnershipInFoundation(address,address)","ownersToContracts, contractsToOwners, ownersToContracts, membersToContracts, ownersToContracts, membersToContracts, contractsToOwners",True
renounceOwnershipInFoundation(),"contractsToKnownMembersIndexes, ownersToContracts, contractsToOwners, contractsToOwners",True
addMember(address),"ownersToContracts, membersToContracts, membersToContracts, ownersToContracts, contractsToKnownMembersIndexes, ownersToContracts",True
removeMember(address),"ownersToContracts, membersToContracts, ownersToContracts, membersToContracts, contractsToKnownMembersIndexes, ownersToContracts",True
getContractsIndex(),contractsIndex,False
"function()public{revert(""Prevent accidental sending of ether"");}()",,True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
constructor(address),token,False
"setPrices(uint256,uint256,uint256)","marketplace, marketplace, marketplace",False
buy(),"marketplace, marketplace, token, marketplace, marketplace",True
sell(uint),"token, token, marketplace, marketplace, marketplace, marketplace",True
withdrawEther(uint256),,True
withdrawTalao(uint256),token,True
function()publicpayableonlyOwner{}(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"TokenTimelock(,address,uint256)","token, beneficiary, releaseTime",False
release(),"releaseTime, token, token, beneficiary",False
"TokenVesting(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"Crowdsale(uint256,uint256,uint256,address)","token, startTime, endTime, wallet",False
function()externalpayable{buyTokens(msg.sender);}(),,True
buyTokens(address),"beneficiary, rate, weiRaised, weiRaised, token, beneficiary, beneficiary",True
hasEnded(),endTime,False
finalize(),"isFinalized, isFinalized",False
RefundVault(address),"wallet, state",False
deposit(address),"state, deposited, deposited",False
close(),"state, state, wallet",True
enableRefunds(),"state, state",False
refund(address),"state, deposited, deposited",True
RefundableCrowdsale(uint256),"vault, wallet, goal",False
claimRefund(),"isFinalized, vault",True
goalReached(),"weiRaised, goal",False
CappedCrowdsale(uint256),cap,False
hasEnded(),"weiRaised, cap",False
"ProgressiveIndividualCappedCrowdsale(uint,uint)","baseEthCapPerAddress, startGeneralSale",False
setBaseCap(uint),"startGeneralSale, baseEthCapPerAddress",False
getCurrentEthCapPerAddress(),"startGeneralSale, startGeneralSale, TIME_PERIOD_IN_SEC, baseEthCapPerAddress",False
"transfer(address,uint256)",,True
balanceOf(address),_owner,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)","allowed, _owner",False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)","totalSupply, totalSupply",False
finishMinting(),mintingFinished,False
"receiveApproval(address,uint256,address,bytes)",,False
setMarketplace(address),marketplace,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approveAndCall(address,uint256,bytes)",,True
withdrawEther(uint256),,True
withdrawTalao(uint256),totalDeposit,True
createVaultAccess(uint256),"accessAllowance, vaultDeposit, vaultDeposit, data, vaultDeposit, totalDeposit, totalDeposit, vaultDeposit, data, vaultDeposit, data, accessAllowance",True
closeVaultAccess(),"accessAllowance, data, accessAllowance, totalDeposit, totalDeposit, data, data",True
"agentApproval(address,uint)","accessAllowance, data, data, data",True
setVaultDeposit(uint),vaultDeposit,False
getVaultAccess(address),"accessAllowance, accessAllowance, data, data, data, data, data, accessAllowance, accessAllowance",True
getFreelanceAgent(address),data,False
"hasVaultAccess(address,address)","accessAllowance, data",False
"constructor(address,address,uint16,uint16,uint16,bytes,bytes,bytes)","token, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation",True
isActiveIdentityOwner(),token,True
isActiveIdentity(),token,False
hasIdentityPurpose(uint256),,True
"identityboxSendtext(uint,bytes)",identityboxBlacklisted,True
"identityboxSendfile(uint,uint,bytes)",identityboxBlacklisted,True
identityboxBlacklist(address),identityboxBlacklisted,False
identityboxUnblacklist(address),identityboxBlacklisted,False
identityInformation(),,False
"identityboxSendtext(uint,bytes)",,False
"constructor(address,address,uint16,uint16,uint16,bytes,bytes,bytes)","token, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation",True
isPartnershipMember(),partnershipContracts,True
getMyPartnershipStatus(),partnershipContracts,True
getKnownPartnershipsContracts(),knownPartnershipContracts,False
getPartnership(address),"partnershipContracts, partnershipContracts, partnershipContracts",False
"requestPartnership(address,bytes)","partnershipContracts, partnershipContracts, partnershipContracts, knownPartnershipContracts, partnershipContracts, partnershipContracts, partnershipsNumber, partnershipsNumber",False
_requestPartnership(bytes),"partnershipContracts, partnershipContracts, partnershipContracts, knownPartnershipContracts, partnershipContracts, partnershipContracts, partnershipContracts",True
"authorizePartnership(address,bytes)","partnershipContracts, partnershipContracts, partnershipContracts, partnershipsNumber, partnershipsNumber",False
_authorizePartnership(bytes),"partnershipContracts, partnershipContracts",True
rejectPartnership(address),"partnershipContracts, partnershipContracts",False
removePartnership(address),"partnershipContracts, partnershipContracts, partnershipContracts, partnershipContracts, partnershipContracts, partnershipsNumber, partnershipsNumber, partnershipContracts",False
_removePartnership(),"partnershipContracts, partnershipContracts, partnershipContracts, partnershipsNumber, partnershipsNumber, partnershipContracts",True
_requestPartnership(bytes),,False
_authorizePartnership(bytes),,False
_removePartnership(),,False
getKnownPartnershipsContracts(),,False
getPartnership(address),,False
"constructor(address,address,uint16,uint16,uint16,bytes,bytes,bytes)","token, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation",True
isMember(),,True
isReader(),"token, token, token",True
getPrivateProfile(),"privateProfile, privateProfile",False
"setPrivateProfile(bytes,bytes)","privateProfile, privateProfile",False
getDocument(uint),documents,False
getDocuments(),documentsIndex,False
"createDocument(uint16,uint16,uint40,bytes32,uint16,bytes,bool)",documentsCounter,True
"issueCertificate(uint16,uint16,bytes32,uint16,bytes,bool,uint16)",,True
acceptCertificate(uint),"documents, documentsIndex, documents",False
deleteDocument(uint),,False
"updateDocument(uint,uint16,uint16,uint40,bytes32,uint16,bytes,bool)",documentsCounter,True
getDocuments(),,False
getDocument(uint),,False
"constructor(address,address,uint16,uint16,uint16,bytes,bytes,bytes)","token, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation, identityInformation",True
destroyWorkspace(),,True
function()public{revert();}(),,False
