Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner_,True
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"addWhiteList(uint8,address,uint256)",whitelist,False
"removeFromWhiteList(uint8,address)",whitelist,False
"constructor(address,address,address,address,address,address,address,address)","INITIAL_SUPPLY, milion, decimals, ecoSystemWallet, ecoSystemWallet, owner_, ecoSystemWallet, milion, decimals, marketWallet, marketWallet, owner_, marketWallet, milion, decimals, contributorsWallet, contributorsWallet, owner_, contributorsWallet, milion, decimals, companyWallet, companyWallet, owner_, companyWallet, milion, decimals, closedSaleWallet, closedSaleWallet, owner_, closedSaleWallet, milion, decimals, preSaleWallet, preSaleWallet, owner_, preSaleWallet, milion, decimals, firstStageWallet, firstStageWallet, owner_, firstStageWallet, milion, decimals, secondStageWallet, secondStageWallet, owner_, secondStageWallet",False
"function()publicpayable{require(state>0);require(state<9);require(msg.sender!=0x0);require(msg.value!=0);uint256limit=getMinLimit();require(msg.value>=limit);addressbeneficiary=msg.sender;require(whitelist[state][beneficiary]>=msg.value);uint256weiAmount=msg.value;uint256tokens=weiAmount.mul(exchangeETH);require(balances[currentWallet]>=tokens);balances[currentWallet]=balances[currentWallet].sub(tokens);balances[beneficiary]=balances[beneficiary].add(tokens);emitTransfer(currentWallet,beneficiary,tokens);whitelist[state][beneficiary]=0;investors++;}()","state, state, whitelist, state, exchangeETH, currentWallet, currentWallet, currentWallet, currentWallet, whitelist, state, investors",True
getMinLimit(),"state, state, limitClosedSale, state, limitPreSale",False
updateExchangeRate(uint256),exchangeETH,False
withdraw(uint),"companyWallet, companyWallet",True
startCloseSalePhase(),"currentWallet, closedSaleWallet, state",False
startPreSalePhase(),"currentWallet, preSaleWallet, state",False
startSale1Phase(),"currentWallet, firstStageWallet, state",False
startSale2Phase(),"currentWallet, secondStageWallet, state",False
stopSale(),"currentWallet, state",False
endSale(),"currentWallet, state",False
