Function Name,State Variables Modified,Can Transfer Ether
constructor(address),"symbol, name, decimals, unitRate, decimals, HARD_TOTAL_SUPPLY, HARD_TOTAL_SUPPLY, unitRate, devTeam, unitRate, totalSupply, devTeam, devTeam, deployedDay",False
joinNetwork(),"citizenContract, bankContract, citizenContract, lotteryContract, whitelistContract",False
function()publicpayable{}(),,False
activeBuy(),"buyActived, buyActived, deployedDay",False
pushDividends(),"divPercent, divPercent, fundPercent, autoBuy",True
buy(),,True
buyFor(address),"pInvestedSum, fundPercent, divPercent, refPercent, totalBuyVolume, totalBuyVolume, totalBuyVolumeInDay, autoBuy",False
sell(uint256),"fundPercent, totalSellVolume, totalSellVolume, totalSellVolumeInDay, fromSellingAmount",True
devTeamWithdraw(),"devTeam, credit, withdrawnAmount, withdrawnAmount, devTeam",True
withdrawFor(address),"credit, credit, withdrawnAmount, withdrawnAmount, bankContract",True
"transferFrom(address,address,uint256)",,False
"transfer(address,uint256)",,True
"approve(address,uint)",,True
setAutoBuy(),"autoBuy, autoBuy",False
totalEthBalance(),,False
ethBalance(address),"pps, credit",False
getTotalDividendsByAddress(address),"withdrawnAmount, fromSellingAmount",False
getTodayDividendsByAddress(address),"lastActiveDay, todayCredit, ppsInDay",False
getSellPrice(),"totalSupply, investedAmount, totalSupply",False
getSellPriceAfterTax(),fundPercent,False
getBuyPrice(),"fundPercent, divPercent, refPercent, startPrice, unitRate, BEP, HARD_TOTAL_SUPPLY, HARD_TOTAL_SUPPLY, unitRate, totalSupply",False
getBuyPriceAfterTax(),"fundPercent, divPercent, refPercent",False
"ethToToken(uint256,uint256)",,False
tokenToEth(uint256),,False
getToday(),ONE_DAY,False
getAvgPps(),"deployedDay, deployedDay, divInDay, totalSupply, totalSupply",False
getTotalVolume(),"totalBuyVolume, totalSellVolume",False
getWeeklyBuyVolume(),totalBuyVolumeInDay,False
getWeeklySellVolume(),totalSellVolumeInDay,False
getWeeklyVolume(),,False
getTotalDividends(),totalDividends,False
getRDividends(address),,False
getWeeklyDividends(),"deployedDay, deployedDay, divInDay",False
getMarketCap(),totalSupply,False
totalSupply(),totalSupply,False
balanceOf(address),,False
myBalance(),,True
myEthBalance(),,True
myCredit(),credit,True
getCurRoundId(),lotteryContract,False
swapToken(),"swapActived, newTokenContract",True
setNewToken(address),"lotteryContract, swapActived, swapTime, swapActived, newTokenContract, autoBuy",False
sleep(),"swapActived, swapTime, BEFORE_SLEEP_DURAION, devTeam",True
joinNetwork(),,False
devTeamWithdraw(),,False
updateUsername(string),,False
pushRefIncome(address),,False
withdrawFor(address),,False
devTeamReinvest(),,False
getRefWallet(address),,False
joinNetwork(),,False
activeFirstRound(),,False
pushToPot(),,False
finalizeable(),,False
finalize(),,False
buy(string),,False
"buyFor(string,address)",,False
withdrawFor(address),,False
getRewardBalance(address),,False
getTotalPot(),,False
getEarlyIncomeByAddress(address),,False
getCurEarlyIncomeByAddress(address),,False
getCurRoundId(),,False
setLastRound(uint256),,False
"getPInvestedSumByRound(uint256,address)",,False
cashoutable(address),,False
isLastRound(),,False
sBountyClaim(address),,False
setF2mAddress(address),,False
setLotteryAddress(address),,False
setCitizenAddress(address),,False
setBankAddress(address),,False
setRewardAddress(address),,False
setWhitelistAddress(address),,False
setupNetwork(),,False
joinNetwork(),,False
pushToBank(address),,False
"swapToken(uint256,address)",,False
joinNetwork(),,False
