Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),owner,False
constructor(),"totalSupply, Dev_Supply, totalSupply, GrowthPool_Supply, totalSupply, Rewards_Supply, totalSupply, totalSupply, Dev_Supply, GrowthPool_Supply, Rewards_Supply, Total_ICOSupply, totalSupply, balanceOf, totalSupply",True
unlockDevTokenSupply(),"DevSupply_Released, balanceOf, owner, Dev_Supply, totalSupply, Dev_Supply, Dev_Supply, owner, Dev_Supply, Dev_Supply, DevSupply_Released",False
unlockGrowthPoolTokenSupply(),"GrowthPool_Released, balanceOf, owner, GrowthPool_Supply, totalSupply, GrowthPool_Supply, GrowthPool_Supply, owner, GrowthPool_Supply, GrowthPool_Supply, GrowthPool_Released",False
sendUnsoldTokenToRewardSupply(),"ICO_Finished, Total_ICOSupply, Total_SoldToken, Rewards_Supply, Total_SoldToken",False
"giveReward(address,uint256)","Rewards_Supply, balanceOf, totalSupply, Rewards_Supply",False
"transfer(address,uint256)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"function()payablebuyingTokenpublic{uinttotalToken=(msg.value.mul(ICO_TokenValue)).div(10**18);totalToken=totalToken.mul(ONETOKEN);require(ICO_Supply>=totalToken);if(ICO_Tier==2){PrivateSale_Cap[msg.sender]+=msg.value;}if(ICO_Tier==3){PreIco_Cap[msg.sender]+=msg.value;}if(ICO_Tier==4){MainIco_Cap[msg.sender]+=msg.value;}ICO_Supply-=totalToken;_transfer(owner,msg.sender,totalToken);uint256sendBonus=icoReturnBonus(msg.value);if(sendBonus!=0){msg.sender.transfer(sendBonus);}etherWallet.transfer(this.balance);Collected_Ether+=msg.value-sendBonus;Total_SoldToken+=totalToken;}()","ICO_TokenValue, ICO_Supply, ICO_Tier, PrivateSale_Cap, ICO_Tier, PreIco_Cap, ICO_Tier, MainIco_Cap, ICO_Supply, owner, etherWallet, Collected_Ether, Total_SoldToken",True
withdrawEther(),owner,True
setIcoTier(uint256),"ICO_Finished, ICO_Tier, ICO_Tier, ICO_AllowPayment, ICO_TokenValue, ICO_Tier, ICO_Supply, ICO_Tier, ICO_Supply, ICO_Tier, ICO_Supply, ICO_Tier, ICO_Supply",False
FinishIco(),"ICO_Tier, ICO_Supply, ICO_Tier, ICO_TokenValue, ICO_Finished, ICO_AllowPayment",False
"setWhitelistAddress(address,bool)",whitelist,False
setIcoPaymentStatus(bool),"ICO_Finished, ICO_AllowPayment",False
setTokenTransferStatus(bool),"ICO_Finished, Token_AllowTransfer",False
