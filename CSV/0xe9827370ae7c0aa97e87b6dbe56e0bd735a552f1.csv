Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
constructor(),"initialCost, DEFAULT_INITIAL_COST, lockCostPerHour, DEFAULT_LOCK_COST_PER_HOUR, maxLockDuration, DEFAULT_MAX_LOCK_DURATION",False
function()publicpayable{}(),,False
createCost(uint256),"initialCost, lockCostPerHour",False
"createLoveStory(bytes16,bytes32,bytes32,uint256)",,False
"createLoveStoryWithData(bytes16,bytes32,bytes32,uint256,string)","loveStoriesCount, loveStoriesCount, pendingWithdrawals, owner, pendingWithdrawals, owner, loveStories",True
"updateLoveStory(bytes16,bytes32,bytes32)",loveStories,False
"updateLoveStoryWithData(bytes16,bytes32,bytes32,string)",loveStories,False
"transferCost(bytes16,uint256)","loveStories, lockCostPerHour",True
"transferLoveStory(bytes16,bytes32,bytes32,uint256)",loveStories,True
"transferLoveStoryWithData(bytes16,bytes32,bytes32,uint256,string)","loveStories, DEVELOPER_CUT, pendingWithdrawals, owner, pendingWithdrawals, owner, pendingWithdrawals, pendingWithdrawals",True
readLoveStory(bytes16),loveStories,True
isIdRegistered(bytes16),loveStories,False
isIdValid(bytes16),,False
withdrawableAmount(),pendingWithdrawals,True
withdraw(),"pendingWithdrawals, pendingWithdrawals",True
withdrawableAmountFor(address),pendingWithdrawals,False
changeInitialCost(uint256),initialCost,False
changeLockCostPerHour(uint256),lockCostPerHour,False
changeMaxLockDuration(uint256),maxLockDuration,False
