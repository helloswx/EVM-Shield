Function Name,State Variables Modified,Can Transfer Ether
"function()publicpayable{require(running,""Project is not running"");uint256dividends=dividendsForUser(msg.sender);if(dividends>0){if(dividends>address(this).balance){dividends=address(this).balance;running=false;}msg.sender.transfer(dividends);withdrawals[msg.sender]=withdrawals[msg.sender].add(dividends);updatedAt[msg.sender]=now;emitDividendPayed(msg.sender,dividends);}if(msg.value>0){if(deposits[msg.sender]==0){joinedAt[msg.sender]=now;emitInvestorAdded(msg.sender);}updatedAt[msg.sender]=now;deposits[msg.sender]=deposits[msg.sender].add(msg.value);emitDepositAdded(msg.sender,deposits[msg.sender],msg.value);totalDeposits=totalDeposits.add(msg.value);emitTotalDepositsChanged(totalDeposits);if(referrers[msg.sender]==address(0)&&msg.data.length==20){addressreferrer=bytesToAddress(msg.data);if(referrer!=address(0)&&deposits[referrer]>0&&now>=joinedAt[referrer].add(REFERRAL_ACTIVATION_TIME)){referrers[msg.sender]=referrer;refCount[referrer]+=1;emitReferrerAdded(msg.sender,referrer);}}referrer=referrers[msg.sender];for(uinti=0;referrer!=address(0)&&i<referralPercents.length;i++){uint256refAmount=msg.value.mul(referralPercents[i]).div(ONE_HUNDRED_PERCENTS);referrer.send(refAmount);refEarned[referrer]=refEarned[referrer].add(refAmount);emitReferrerPayed(msg.sender,i,referrer,refAmount);referrer=referrers[referrer];}uint256adminFee=msg.value.div(100);admin.send(adminFee);emitAdminFeePayed(msg.sender,adminFee);}emitBalanceChanged(address(this).balance);}()","running, running, withdrawals, withdrawals, updatedAt, deposits, joinedAt, updatedAt, deposits, deposits, deposits, totalDeposits, totalDeposits, totalDeposits, referrers, deposits, joinedAt, REFERRAL_ACTIVATION_TIME, referrers, refCount, referrers, referralPercents, referralPercents, ONE_HUNDRED_PERCENTS, refEarned, refEarned, referrers, admin",True
dividendsForUser(address),,False
"dividendsForPercents(address,uint256)","deposits, ONE_HUNDRED_PERCENTS, updatedAt",False
percentsForUser(address),referrers,False
generalPercents(),"ONE_HUNDRED_PERCENTS, HIGHEST_DIVIDEND_PERCENTS, LOWEST_DIVIDEND_PERCENTS, HIGHEST_DIVIDEND_PERCENTS, LOWEST_DIVIDEND_PERCENTS, ONE_HUNDRED_PERCENTS",False
healthPercents(),"totalDeposits, ONE_HUNDRED_PERCENTS, ONE_HUNDRED_PERCENTS, totalDeposits",False
