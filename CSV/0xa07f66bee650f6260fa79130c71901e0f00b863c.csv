Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
constructor(),,False
function()external{}(),,False
reclaimEther(),owner,True
reclaimToken(),"token, token, owner",False
"tokenFallback(address,uint256,bytes)",,False
reclaimContract(address),owner,True
init(address),,False
getFounder(),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"constructor(uint64,uint64,uint256,uint256,uint256,uint256,address)","startTimestamp, endTimestamp, hardCap, goal, rate, owner, token, token, owner, owner",True
"function()publicpayable{require(crowdsaleOpen());require(msg.value>0);collectedEther=collectedEther.add(msg.value);contributions[msg.sender]=contributions[msg.sender].add(msg.value);uint256amount=getTokensForValue(msg.value);tokensSold=tokensSold.add(amount);mintTokens(msg.sender,amount);}()","collectedEther, collectedEther, tokensSold, tokensSold",True
getTokensForValue(uint256),rate,False
crowdsaleOpen(),"finalized, tokensMinted, hardCap, startTimestamp, endTimestamp",False
getTokensLeft(),"hardCap, tokensMinted",False
refund(),,True
refundTo(address),"finalized, endTimestamp, tokensSold, goal",True
finalizeCrowdsale(),"finalized, token, token, owner, tokensSold, goal, owner",True
claimEther(),"tokensSold, goal, owner",True
