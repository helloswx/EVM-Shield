Function Name,State Variables Modified,Can Transfer Ether
owned(),owner,True
tranferOwnership(address),owner,False
"mintTokens(address,uint256)",,False
BlocksquareSeedSale(),"owner, recipient",True
"function()payablepublic{require(reward!=address(0));require(msg.value>0);require(icoHasStarted);require(!icoHasClosed);require(valueInUSD!=0);require(canRecieveTokens[msg.sender]);if(block.timestamp<startTime.add(DAY)){require(contributed[msg.sender].add(msg.value)<=MAXIMUM24H);}else{require(contributed[msg.sender].add(msg.value)<=MAXIMUM);}if(contributed[msg.sender]==0){participantIndex[nextParticipantIndex]=msg.sender;nextParticipantIndex+=1;}contributed[msg.sender]=contributed[msg.sender].add(msg.value);currentAmountRaised=currentAmountRaised.add(msg.value);uint256tokens=tokensToMint(msg.value);if(currentAmountOfTokens.add(tokens)>=maxAmountOfTokens){icoHasClosed=true;}reward.mintTokens(msg.sender,tokens);currentAmountOfTokens=currentAmountOfTokens.add(tokens);Received(msg.sender,msg.value);TokensGiven(msg.sender,tokens);if(this.balance>=100ether){if(!recipient.send(this.balance)){ErrorReturningEth(recipient,this.balance);}}}()","valueInUSD, startTime, currentAmountRaised, currentAmountRaised, recipient, recipient",True
startICO(uint256),"valueInUSD, startTime",False
closeICO(),,False
addAllowanceToRecieveToken(),,False
withdrawEther(),"recipient, recipient",True
getToken(),,False
isCrowdsaleOpen(),,False
hasCrowdsaleStarted(),,False
amountContributed(address),,False
numberOfContributors(),,False
numberOfTokens(),,False
hasAllowanceToRecieveTokens(address),,False
endOf24H(),startTime,False
