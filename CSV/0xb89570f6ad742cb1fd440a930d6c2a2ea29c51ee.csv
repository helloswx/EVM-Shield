Function Name,State Variables Modified,Can Transfer Ether
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
isWhitelisted(address),,False
"getReturn(,,uint256)",,False
"convert(,,uint256,uint256)",,False
conversionWhitelist(),,False
conversionFee(),,False
connectors(address),,False
getConnectorBalance(),,False
"claimTokens(address,uint256)",,False
"change(,,uint256,uint256)",,False
upgrade(bytes32),,False
"calculatePurchaseReturn(uint256,uint256,uint32,uint256)",,False
"calculateSaleReturn(uint256,uint256,uint32,uint256)",,False
"calculateCrossConnectorReturn(uint256,uint32,uint256,uint32,uint256)",,False
"convert(,uint256,uint256)",,False
"convertFor(,uint256,uint256,address)",,False
"convertForPrioritized2(,uint256,uint256,address,uint256,uint8,bytes32,bytes32)",,False
"convertForPrioritized(,uint256,uint256,address,uint256,uint256,uint8,bytes32,bytes32)",,False
owner(),,False
transferOwnership(address),,False
acceptOwnership(),,False
constructor(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
constructor(),manager,True
transferManagement(address),"manager, newManager",False
acceptManagement(),"newManager, manager, newManager, manager, newManager, newManager",True
constructor(),,False
addressOf(bytes32),,False
getAddress(bytes32),,False
"isSupported(address,uint256)",,False
"enableFeatures(uint256,bool)",,False
disableTransfers(bool),,False
"issue(address,uint256)",,False
"destroy(address,uint256)",,False
"withdrawTokens(,address,uint256)",,False
constructor(),,False
"withdrawTokens(,address,uint256)",,True
constructor(),token,False
transferTokenOwnership(address),token,True
acceptTokenOwnership(),token,False
disableTokenTransfers(bool),token,False
"withdrawFromToken(,address,uint256)",token,False
deposit(),,False
withdraw(uint256),,False
"withdrawTo(address,uint256)",,False
"constructor(,,uint32,,uint32)","registry, prevRegistry, registry, maxConversionFee",False
updateRegistry(),"allowRegistryUpdate, owner, registry, registry, prevRegistry, registry, registry",True
restoreRegistry(),"registry, prevRegistry, allowRegistryUpdate",False
disableRegistryUpdate(bool),allowRegistryUpdate,False
enableClaimTokens(bool),claimTokensEnabled,False
connectorTokenCount(),connectorTokens,False
setConversionWhitelist(),conversionWhitelist,False
disableConversions(bool),"conversionsEnabled, conversionsEnabled, conversionsEnabled",False
transferTokenOwnership(address),,True
setConversionFee(uint32),"conversionFee, conversionFee",False
"getFinalAmount(uint256,uint8)","MAX_CONVERSION_FEE, conversionFee, MAX_CONVERSION_FEE",False
"withdrawTokens(,address,uint256)","registry, connectors, token, owner",False
"claimTokens(address,uint256)","registry, token, token",True
upgrade(),"registry, version",True
"addConnector(,uint32,bool)","token, connectors, totalConnectorWeight, MAX_WEIGHT, connectors, connectors, connectors, connectors, connectors, connectorTokens, totalConnectorWeight",False
"updateConnector(,uint32,bool,uint256)","connectors, totalConnectorWeight, MAX_WEIGHT, totalConnectorWeight, totalConnectorWeight",False
"disableConnectorPurchases(,bool)",connectors,False
getConnectorBalance(),connectors,False
"getReturn(,,uint256)","token, token",False
"getPurchaseReturn(,uint256)","connectors, token, registry",False
"getSaleReturn(,uint256)","connectors, token, registry",False
"getCrossConnectorReturn(,,uint256)","connectors, connectors, registry",False
"convertInternal(,,uint256,uint256)","token, token, connectors, connectors, token, token",True
"convert(,,uint256,uint256)","convertPath, token, convertPath",False
"quickConvert(,uint256,uint256)",,False
"quickConvertPrioritized(,uint256,uint256,uint256,uint8,bytes32,bytes32)","registry, token, token, token",True
fund(uint256),"token, connectorTokens, connectorTokens, connectors, token",True
liquidate(uint256),"token, token, connectorTokens, connectorTokens, connectors",True
"change(,,uint256,uint256)",,False
