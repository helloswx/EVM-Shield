Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),owner_,False
"changeOuts(address,address)","capital_, adminReward_",False
payDividends(string),,False
burn(address),"lastupdate_, lastupdate_, timePassive_, tokenBalanceLedger_, referralBalance_, tokenBalanceLedger_, referralBalance_, payoutsTo_, lastupdate_",True
takeCapital(),"capitalAmount_, AdminRewardAmount_, capital_, capitalAmount_, adminReward_, AdminRewardAmount_, capitalAmount_, AdminRewardAmount_",True
"transferFrom(address,address,uint256)","tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_",True
"approve(address,uint256)",,True
"allowance(address,address)",,False
buy(address),,False
"function()payablepublic{if(msg.value==1e10){reinvest();}elseif(msg.value==2e10){withdraw();}elseif(msg.value==3e10){exit();}else{purchaseTokens(msg.value,0x0);}}()",,False
reinvest(),"lastupdate_, payoutsTo_, magnitude, referralBalance_, referralBalance_",True
exit(),tokenBalanceLedger_,True
withdraw(),"lastupdate_, payoutsTo_, magnitude, referralBalance_, referralBalance_",True
sell(uint256),"lastupdate_, tokenBalanceLedger_, exitFee_, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
"transfer(address,uint256)","lastupdate_, stakingRequirement, lastupdate_, tokenBalanceLedger_, transferFee_, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, payoutsTo_, profitPerShare_, payoutsTo_, profitPerShare_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
refferedBy(address),refferals_,False
myTokens(),,True
myDividends(bool),referralBalance_,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, exitFee_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, entryFee_",False
calculateTokensReceived(uint256),entryFee_,False
calculateEthereumReceived(uint256),"tokenSupply_, exitFee_",False
