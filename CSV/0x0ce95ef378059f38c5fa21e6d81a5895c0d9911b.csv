Function Name,State Variables Modified,Can Transfer Ether
ChangeOwner(address),,False
ChangeOwner2(address),,False
"Store(address,uint256,uint256,bytes32)",,False
"Load(address,uint256,uint256)",,False
"TransferFunds(address,uint256)",,False
"CalculateFinalDistance(bytes32,bytes32,bytes32,bytes32)",,False
Game(),"m_Owner, m_Paused",True
ChangeOwner(address),m_Owner,False
ChangeDatabase(address),m_Database,False
ChangeGameHidden(address),m_GameHidden,False
Unpause(),m_Paused,False
Pause(),"m_Paused, m_Paused",False
IsPaused(),m_Paused,False
"WithdrawProfitFunds(uint256,address)","m_Database, m_Database, m_Database, m_Database",False
WithdrawWinnings(uint256),"m_Database, m_Database, m_Database",True
GetRocket(uint32),m_Database,False
GetWithdrawalFunds(address),m_Database,False
GetProfitFunds(),m_Database,False
GetCompetitionFunds(uint32),m_Database,False
GetAuction(uint32),"m_Database, m_Database, m_Database",False
GetInventoryCount(address),m_Database,False
"GetInventory(address,uint256)",m_Database,False
"AddRocket(uint32,uint64,uint32,uint32,uint32,uint32,uint32,uint32,uint32,uint32,uint64,uint32)","m_Database, m_Database, m_Database",False
GetRocketStock(uint16),m_Database,False
"BuyStockRocket(uint16,address)",m_Database,True
"GiveReferralRocket(uint16,address)","m_Database, m_Database",False
"PlaceRocketForSale(uint32,uint80)","m_Database, m_Database, m_Database, m_Database",True
RemoveRocketForSale(uint32),"m_Database, m_Database, m_Database",True
BuyRocketForSale(uint32),"m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database",True
"LaunchRocket(uint32,uint32,uint32,uint32,uint32,uint32)","m_Database, m_Database, m_Database",True
GetCompetitionInfo(uint32),m_Database,False
"SetDebugExtra(uint32,uint8)","m_Database, m_Database",False
"StartCompetition(uint8,uint8,uint8,uint8,uint80,uint32)","m_Database, m_Database, m_Database",False
"GetCompetitionResults(uint32,bool)",m_Database,False
SortCompetitionScores(uint32),m_Database,False
FinishCompetition(uint32),"m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database, m_Database",False
