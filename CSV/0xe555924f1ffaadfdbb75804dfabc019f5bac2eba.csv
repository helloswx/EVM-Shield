Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
EyeToken(),"wallet, isICO, totalSupplyTokens, decimals, balances, wallet, totalSupplyTokens",True
finalizeICO(),isICO,False
totalSupply(),totalSupplyTokens,False
freeze(address),,False
"freeze(address,uint)",frozenAccounts,False
unfreeze(address),"frozenAccounts, frozenAccounts",False
"transfer(address,uint256)",,True
"transferICO(address,uint256)","isICO, balances, wallet, balances, wallet, balances, wallet, balances, balances, wallet",False
balanceOf(address),balances,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
CrowdSale(),"phase_i, PHASE_NOT_STARTED, manager",False
getManager(),manager,False
setManager(address),manager,False
setRate(uint),exchange_rate,False
"start(address,uint256)","phase_i, PHASE_NOT_STARTED, token, base_wallet, token, dec_mul, token, vest_1, vest_2, vest_3, vest_4, token, dec_mul, token, dec_mul, token, dec_mul, token, dec_mul, token, vest_1, dec_mul, token, vest_2, dec_mul, token, vest_3, dec_mul, token, vest_4, dec_mul, exchange_rate, phase_i, PHASE_BEFORE_PRESALE",True
finalize(),,False
phase(),,False
"transferICO(address,uint256)","token, base_wallet, token",True
"function()publicpayable{_updatePhase(true);addresssender=msg.sender;uint256amountEth=msg.value;uint256remainedCoin=token.balanceOf(base_wallet);if(remainedCoin==0){sender.transfer(amountEth);_finalizeICO();}else{uint8percent=bonus_percents[uint256(phase_i)];uint256amountCoin=calcTokensFromEth(amountEth);assert(amountCoin>=MIN_TOKEN_AMOUNT);if(amountCoin>remainedCoin){lastPayerOverflow=amountCoin.sub(remainedCoin);amountCoin=remainedCoin;}base_wallet.transfer(amountEth);token.transferICO(sender,amountCoin);_addPayment(sender,amountEth,amountCoin,percent);if(amountCoin==remainedCoin)_finalizeICO();}}()","token, base_wallet, bonus_percents, phase_i, MIN_TOKEN_AMOUNT, lastPayerOverflow, base_wallet, token",True
freeze(),"phase_i, PHASE_NOT_STARTED, phase_i, PHASE_FINISHED, base_wallet, token",False
unfreeze(),"phase_i, PHASE_NOT_STARTED, phase_i, PHASE_FINISHED, base_wallet, token",False
getTimes(),"presale_start, presale_end, ico_start, ico_phase_1_end, ico_phase_2_end, ico_phase_3_end, ico_phase_4_end, ico_phase_5_end",False
"setPresaleDates(uint,uint)","phase_i, PHASE_BEFORE_PRESALE, ico_start, presale_start, presale_end",False
"setICODates(uint,uint,uint,uint,uint,uint)","phase_i, PHASE_FINISHED, phase_i, PHASE_ICO_FINISHED, phase_i, PHASE_ICO_1, presale_end, ico_start, ico_phase_1_days, ico_phase_2_days, ico_phase_3_days, ico_phase_4_days, ico_phase_5_days",False
