Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),,True
stopPlaying(),stopTS,False
kill(),"stopTS, stopTS, minimumWait, owner",False
permaStop(),"stopTS, stopTS, minimumWait, killed, owner",True
resumePlaying(),"killed, stopTS",False
setMinimumWait(uint),minimumWait,False
withdrawDeveloperPot(address),"developerPot, developerPot",True
donate(address),"charityPot, charityPot",True
withdrawHighscorePot(address),"highscoreHolder, highscorePot, highscorePot",True
withdrawAffiliateBalance(address),"affiliateBalance, affiliateBalance",True
withdrawSurprisePot(address),"surprisePot, surprisePot",True
"withdrawSurprisePotUser(uint,uint,uint8,bytes32,bytes32)","used, signer, surprisePot, surprisePot, used",True
setSigner(address),signer,False
"setPercentages(uint,uint,uint,uint,uint)","charityPercent, affiliatePercent, highscorePercent, surprisePercent, developerPercent, winnerPercent",False
"setMinMax(uint,uint)","minStake, maxStake",False
"constructor(address,uint,uint)","minStake, maxStake",False
"initGameReferred(bytes12,address,uint8)","players, players, players",True
"initGameTeam(bytes12,uint8)","players, players",True
initGame(bytes12),games,False
"joinGameReferred(bytes12,address,uint8)","players, players, players",True
"joinGameTeam(bytes12,uint8)","players, players",True
joinGame(bytes12),games,False
withdraw(bytes12),"games, games, minimumWait, games, minimumWait, games",True
"claimWin(bytes12,uint8,bytes32,bytes32)","games, signer, winnerPercent, games, charityPot, charityPercent, players, highscoreHolder, players, highscorePercent, highscorePot, highscorePercent, surprisePot, surprisePercent, players, developerPot, developerPercent, affiliatePercent, developerPot, developerPercent, affiliateBalance, players, affiliatePercent",True
function()publicpayable{developerPot+=msg.value;}(),developerPot,False
"setScore(address,uint64,uint8)","players, players",False
