Function Name,State Variables Modified,Can Transfer Ether
disburseDividends(),,False
withdrawReturns(),,False
roundInfo(uint),,False
totalsInfo(),,False
latestRoundID(),,False
"canCall(address,address,bytes4)",,False
constructor(),owner,True
setOwner(address),"owner, owner",False
setOrcl(),"a, a",False
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
constructor(),a,False
"__callback(bytes32,string,bytes)","oraclizePending, validQueryIDs, validQueryIDs",True
setOraclizeGasLimit(uint),oraclizeCallbackGas,False
setOraclizeGasPrice(uint),oraclizeGasPrice,False
constructor(),,False
initOraclize(),oraclizeCallbackGas,False
"estimateReturns(address,uint)",,False
"hasReturns(address,uint)",,False
"investorInfo(address,uint)",lastDailyEntry,False
roundInfo(uint),"_secondaryPrice, maxDailyJackpot, RETURNS_FRACTION",False
totalsInfo(),"latestRoundID, totalSharesSold, totalEarningsGenerated, RETURNS_FRACTION, totalDividendsPaid, DIVIDENDS_FRACTION, totalRevenue, totalSharesSold, totalEarningsGenerated, totalDividendsPaid, totalRevenue, totalJackpotsWon, previousRounds",False
function()publicpayable{if(!initialized){jackpotSeed+=msg.value;}else{buyShares(address(0x0));}}(),"initialized, jackpotSeed",False
buyShares(address),latestRoundID,False
reinvestReturns(uint),,False
"reinvestReturns(uint,address)","latestRoundID, unclaimedReturns, unclaimedReturns",True
withdrawReturns(),"latestRoundID, latestRoundID, latestRoundID, unclaimedReturns, unclaimedReturns",True
updateMyReturns(uint),,True
finalizeAndRestart(),,False
startNewRound(),"upgraded, initialized, nextRoundTime, latestRoundID, latestRoundID, latestRoundID, startingSharePrice, _secondaryPrice, _priceMultiplier, _priceIncreasePeriod, SOFT_DEADLINE_DURATION, jackpotSeed, jackpotSeed, startingSharePrice, _priceMultiplier, _priceIncreasePeriod",True
finalizeLastRound(),latestRoundID,False
"setRoundParams(uint,uint,uint)","startingSharePrice, _priceMultiplier, _priceIncreasePeriod",False
setSecondaryPrice(uint),_secondaryPrice,False
setMaxDailyJackpot(uint),maxDailyJackpot,False
setNextRoundTimestamp(uint),"nextRoundTime, nextRoundTime",False
setNextRoundDelay(uint),"nextRoundTime, nextRoundTime",False
withdrawDevShare(),"devBalance, totalPaidOraclize, devBalance, totalPaidOraclize",True
"setIPFSHash(string,string)","ipfsHashType, ipfsHash",False
upgrade(address),"upgraded, upgraded, nextVersion",False
getSeed(),"upgraded, nextVersion, latestRoundID, nextVersion, jackpotSeed",True
init(),"initialized, lastVersion, previousRounds, lastVersion, lastVersion, totalSharesSold, totalRevenue, totalEarningsGenerated, totalDividendsPaid, totalJackpotsWon, initialized",False
_triggerOraclize(),,False
