Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),owner,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(uint256,string,string)","totalSupply, initialSupply, balanceOf, totalSupply, name, tokenName, symbol, tokenSymbol",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","safeguard, allowance, allowance, allowance",True
"approve(address,uint256)","safeguard, allowance",True
"approveAndCall(address,uint256,bytes)",safeguard,True
burn(uint256),"safeguard, balanceOf, balanceOf, balanceOf, totalSupply, totalSupply",True
"burnFrom(address,uint256)","safeguard, balanceOf, allowance, balanceOf, balanceOf, allowance, allowance, totalSupply, totalSupply",True
constructor(),,False
"mintToken(address,uint256)","balanceOf, balanceOf, totalSupply, totalSupply",False
"freezeAccount(address,bool)",frozenAccount,False
"function()payablepublic{require(icoEndDate>now);require(icoStartDate<now);require(!safeguard);uintethervalueWEI=msg.value;uint256token=ethervalueWEI.mul(exchangeRate);tokensSold=tokensSold.add(token);_transfer(this,msg.sender,token);forwardEherToOwner();}()","icoEndDate, icoStartDate, safeguard, exchangeRate, tokensSold, tokensSold",True
"startIco(uint256,uint256,uint256,uint256)","balanceOf, icoStartDate, icoEndDate, exchangeRate",True
stopICO(),"icoEndDate, balanceOf",True
isICORunning(),"icoEndDate, icoStartDate",False
setICOExchangeRate(uint256),exchangeRate,False
manualWithdrawToken(uint256),,True
manualWithdrawEther(),owner,True
destructContract(),owner,False
changeSafeguardStatus(),"safeguard, safeguard, safeguard",False
