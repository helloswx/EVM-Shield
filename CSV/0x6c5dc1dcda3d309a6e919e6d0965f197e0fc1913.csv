Function Name,State Variables Modified,Can Transfer Ether
constructor(),governor,True
setGovernor(address),governor,False
pause(),paused,False
unpause(),paused,False
getCard(uint),cards,False
getShine(uint16),,False
"setLimit(uint16,uint64)","limits, limits, limit",False
getLimit(uint16),limits,False
makeTradeable(uint8),seasonTradable,False
makeUntradable(uint8),"seasonTradabilityLocked, seasonTradable",False
makePermanantlyTradable(uint8),"seasonTradable, seasonTradabilityLocked",False
isTradable(uint16),seasonTradable,False
nextSeason(),"currentSeason, currentSeason, mythic, legendary, epic, rare, common",False
"addProtos(,,,,,,,,)",currentSeason,False
"addProto(uint16,uint8,,uint8,uint8,uint8,uint8,uint8,bool)",currentSeason,False
"addWeapon(uint16,uint8,,uint8,uint8,uint8,bool)",currentSeason,False
"addSpell(uint16,uint8,,uint8,bool)",currentSeason,False
"addMinion(uint16,uint8,,uint8,uint8,uint8,uint8,bool)",currentSeason,False
getProto(uint16),,False
"getRandomCard(,uint16)","common, common, rare, rare, epic, epic, legendary, legendary, mythic, mythic, mythic, limit, limit, legendary, legendary",False
"replaceProto(uint16,uint8,uint8,uint8,uint8,uint8,uint8)",seasonTradable,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
totalSupply(),,False
tokenByIndex(uint256),,False
"tokenOfOwnerByIndex(address,uint256)",,False
supportsInterface(bytes4),,False
balanceOf(address),,False
ownerOf(uint256),,False
"safeTransferFrom(address,address,uint256,bytes)",,False
"safeTransferFrom(address,address,uint256)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"setApprovalForAll(address,bool)",,False
getApproved(uint256),,False
"isApprovedForAll(address,address)",,False
name(),,False
symbol(),,False
totalSupply(),"cards, burnCount",False
"transfer(address,uint)",cards,True
"transferAll(address,)",,True
"ownsAll(address,)",,False
"owns(address,uint)",,False
ownerOf(uint),,False
burn(uint),burnCount,True
burnAll(),,False
"approve(address,uint)",cards,True
"approveAll(address,)",,False
getApproved(uint),,False
balanceOf(address),"ownedTokens, owner",False
exists(uint),,False
"transferFrom(address,address,uint)",cards,True
"transferAllFrom(address,)",,True
getBurnCount(),burnCount,False
"isApprovedForAll(address,address)",owner,False
"setApprovalForAll(address,bool)",,True
"safeTransferFrom(address,address,uint,bytes)",,True
"safeTransferFrom(address,address,uint)",,False
"_removeToken(address,uint)","ownedTokens, ownedTokens, ownedTokens, ownedTokens, ownedTokens",False
tokenURI(uint),,False
"tokenOfOwnerByIndex(address,uint256)","ownedTokens, owner",False
tokenByIndex(uint256),,False
supportsInterface(bytes4),,False
implementsERC721(),,False
getOwnedTokens(address),ownedTokens,False
"onERC721Received(address,uint256,bytes)",,False
addPack(),,False
"createCard(address,uint16,uint16)","currentSeason, limit, limit, limits, owner",False
constructor(),"integration, creationBlock",False
"purchase(uint16,address)",,False
constructor(),owner,True
setOwner(address),owner,False
function()publicpayable{}(),,False
getBalance(),,False
withdraw(uint),owner,True
withdrawAll(),,False
constructor(),limit,False
function()publicpayable{require(total()+msg.value<=limit);}(),limit,False
total(),,False
withdraw(uint),owner,True
pause(),paused,False
unpause(),paused,False
"constructor(,)",vault,False
basePrice(),,False
"getCardDetails(uint16,uint8,uint)",,False
packSize(),,False
packsPerClaim(),,False
"purchase(uint16,address)","price, price, price, vault, price",True
callback(uint),,False
claim(uint),"canClaim, integration",False
predictPacks(uint),,False
"calculatePrice(uint,uint16)",creationBlock,False
setCanClaim(bool),canClaim,False
withdraw(),owner,True
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
constructor(),vault,False
name(),,False
symbol(),,False
addMinter(address),minters,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"mint(address,uint)",,True
"approve(address,uint256)",allowed,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"allowance(address,address)",allowed,False
purchase(uint),"price, vault",True
"constructor(,,)",,False
"purchase(uint16,address)",,True
basePrice(),,False
"getCardDetails(uint16,uint8,uint)",integration,False
