Function Name,State Variables Modified,Can Transfer Ether
constructor(),administrators,False
buy(uint256),"tarifMin, tarifMax, tarif",True
function()noContracts()isStarted()payablepublic{address_customerAddress=msg.sender;if(myTokens()==0){tarif[_customerAddress]=25;}purchaseTokens(msg.value);}(),tarif,True
reinvest(),"payoutsTo_, magnitude",True
exit(),tokenBalanceLedger_,True
withdraw(),"payoutsTo_, magnitude",True
sell(uint256),"tokenBalanceLedger_, tarifDiff, tarif, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
disableInitialStage(),"onlyAmbassadors, disableTime, timeToStart",False
addAmbassador(address),ambassadors_,False
"setAdministrator(address,bool)",administrators,False
setName(string),name,False
setSymbol(string),symbol,False
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(),,True
myTarif(),,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
tarifOf(address),tarif,False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, tarifDiff, tarif",True
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, tarif",True
calculateTokensReceived(uint256),tarif,True
calculateEthereumReceived(uint256),"tokenSupply_, tarifDiff, tarif",True
