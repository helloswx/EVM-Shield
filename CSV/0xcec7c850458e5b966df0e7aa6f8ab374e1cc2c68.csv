Function Name,State Variables Modified,Can Transfer Ether
"receiveApproval(address,uint256,address,bytes)",,False
isCompromised(address),,False
"initialize(address,address,address)",,False
"isKeyExist(address,address)",,False
getDefaultKey(address),,False
"whitelistAddKey(address,address)",,False
"senderIsAdvocate(address,address)",,False
"senderIsListener(address,address)",,False
"senderIsSpeaker(address,address)",,False
"senderIsPosition(address,address)",,False
getAdvocate(address),,False
"nameIsAdvocate(address,address)",,False
"nameIsPosition(address,address)",,False
"initialize(address,address,address,address)",,False
"determinePosition(address,address)",,False
constructor(),theAO,True
transferOwnership(address),"theAO, theAO",True
"setWhitelist(address,bool)","theAO, whitelist",True
"toBase(uint256,uint256,bytes8)",,False
isDenominationExist(bytes8),,False
"constructor(uint256,string,string)","totalSupply, decimals, balanceOf, totalSupply, name, symbol",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, allowance, balanceOf, allowance, totalSupply",True
"constructor(string,address,string,string,string,bytes32,address)","name, originId, datHash, database, keyValue, contentId, typeId, vaultAddress",False
function()externalpayable{}(),,False
"transferEth(address,uint256)",,True
"transferERC20(address,address,uint256)",,True
"constructor(string,address,string,string,string,bytes32,address)",typeId,False
isTAO(address),,False
isName(address),,False
isValidERC20TokenAddress(address),,False
"isTheAO(address,address,address)",,True
PERCENTAGE_DIVISOR(),_PERCENTAGE_DIVISOR,False
MULTIPLIER_DIVISOR(),_MULTIPLIER_DIVISOR,False
"deployTAO(string,address,string,string,string,bytes32,address)",,False
"deployName(string,address,string,string,string,bytes32,address)",,False
"calculateWeightedMultiplier(uint256,uint256,uint256,uint256)",,False
"calculatePrimordialMultiplier(uint256,uint256,uint256,uint256,uint256)","_MULTIPLIER_DIVISOR, _MULTIPLIER_DIVISOR, _MULTIPLIER_DIVISOR",False
"calculateNetworkBonusPercentage(uint256,uint256,uint256,uint256,uint256)","_PERCENTAGE_DIVISOR, _PERCENTAGE_DIVISOR, _PERCENTAGE_DIVISOR",False
"calculateNetworkBonusAmount(uint256,uint256,uint256,uint256,uint256)",_PERCENTAGE_DIVISOR,False
"calculateMaximumBurnAmount(uint256,uint256,uint256)",,False
"calculateMultiplierAfterBurn(uint256,uint256,uint256)",,False
"calculateMultiplierAfterConversion(uint256,uint256,uint256)",,False
numDigits(uint256),,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(string,string,address,address,address)","name, symbol, powerOfTen, decimals",False
transferOwnership(address),theAO,False
"setWhitelist(address,bool)",whitelist,False
setNameTAOPositionAddress(address),"nameTAOPositionAddress, _nameTAOPosition, nameTAOPositionAddress",False
setNamePublicKeyAddress(address),"namePublicKeyAddress, _namePublicKey, namePublicKeyAddress",False
setNameAccountRecoveryAddress(address),"nameAccountRecoveryAddress, _nameAccountRecovery, nameAccountRecoveryAddress",False
"transferEth(address,uint256)",,True
"freezeAccount(address,bool)",frozenAccount,False
"setPrices(uint256,uint256)","sellPrice, buyPrice",False
"mint(address,uint256)",,False
"stakeFrom(address,uint256)","balanceOf, balanceOf, balanceOf, stakedBalance, stakedBalance",False
"unstakeFrom(address,uint256)","stakedBalance, stakedBalance, stakedBalance, balanceOf, balanceOf",False
"escrowFrom(address,address,uint256)","balanceOf, balanceOf, balanceOf, escrowedBalance, escrowedBalance",False
"mintEscrow(address,uint256)","escrowedBalance, escrowedBalance, totalSupply, totalSupply",False
"unescrowFrom(address,uint256)","escrowedBalance, escrowedBalance, escrowedBalance, balanceOf, balanceOf",False
"whitelistBurnFrom(address,uint256)","balanceOf, balanceOf, balanceOf, totalSupply, totalSupply",False
"whitelistTransferFrom(address,address,uint256)",,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"transferBetweenPublicKeys(address,address,address,uint256)","_nameTAOPosition, _nameAccountRecovery, _namePublicKey, _namePublicKey",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, allowance, balanceOf, allowance, totalSupply",True
buy(),"buyPrice, buyPrice",True
sell(uint256),"sellPrice, sellPrice, sellPrice",True
constructor(address),,False
transferOwnership(address),theAO,False
"setWhitelist(address,bool)",whitelist,False
setNameTAOPositionAddress(address),nameTAOPositionAddress,False
"addDenomination(bytes8,address)","denominationIndex, totalDenominations, totalDenominations, denominations, totalDenominations, denominations, totalDenominations, denominations, totalDenominations, denominationIndex, totalDenominations",False
"updateDenomination(bytes8,address)","denominationIndex, denominations, totalDenominations, denominations, totalDenominations, denominations, denominationIndex",False
isDenominationExist(bytes8),"denominationIndex, denominations, denominationIndex",False
getDenominationByName(bytes8),"denominations, denominationIndex, denominations, denominationIndex, denominations, denominationIndex",False
getDenominationByIndex(uint256),"totalDenominations, denominations, denominations, denominations, denominations",False
getBaseDenomination(),totalDenominations,False
"toBase(uint256,uint256,bytes8)","denominations, denominationIndex",False
"fromBase(uint256,bytes8)","denominations, denominationIndex",False
"exchangeDenomination(uint256,bytes8,bytes8)","denominations, denominationIndex, denominations, denominationIndex, totalDenominationExchanges, totalDenominationExchanges, denominationExchangeIdLookup, totalDenominationExchanges, denominationExchanges, totalDenominationExchanges",True
getDenominationExchangeById(bytes32),"denominationExchangeIdLookup, denominationExchanges, denominationExchangeIdLookup",True
toHighestDenomination(uint256),"totalDenominations, denominations, totalDenominations, denominations, denominations, denominations, denominations",False
