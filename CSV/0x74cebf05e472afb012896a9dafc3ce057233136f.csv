Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"tokenFallback(address,uint)",,False
Ownable(),owner,True
transferOwnership(address),owner,False
Deployer(),deployer,True
setOracle(address),oracle,False
ModultradeStorage(),,False
"insertProposal(address,uint,address)","sellerProposals, seller, proposalListAddress, id, proposals, id, seller",False
getProposalsBySeller(address),"sellerProposals, seller",False
getProposals(),proposals,False
getProposalById(uint),"proposalListAddress, id",False
getCount(),proposals,False
getCountBySeller(address),"sellerProposals, seller",False
"firePaidProposalEvent(address,uint)","proposalListAddress, id, id",False
changeOwner(address),owner,False
"ModultradeProposal(address,address,address)","seller, state",False
"setProposal(uint,string,uint,,uint,uint,uint)","state, id, title, price, currency, units, total, validUntil",False
"setFee(uint,address)","state, fee, feeAddress",False
function()publicpayable{purchase();}(),,False
purchase(),"currency, total",True
paid(address),total,False
"tokenFallback(address,uint)",,False
"tokenFallback(address,uint,bytes)",tokenFallbackData,False
delivery(string),"state, deliveryId, state, id, state, deliveryId, id",False
close(),"state, state, currency, currency, state, id, state, seller, id",False
cancel(uint),"state, state, currency, currency, state, id, state, buyer, id",False
getBalance(),currency,False
"Modultrade(address,address,address,address)","mtrContractAddress, modultradeStorage",True
"createProposal(address,uint,string,uint,,uint,uint,uint,uint,address)","seller, mtrContractAddress, id, title, price, currency, units, total, validUntil, fee, feeAddress, oracle, owner, modultradeStorage, seller, id",True
transferStorage(address),modultradeStorage,True
"firePaidProposalEvent(address,uint)","modultradeStorage, id, id",False
"fireCancelProposalEvent(address,uint)","modultradeStorage, id, id",False
"fireCloseProposalEvent(address,uint)","modultradeStorage, id, id",False
"fireDeliveryProposalEvent(address,uint)","modultradeStorage, id, id",False
