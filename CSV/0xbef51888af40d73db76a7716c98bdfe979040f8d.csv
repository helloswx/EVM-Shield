Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint,address,bytes)",,False
Owned(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
ZanCoin(),"symbol, name, decimals, _totalSupply, decimals, balances, owner, _totalSupply, isInPreSaleState, isInRoundOneState, isInRoundTwoState, isInFinalState, burnedTokensCount",False
totalSupply(),"_totalSupply, balances",False
balanceOf(address),balances,False
"transfer(address,uint)","balances, balances, balances, balances",True
"approve(address,uint)",allowed,True
"transferFrom(address,address,uint)","balances, balances, allowed, allowed, balances, balances",True
"allowance(address,address)",allowed,False
"approveAndCall(address,uint,bytes)",allowed,True
"function()publicpayable{uinteth_sent=msg.value;uinttokens_amount=eth_sent.mul(exchangeRate);require(eth_sent>0);require(exchangeRate>0);require(stateStartDate<now&&now<stateEndDate);require(balances[owner]>=tokens_amount);require(_totalSupply-(balances[owner]-tokens_amount)<=saleCap);require(!isInFinalState);require(isInPreSaleState||isInRoundOneState||isInRoundTwoState);balances[owner]=balances[owner].sub(tokens_amount);balances[msg.sender]=balances[msg.sender].add(tokens_amount);emitPurchaseZanTokens(msg.sender,eth_sent,tokens_amount);}()","exchangeRate, exchangeRate, stateStartDate, stateEndDate, balances, owner, _totalSupply, balances, owner, saleCap, isInFinalState, isInPreSaleState, isInRoundOneState, isInRoundTwoState, balances, owner, balances, owner, balances, balances",True
switchCrowdSaleStage(),"isInFinalState, isInRoundTwoState, isInPreSaleState, isInPreSaleState, exchangeRate, saleCap, decimals, exchangeRate, isInRoundOneState, isInRoundOneState, exchangeRate, saleCap, saleCap, decimals, exchangeRate, isInRoundTwoState, isInRoundTwoState, exchangeRate, saleCap, saleCap, decimals, exchangeRate, stateStartDate, stateEndDate, stateStartDate",False
completeCrowdSale(),"isInFinalState, isInPreSaleState, isInRoundOneState, isInRoundTwoState, owner, exchangeRate, isInFinalState, exchangeRate",True
burn(uint),"balances, balances, balances, _totalSupply, _totalSupply, burnedTokensCount, burnedTokensCount",True
"transferAnyERC20Token(address,uint)",owner,True
