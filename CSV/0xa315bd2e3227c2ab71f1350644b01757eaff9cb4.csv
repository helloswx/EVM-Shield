Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, manager, ownerWallet",True
transferOwnership(address),owner,False
setManager(address),manager,False
constructor(),"LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, currUserID, currUserID, users, ownerWallet, userList, currUserID, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet, users, ownerWallet",False
"function()externalpayable{uintlevel;if(msg.value==LEVEL_PRICE[1]){level=1;}elseif(msg.value==LEVEL_PRICE[2]){level=2;}elseif(msg.value==LEVEL_PRICE[3]){level=3;}elseif(msg.value==LEVEL_PRICE[4]){level=4;}elseif(msg.value==LEVEL_PRICE[5]){level=5;}elseif(msg.value==LEVEL_PRICE[6]){level=6;}elseif(msg.value==LEVEL_PRICE[7]){level=7;}elseif(msg.value==LEVEL_PRICE[8]){level=8;}else{revert('Incorrect Value send');}if(users[msg.sender].isExist){buyLevel(level);}elseif(level==1){uintrefId=0;addressreferrer=bytesToAddress(msg.data);if(users[referrer].isExist){refId=users[referrer].id;}else{revert('Incorrect referrer');}regUser(refId);}else{revert(""Please buy first level for 0.05 ETH"");}}()","LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, LEVEL_PRICE, users, users, users",True
regUser(uint),"users, currUserID, LEVEL_PRICE, users, userList, users, userList, currUserID, currUserID, users, userList, currUserID, users, users, users, users, users, users, users, users, users, userList, userList",True
buyLevel(uint),"users, LEVEL_PRICE, users, LEVEL_PRICE, users, users, users, users",True
findFreeReferrer(address),"users, users, users, users, users, users, users, users",False
viewUserReferral(address),users,False
"viewUserLevelExpired(address,uint)",users,False
