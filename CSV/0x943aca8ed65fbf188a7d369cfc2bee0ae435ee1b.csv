Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
burn(uint256),,True
setBonusRate(uint256),bonusRateOneEth,False
stopOffering(),offeringEnabled,False
resumeOffering(),offeringEnabled,False
"startOffering(uint256,uint256,uint256,uint256,bool)","owner, isOfferingStarted, isOfferingStarted, startTime, endTime, isBurnInClose, currentTokenOfferingRaised, currentTotalTokenOffering, offeringEnabled, startTime, endTime, currentTotalTokenOffering, bonusRateOneEth",False
updateStartTime(uint256),"isOfferingStarted, endTime, startTime",False
updateEndTime(uint256),"isOfferingStarted, startTime, endTime",False
updateBurnableStatus(bool),"isOfferingStarted, isBurnInClose",False
endOffering(),"isBurnInClose, endTime, currentTokenOfferingRaised",False
"withdrawToken(address,uint256,string)",,True
withdrawTrackOf(string),,False
"addContract(address,address)",contractToReceiver,False
removeContract(address),contractToReceiver,False
"contractSpend(address,uint256)",contractToReceiver,True
getContractReceiver(address),contractToReceiver,False
ContractiumToken(),"INITIAL_SUPPLY, INITIAL_SUPPLY, INITIAL_SUPPLY",True
"function()publicpayable{require(msg.sender!=owner);uint256amount=msg.value.mul(unitsOneEthCanBuy);uint256amountBonus=msg.value.mul(bonusRateOneEth);amount=amount.add(amountBonus);preValidatePurchase(amount);require(balances[owner]>=amount);totalWeiRaised=totalWeiRaised.add(msg.value);currentTokenOfferingRaised=currentTokenOfferingRaised.add(amount);balances[owner]=balances[owner].sub(amount);balances[msg.sender]=balances[msg.sender].add(amount);emitTransfer(owner,msg.sender,amount);emitBuyToken(msg.sender,msg.value,amount);owner.transfer(msg.value);}()","owner, unitsOneEthCanBuy, bonusRateOneEth, owner, totalWeiRaised, totalWeiRaised, currentTokenOfferingRaised, currentTokenOfferingRaised, owner, owner, owner, owner",True
"batchTransfer(,)",,True
