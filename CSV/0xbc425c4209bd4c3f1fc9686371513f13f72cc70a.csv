Function Name,State Variables Modified,Can Transfer Ether
tokensOwner(),,False
contracBalance(),,False
balanceOf(address),,False
contracBalance(),,False
balanceOf(address),,False
tokensOwner(),,True
constructor(),,False
withdrawDividendes(),"dividendes, dividendes",True
dividendesOf(address),,False
constructor(),,False
"function()externalpayable{require(msg.sender.isNotContract(),""the contract can not hold tokens"");addresspayable_referralAddress=msg.data.toAddr();uint256_incomingEthereum=msg.value;uint256_forReferral;uint256_reverseAccessOfLimiter;if(_incomingEthereum>limiter){_reverseAccessOfLimiter=_incomingEthereum.sub(limiter);_incomingEthereum=limiter;}uint256_aTokenPrice=tokenPrice();uint256_dividendesOwner=dividendesOf(msg.sender);uint256_forAdvertising=_incomingEthereum.mul(advertisingCosts).div(100);uint256_forDividendes=onDividendes(_incomingEthereum,dividendsCosts);if(_referralAddress!=address(0)){_forReferral=_incomingEthereum.mul(forReferralCosts).div(100);_forAdvertising=_forAdvertising.sub(_forReferral);}_incomingEthereum=_incomingEthereum.sub(_forDividendes).sub(_forAdvertising).sub(_forReferral);require(_incomingEthereum>=_aTokenPrice,""the amount of ether is not enough"");(uint256_amountOfTokens,uint256_reverseAccess)=ethereumToTokens(_incomingEthereum,_aTokenPrice);advertising.transfer(_forAdvertising);_reverseAccessOfLimiter=_reverseAccessOfLimiter.add(_reverseAccess);if(_reverseAccessOfLimiter>0){msg.sender.transfer(_reverseAccessOfLimiter);emitReverseAccess(_reverseAccessOfLimiter);}if(_forReferral>0&&_referralAddress!=address(0)){_referralAddress.transfer(_forReferral);emitForReferral(_forReferral);}if(_dividendesOwner>_aTokenPrice){reinvest();}bookKeeper[msg.sender]=block.number;balances[msg.sender]=balances[msg.sender].add(_amountOfTokens);totalSupply=totalSupply.add(_amountOfTokens);dividendes=dividendes.add(_forDividendes);emitEtherTransfer(msg.sender,advertising,_forAdvertising);emitTransfer(address(0),msg.sender,_amountOfTokens);emitSendOnDividend(msg.sender,_forDividendes);}()","limiter, limiter, limiter, advertisingCosts, dividendsCosts, forReferralCosts, totalSupply, totalSupply, dividendes, dividendes",True
tokenPrice(),"totalSupply, totalSupply",False
withdraw(uint256),"forWithdrawCosts, totalSupply, totalSupply, dividendes, dividendes",True
reinvest(),"dividendes, dividendes, totalSupply, totalSupply",True
