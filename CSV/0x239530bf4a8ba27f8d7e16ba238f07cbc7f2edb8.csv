Function Name,State Variables Modified,Can Transfer Ether
buy(address),,False
"transfer(address,uint256)",,False
myTokens(),,False
balanceOf(address),,False
myDividends(bool),,False
withdraw(),,False
calculateTokensReceived(uint256),,False
stakingRequirement(),,False
"tokenCallback(address,uint256,bytes)",,False
"approvalCallback(address,uint256,bytes)",,False
"constructor(uint256,address)","_dev, ACTIVATION_TIME, totalDividendPoints_, _P3D, ambassadorQuota_, tokenPriceInitial_, tokenPriceIncremental_, administrators, _dev, ambassadors_, _dev",True
getSupply(),,False
getExitFee(),"sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee2_, sellDividendFee_",False
getEntryFee(),"buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee2_, buyDividendFee_",False
buy(address),,True
buyWithNameRef(string),,True
"function()payablepublic{if(msg.sender!=address(_P3D)){purchaseInternal(msg.sender,msg.value,address(0x0));}}()",_P3D,True
donate(),,False
registerName(string),"onlyAmbassadors, ambassadors_, nameRegistrationFee, nameRegistrationFee, globalNameMap_, customerNameMap_, globalNameMap_",True
changeActiveNameTo(string),customerNameMap_,True
changeActiveNameIndexTo(uint256),customerNameMap_,True
reinvest(bool),dividendsStored_,True
reinvestAmount(uint256),"dividendsStored_, dividendsStored_, dividendsStored_",True
reinvestSubdivs(bool),divsMap_,True
reinvestSubdivsAmount(uint256),"divsMap_, divsMap_, divsMap_, lastContractBalance_, lastContractBalance_",True
exit(bool),tokenBalanceLedger_,True
withdraw(bool),dividendsStored_,True
withdrawAmount(uint256),"dividendsStored_, dividendsStored_, dividendsStored_, _P3D",True
withdrawSubdivs(bool),divsMap_,True
withdrawSubdivsAmount(uint256),"divsMap_, divsMap_, divsMap_, lastContractBalance_, lastContractBalance_",True
sell(uint256),"tokenBalanceLedger_, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
"transfer(address,uint256)",,True
"transferAndCall(address,uint256,bytes)",canAcceptTokens_,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"approveAndCall(address,uint256,bytes)",,True
"setAdministrator(address,bool)",administrators,False
"setAmbassador(address,bool)",ambassadors_,False
setStakingRequirement(uint256),stakingRequirement,False
setCanAcceptTokens(address),canAcceptTokens_,False
setName(string),name,False
setSymbol(string),symbol,False
totalBalance(),_P3D,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(bool),,True
myStoredDividends(),,True
mySubdividends(),,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
referralDividendsOf(address),referralBalance_,False
storedDividendsOf(address),dividendsStored_,False
subdividendsOwing(address),"divsMap_, totalDividendPoints_, divsMap_, magnitude",False
subdividendsOf(address),divsMap_,False
"allowance(address,address)",allowed,False
namesOf(address),customerNameMap_,False
ownerOfName(string),globalNameMap_,False
activeNameOf(address),customerNameMap_,False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_",False
calculateTokensReceived(uint256),_P3D,False
calculateAmountReceived(uint256),tokenSupply_,False
P3D_address(),_P3D,False
fetchAllDataForCustomer(address),ACTIVATION_TIME,False
