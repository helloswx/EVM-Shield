Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
SimpleToken(),"INITIAL_SUPPLY, INITIAL_SUPPLY, INITIAL_SUPPLY",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
grant(),"wallet, tranchesPayedOut, tranchesCount, startTimestamp, startTimestamp, period, tranchesPayedOut, tranchesPayedOut, tranchesPayedOut, token, wallet, trancheSize",True
pause(),paused,False
unpause(),paused,False
TiqpitToken(address),"addressIco, INITIAL_TOTAL_SUPPLY, INITIAL_TOTAL_SUPPLY, INITIAL_TOTAL_SUPPLY",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"transferFromIco(address,uint256)",,True
burnFromAddress(address),,False
addWallet(address),"whitelist, whitelistLength",False
removeWallet(address),"whitelist, whitelistLength",False
isWhitelisted(address),whitelist,False
setBackendAddress(address),backendAddress,False
Whitelistable(),whitelist,False
"TiqpitCrowdsale(uint256,uint256,uint256,uint256,address,address,address,address)","startTimePreIco, endTimePreIco, startTimeIco, endTimeIco, tiqpitSolutionsWallet, advisorsWallet, foundersWallet, bountyWallet, whitelist, token",True
function()publicpayable{sellTokens();}(),,False
isPreIco(),"startTimePreIco, endTimePreIco",False
isIco(),"startTimeIco, endTimeIco",False
burnRemainingTokens(),"tokensRemainingIco, endTimeIco, token, tokensRemainingIco",False
initialDistribution(),"isInitialDistributionDone, token, bountyWallet, RESERVED_TOKENS_BOUNTY, token, advisorsWallet, RESERVED_TOKENS_ADVISORS, token, tiqpitSolutionsWallet, RESERVED_TOKENS_TIQPIT_SOLUTIONS, foundersWallet, RESERVED_TOKENS_FOUNDERS, isInitialDistributionDone",True
getIcoPurchase(address),"icoPurchases, icoPurchases",False
getPreIcoPurchase(address),"preIcoPurchases, preIcoPurchases",False
refundPreIco(),"hasPreIcoFailed, preIcoPurchases, preIcoPurchases, preIcoPurchases, preIcoPurchases, preIcoPurchases, token",True
refundIco(),"hasIcoFailed, icoPurchases, icoPurchases, icoPurchases, icoPurchases, icoPurchases, token",True
burnTokens(address),"hasIcoFailed, icoPurchases, preIcoPurchases, icoPurchases, preIcoPurchases, token",False
"manualSendTokens(address,uint256)","tokensRemainingPreIco, token, tokensRemainingIco, soldTokensPreIco, MINCAP_TOKENS_PRE_ICO, token",True
getLockedContractAddress(address),"lockedList, wallet",False
triggerFailFlags(),"hasPreIcoFailed, endTimePreIco, soldTokensPreIco, MINCAP_TOKENS_PRE_ICO, hasPreIcoFailed, hasIcoFailed, endTimeIco, soldTokensIco, MINCAP_TOKENS_ICO, hasIcoFailed",False
currentIcoRate(),"startTimeIco, startTimeIco, firstRate, startTimeIco, startTimeIco, secondRate, startTimeIco, thirdRate",False
sellTokens(),"soldTokensPreIco, MINCAP_TOKENS_PRE_ICO, tokensRemainingPreIco, tokensRemainingIco, preIcoRate, MIN_INVESTMENT, tokensRemainingPreIco, tokensRemainingIco, tokensRemainingIco, tokensRemainingPreIco, tokensRemainingPreIco, tokensRemainingPreIco, tokensRemainingIco, token, soldTokensPreIco, MINCAP_TOKENS_PRE_ICO, owner, soldTokensIco, MINCAP_TOKENS_ICO, owner",True
setBackendAddress(address),backendAddress,False
