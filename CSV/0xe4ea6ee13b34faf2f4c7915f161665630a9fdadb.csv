Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner, owner",False
"transferFrom(address,address,uint256)",,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
topscoin(),"rate, dropUnitPrice, bonus, maxDropsPerTx, maxTrialDrops",False
tokenHasFreeTrial(address),"trialDrops, maxTrialDrops",False
getRemainingTrialDrops(address),"maxTrialDrops, trialDrops",False
setRate(uint256),"rate, rate, rate, dropUnitPrice, rate",False
getRate(),rate,False
getMaxDropsPerTx(),maxDropsPerTx,False
setMaxDrops(uint256),"maxDropsPerTx, maxDropsPerTx",False
setBonus(uint256),"bonus, bonus, bonus",False
"grantBonusDrops(address,uint256)","bonusDropsOf, bonusDropsOf",False
"revokeBonusCreditOf(address,uint256)","bonusDropsOf, bonusDropsOf, bonusDropsOf",False
getDropsOf(address),"ethBalanceOf, rate",False
getBonusDropsOf(address),bonusDropsOf,False
getTotalDropsOf(address),,False
getEthBalanceOf(address),ethBalanceOf,False
banToken(address),"tokenIsBanned, tokenIsBanned",False
unbanToken(address),"tokenIsBanned, tokenIsBanned",False
"getTokenAllowance(address,address)",,False
"function()publicpayable{ethBalanceOf[msg.sender]=ethBalanceOf[msg.sender].add(msg.value);CreditPurchased(msg.sender,msg.value,msg.value.mul(rate));}()","ethBalanceOf, ethBalanceOf, rate",True
withdrawEth(uint256),"ethBalanceOf, ethBalanceOf, ethBalanceOf",True
issueRefunds(),"maxDropsPerTx, ethBalanceOf, ethBalanceOf, ethBalanceOf",True
"singleValueAirdrop(address,,uint256)","maxDropsPerTx, tokenIsBanned, trialDrops, trialDrops",True
"multiValueAirdrop(address,,)","maxDropsPerTx, tokenIsBanned, trialDrops, trialDrops",True
"withdrawERC20Tokens(address,address,uint256)",,True
