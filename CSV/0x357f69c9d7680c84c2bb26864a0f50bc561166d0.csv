Function Name,State Variables Modified,Can Transfer Ether
init(),,False
transferOwnership(address),,False
transferOwnership(address),,False
getOwner(),,False
upgradeImplementation(address),,False
getImplementation(),,False
setBalancePercentageLimit(uint256),,False
getBalancePercentageLimit(),,False
"setOverBalanceLimitHolder(address,bool)",,False
setUserManager(address),,False
getUserManager(),,False
setICOToken(address),,False
getICOToken(),,False
"onTransfer(address,address,uint256)",,False
"onMint(address,uint256)",,False
onBurn(uint256),,False
"onTaxTransfer(address,uint256)",,False
"kycVerification(address,address,uint256)",,False
setKYCVerificationContract(address),,False
getKYCVerificationContractAddress(),,False
"updateUserRatio(uint256,address)",,False
isOverBalanceLimitHolder(address),,False
"isInBalanceLimit(address,uint256)",,False
initExchangeUser(uint256),,False
initKYCUser(uint256),,False
isValidUser(),,False
getUserData(),,False
isExchangeUser(),,False
"updateUserPolicy(bool,bool,bool,bool)",,False
isUserPolicyAccepted(),,False
updateGenerationRatio(uint256),,False
updateKYCStatus(uint256),,False
updateLastTransactionTime(uint256),,False
markAsFounder(),,False
isFounderUser(),,False
setUserBlacklistedStatus(bool),,False
isUserBlacklisted(),,False
banUser(),,False
isUserBanned(),,False
increaseDailyTransactionVolumeSending(uint256),,False
getDailyTransactionVolumeSending(),,False
increaseDailyTransactionVolumeReceiving(uint256),,False
getDailyTransactionVolumeReceiving(),,False
increaseWeeklyTransactionVolumeSending(uint256),,False
getWeeklyTransactionVolumeSending(),,False
increaseWeeklyTransactionVolumeReceiving(uint256),,False
getWeeklyTransactionVolumeReceiving(),,False
increaseMonthlyTransactionVolumeSending(uint256),,False
getMonthlyTransactionVolumeSending(),,False
increaseMonthlyTransactionVolumeReceiving(uint256),,False
getMonthlyTransactionVolumeReceiving(),,False
setDataContract(address),,False
getDataContractAddress(),,False
setTaxPercentage(uint256),,False
setTaxationPeriod(uint256),,False
setUserFactoryContract(address),,False
getUserFactoryContractAddress(),,False
setHookOperatorContract(address),,False
getHookOperatorContractAddress(),,False
isUserKYCVerified(address),,False
isBlacklisted(address),,False
isBannedUser(address),,False
"updateGenerationRatio(uint256,address)",,False
updateLastTransactionTime(address),,False
getUserContractAddress(address),,False
isValidUser(address),,False
setCrowdsaleContract(address),,False
getCrowdsaleContract(),,False
markUserAsFounder(address),,False
"Crowdsale(uint256,uint256,uint256,address)","token, startTime, endTime, rate, wallet",False
function()externalpayable{buyTokens(msg.sender);}(),,True
buyTokens(address),"rate, weiRaised, weiRaised, token",True
hasEnded(),endTime,False
CappedCrowdsale(uint256),cap,False
hasEnded(),"weiRaised, cap",False
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
constructor(address),"wallet, state",False
deposit(address),"state, deposited, deposited",False
close(),"state, state, wallet",True
enableRefunds(),"state, state",False
refund(address),"state, deposited, DEDUCTION, deposited, wallet, totalDeductedValue, totalDeductedValue",True
"setPreSalesSpecialUser(address,uint)",preSalesSpecialUsers,False
"setMultiplePreSalesSpecialUsers(,uint)","MAX_INPUT_USERS_COUNT, preSalesSpecialUsers",False
addPublicSalesSpecialUser(address),publicSalesSpecialUsers,False
addMultiplePublicSalesSpecialUser(),"MAX_INPUT_USERS_COUNT, publicSalesSpecialUsers",False
removePublicSalesSpecialUser(address),publicSalesSpecialUsers,False
setLister(address),lister,False
finalize(),"isFinalized, isFinalized",False
constructor(uint256),"vault, wallet, goal",False
claimRefund(),"isFinalized, vault",True
goalReached(),"weiRaised, goal",False
"constructor(uint256,uint256,address,address)","preSalesEndDate, startTime, DEFAULT_PRESALES_DURATION, token",False
extendPreSalesPeriodWith(uint),"MAX_PRESALES_EXTENSION, preSalesEndDate, preSalesEndDate, endTime, endTime",False
buyTokens(address),"MIN_CONTRIBUTION_AMOUNT, token, MAX_USER_TOKENS_BALANCE, weiRaised, weiRaised, weiRaised, MAX_FUNDS_RAISED_DURING_PRESALE, isPresalesNotEndedInAdvance, preSalesEndDate, isPresalesNotEndedInAdvance, token, userManagerContract",True
"createBountyToken(address,uint256)","totalMintedBountyTokens, MAX_BOUNTYTOKENS_AMOUNT, totalMintedBountyTokens, totalMintedBountyTokens, token",True
setUserManagerContract(address),userManagerContract,False
"constructor(uint256,uint256,uint256,uint256,address,address)",,False
pause(),paused,False
unpause(),paused,False
constructor(uint),rate,False
rate(),rate,False
setRate(uint),"rate, rate",True
setMinWeiAmount(uint),"minWeiAmount, minWeiAmount, minWeiAmount",True
"convertTokensAmountInWeiAtRate(uint,uint)",minWeiAmount,False
calcWeiForTokensAmount(uint),"minWeiAmount, rate, rate",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
burn(uint256),"totalSupply, totalSupply",True
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)","totalSupply, totalSupply",False
finishMinting(),mintingFinished,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
"increaseApproval(address,uint)",,False
"decreaseApproval(address,uint)",,False
constructor(),minters,True
setRefunder(address),refunder,False
setExchangeOracle(address),aiurExchangeOracle,False
setHookOperator(address),hookOperator,False
addMinter(address),minters,False
removeMinter(address),minters,False
"mint(address,uint256)","hookOperator, totalSupply, totalSupply",False
burn(uint),hookOperator,False
"transfer(address,uint)",hookOperator,True
"transferFrom(address,address,uint)",hookOperator,True
"taxTransfer(address,address,uint)",hookOperator,True
"transferOverBalanceFunds(address,address,uint)","hookOperator, aiurExchangeOracle, rate, MIN_REFUND_RATE_DELIMITER, totalSupply, hookOperator, aiurExchangeOracle, rate, hookOperator",True
