Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
"increaseApproval(address,uint)",,True
"decreaseApproval(address,uint)",,True
"DadiMaxCapSale(,uint256)","token, tokenSupply",False
"function()publicnonZeropayable{require(state==SaleState.Sale);buyTokens(msg.sender,msg.value);}()",state,True
addSaleWallet(address),saleWallets,False
addWhitelistUsers(),,False
addWhitelistUser(address),"whitelisted, whitelistedIndex, whitelisted",False
calculateTokens(uint256),"ethRate, saleTokenPrice",False
setState(uint256),"state, state",False
startSale(),"state, state",False
finalizeSale(),"state, state",False
closeSale(address),"state, state, token, state",True
setTokenDistribution(),"state, state",False
distributeTokens(address),"state, investors, investors, investors, token",True
"distributeToAlternateAddress(address,address)","state, investors, investors, investors, token",True
"redistributeTokens(address,address)","investors, investors, investors, token, state",True
getTokensAvailable(),"tokenSupply, tokensPurchased",False
getTokensPurchased(),tokensPurchased,False
ethToUsd(uint256),ethRate,False
isSuccessful(),state,False
getWhitelistUser(address),whitelisted,False
getInvestorCount(),investorIndex,False
getInvestor(address),"investors, investors, investors, investors",False
