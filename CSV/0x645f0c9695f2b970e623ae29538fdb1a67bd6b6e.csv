Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, founders, owner, founders, founders, founders, founders, founders",True
buy(address),,True
function()onlyFoundersIfNotPublic()payablepublic{require(msg.sender==tx.origin);excludeWhale(0x0);}(),,True
reinvest(),"payoutsTo_, magnitude, referralBalances, referralBalances",True
exit(),publicTokenLedger,True
withdraw(),"payoutsTo_, magnitude, referralBalances, referralBalances",True
sell(uint256),"publicTokenLedger, dividendFee, whaleLedger, owner, lotterySupply, tokenSupply, publicTokenLedger, profitPerShare_, magnitude, payoutsTo_, tokenSupply, profitPerShare_, profitPerShare_, magnitude, tokenSupply",True
"transfer(address,uint256)","owner, gameList, gameLedger, gameLedger, gameSuppply, publicTokenLedger, payoutsTo_, profitPerShare_, gameList, publicTokenLedger, publicTokenLedger, gameLedger, gameSuppply, gamePlayers, payoutsTo_, profitPerShare_, publicTokenLedger, publicTokenLedger, publicTokenLedger, payoutsTo_, profitPerShare_, payoutsTo_, profitPerShare_",True
setGames(address),gameList,False
goPublic(),"openToThePublic, openToThePublic",False
totalEthereumBalance(),,False
totalSupply(),"tokenSupply, lotterySupply, gameSuppply",False
myTokens(),,True
myDividends(bool),referralBalances,True
balanceOf(address),"owner, whaleLedger, gameList, gameLedger, publicTokenLedger",False
dividendsOf(address),"profitPerShare_, publicTokenLedger, payoutsTo_, magnitude",False
buyAndSellPrice(),"tokenPrice, dividendFee",False
calculateTokensReceived(uint256),"tokenPrice, dividendFee",False
calculateEthereumReceived(uint256),"tokenSupply, dividendFee",False
