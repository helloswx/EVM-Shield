Function Name,State Variables Modified,Can Transfer Ether
Owned(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
totalSupply(),,False
balanceOf(address),,False
getReleasableFunds(),,False
release(),,False
setWithdrawalAddress(address),,False
revoke(string),,False
getTokenBalance(),,False
updateBalanceOnFunding(uint256),,False
"salvageOtherTokensFromContract(address,address,uint)",,False
"salvageNotAllowedTokensSentToContract(address,uint)",,False
amountLockedInVestings(),,False
substractLockedAmount(uint256),,False
addLockedAmount(uint256),,False
addInternalBalance(uint256),,False
getReleasableFunds(address),,False
"ReleasingScheduleLinearContract(uint256,uint256,uint256)","startTime, tickDuration, amountPerTick",False
getReleasableFunds(address),"startTime, startTime, tickDuration, amountPerTick",False
"TgeOtherReleasingScheduleContract(uint256,uint256)",,False
getReleasableFunds(address),,False
TgeTeamReleasingScheduleContract(),,False
getReleasableFunds(address),,False
"TokenVestingContract(address,address,bool,bool,bool,address)","beneficiary, tokenAddress, canReceiveTokens, revocable, changable, releasingScheduleContract, alreadyReleasedAmount, revoked, internalBalance, fallbackTriggered",False
setReleasingSchedule(address),"changable, releasingScheduleContract, releasingScheduleContract",False
setWithdrawalAddress(address),beneficiary,False
release(),"beneficiary, owner, releasingScheduleContract, alreadyReleasedAmount, alreadyReleasedAmount, internalBalance, internalBalance, owner, tokenAddress, beneficiary",True
revoke(string),"revocable, releasingScheduleContract, tokenAddress, beneficiary, owner, owner, tokenAddress, owner, owner",True
getTokenBalance(),tokenAddress,False
updateBalanceOnFunding(uint256),"internalBalance, internalBalance",False
checkForReceivedTokens(),"internalBalance, internalBalance, canReceiveTokens, internalBalance, owner, fallbackTriggered",False
"salvageOtherTokensFromContract(address,address,uint)",tokenAddress,True
"salvageNotAllowedTokensSentToContract(address,uint)","internalBalance, tokenAddress",True
function()external{fallbackTriggered=true;}(),fallbackTriggered,False
"VestingMasterContract(address,bool)","tokenAddress, canReceiveTokens, internalBalance, amountLockedInVestings",False
vestingExists(address),"vestingAddresses, vestingAddresses, addressToVestingStruct",False
"addVesting(address,address,address,string,uint256)","amountLockedInVestings, amountLockedInVestings",False
releaseVesting(address),"addressToVestingStruct, owner, moderator",True
releaseMyTokens(),beneficiaryToVesting,True
"fundVesting(address,uint256)","internalBalance, internalBalance, internalBalance, tokenAddress, tokenAddress",True
getTokenBalance(),tokenAddress,False
"revokeVesting(address,string)",,False
addInternalBalance(uint256),"internalBalance, internalBalance",True
addLockedAmount(uint256),"amountLockedInVestings, amountLockedInVestings",True
substractLockedAmount(uint256),"amountLockedInVestings, amountLockedInVestings",True
checkForReceivedTokens(),"internalBalance, internalBalance, canReceiveTokens, amountLockedInVestings, amountLockedInVestings, internalBalance, fallbackTriggered",False
"salvageNotAllowedTokensSentToContract(address,address,uint)","internalBalance, tokenAddress",True
"salvageOtherTokensFromContract(address,address,address,uint)",tokenAddress,True
killContract(),"vestingAddresses, tokenAddress, owner, owner",True
"setWithdrawalAddress(address,address)","owner, addressToVestingStruct",True
"receiveApproval(address,uint256,address,bytes)","canReceiveTokens, tokenAddress, amountLockedInVestings, amountLockedInVestings, internalBalance, internalBalance",True
"deployVesting(address,string,uint256,bool,bool,bool,address)",tokenAddress,False
"deployOtherVesting(address,uint256,uint256)",tokenAddress,False
"deployTgeTeamVesting(address,uint256)",tokenAddress,False
acceptOwnershipOfVesting(address),,False
setModerator(address),moderator,False
function()external{fallbackTriggered=true;}(),fallbackTriggered,False
