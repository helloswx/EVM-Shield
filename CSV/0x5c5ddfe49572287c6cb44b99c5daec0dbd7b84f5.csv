Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, s",True
"insert(address,uint)","s, s, s, s, s",False
investorFullInfo(address),"s, s, s, s",False
investorBaseInfo(address),"s, s, s",False
investorShortInfo(address),"s, s",False
"addRefBonus(address,uint)","s, s",False
"addValue(address,uint)","s, s",False
"setPaymentTime(address,uint)","s, s",False
"setRefBonus(address,uint)","s, s",False
keyFromIndex(uint),s,False
contains(address),s,False
size(),s,False
iterStart(),,False
constructor(),m_admins,True
"provideAccess(address,)","m_admins, m_admins, m_admins",False
access(address),m_admins,False
paymode(),m_paysys,False
constructor(),"adminAddr, payerAddr, waveStartup, waveStartup, pauseOnNextWave",True
function()publicpayable{if(msg.value==0){getMyDividends();return;}addressa=msg.data.toAddr();address[3]memoryrefs;if(a.notZero()){refs[0]=a;doInvest(refs);}else{doInvest(refs);}}(),,False
investorsNumber(),m_investors,False
balanceETH(),,False
payerPercent(),"m_payerPercent, m_payerPercent",False
dividendsPercent(),"m_dividendsPercent, m_dividendsPercent",False
adminPercent(),"m_adminPercent, m_adminPercent",False
referrerPercent(),"m_refPercent, m_refPercent",False
investorInfo(address),"m_investors, m_referrals",False
latestPayout(),m_paysys,False
getMyDividends(),"m_paysys, m_investors, m_paysys, m_paysys, m_investors, m_dividendsPercent, m_investors",True
payout(),"m_nextWave, m_paysys, m_investors, m_paysys, m_paysys, m_paysys, m_investors, m_investors, m_investors, m_dividendsPercent, m_nextWave, m_investors, m_paysys, m_investors, m_paysys",True
setAdminAddr(address),"adminAddr, adminAddr",False
setPayerAddr(address),"payerAddr, payerAddr",False
setPullPaymode(),,False
