Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
transferBZxOwnership(address),"owner, bZxContractAddress, bZxContractAddress",True
transferOwnership(address),"bZxContractAddress, owner, owner",True
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"didTakeOrder(bytes32,address,uint)",,False
"didTradePosition(bytes32,address,address,uint,uint)",,False
"didPayInterest(bytes32,address,address,address,uint,bool,uint)",,False
"didDepositCollateral(bytes32,address,uint)",,False
"didWithdrawCollateral(bytes32,address,uint)",,False
"didChangeCollateral(bytes32,address,uint)",,False
"didWithdrawProfit(bytes32,address,uint,uint)",,False
"didCloseLoan(bytes32,address,bool,uint)",,False
"doManualTrade(address,address,uint)",,False
"doTrade(address,address,uint)",,False
"verifyAndLiquidate(address,address,address,uint,uint,uint,uint)",,False
"doTradeofCollateral(address,address,uint,uint,uint,uint)",,False
"shouldLiquidate(bytes32,address,address,address,address,uint,uint,uint,uint)",,False
"getTradeRate(address,address)",,False
"getProfitOrLoss(address,address,uint,uint)",,False
"getCurrentMarginAmount(address,address,address,uint,uint,uint)",,False
"isTradeSupported(address,address,uint)",,False
deposit(),,False
withdraw(uint),,False
"trade(address,uint,address,address,uint,uint,address)",,False
"getExpectedRate(address,address,uint)",,False
"constructor(address,address,address,address)","vaultContract, kyberContract, wethContract, bZRxTokenContract, emaValue, emaPeriods",False
function()publicpayable{}(),,False
"didTakeOrder(bytes32,address,uint)",gasRefunds,False
"didTradePosition(bytes32,address,address,uint,uint)",,False
"didPayInterest(bytes32,address,address,address,uint,bool,uint)","interestFeePercent, wethContract, wethContract, bZRxTokenContract",True
"didDepositCollateral(bytes32,address,uint)",,False
"didWithdrawCollateral(bytes32,address,uint)",,False
"didChangeCollateral(bytes32,address,uint)",,False
"didWithdrawProfit(bytes32,address,uint,uint)",,False
"didCloseLoan(bytes32,address,bool,uint)","gasRefunds, gasRefunds, emaValue, gasRewardPercent, emaValue, bountyRewardPercent",True
"doManualTrade(address,address,uint)","isManualTradingAllowed, MAX_FOR_KYBER",False
"doTrade(address,address,uint)",MAX_FOR_KYBER,False
"verifyAndLiquidate(address,address,address,uint,uint,uint,uint)",MAX_FOR_KYBER,False
"doTradeofCollateral(address,address,uint,uint,uint,uint)","vaultContract, minInitialMarginAmount, minInitialMarginAmount, minMaintenanceMarginAmount, minMaintenanceMarginAmount, vaultContract",True
"shouldLiquidate(bytes32,address,address,address,address,uint,uint,uint,uint)",liquidationThresholdPercent,False
"isTradeSupported(address,address,uint)",,False
"getTradeRate(address,address)",,False
"getProfitOrLoss(address,address,uint,uint)",,False
"getCurrentMarginAmount(address,address,address,uint,uint,uint)",,False
setInterestFeePercent(uint),"interestFeePercent, interestFeePercent",False
setLiquidationThresholdPercent(uint),"liquidationThresholdPercent, liquidationThresholdPercent, liquidationThresholdPercent",False
setGasRewardPercent(uint),"gasRewardPercent, gasRewardPercent",False
setBountyRewardPercent(uint),"bountyRewardPercent, bountyRewardPercent",False
"setMarginThresholds(uint,uint)","minInitialMarginAmount, minMaintenanceMarginAmount",False
setManualTradingAllowed(bool),"isManualTradingAllowed, isManualTradingAllowed",False
setVaultContractAddress(address),"vaultContract, vaultContract",False
setKyberContractAddress(address),"kyberContract, kyberContract",False
setWethContractAddress(address),"wethContract, wethContract",False
setBZRxTokenContractAddress(address),"bZRxTokenContract, bZRxTokenContract",False
setEMAPeriods(uint),"emaPeriods, emaPeriods",False
"transferEther(address,uint)",,True
"transferToken(address,address,uint)",,True
