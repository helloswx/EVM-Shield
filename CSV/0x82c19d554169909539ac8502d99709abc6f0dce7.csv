Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"allowance(address,address)",,False
decimals(),,False
"setProvider(uint8,address)",subContracts,False
RBAC(),ROLE_ADMIN,True
"checkRole(address,string)",roles,False
"hasRole(address,string)",roles,False
"adminAddRole(address,string)",,False
"adminRemoveRole(address,string)",,False
changeAdmin(address),,False
"adminAdd(address,string)",,False
"adminRemove(address,string)",,False
"has(address,string)",,False
"ExchangeAdapterBase(address,address)","adapterManager, exchangeExchange",False
"startPlaceOrder(uint,address)",,False
"addPlaceOrderItem(uint,,uint,uint)",,False
endPlaceOrder(uint),,False
"getSubOrderStatus(uint,)",,False
cancelOrder(uint),,False
checkTokenSupported(),,False
"updatePrice(address,,,uint)",,False
getNewDefaultPrice(address),,False
"getNewCustomPrice(address,address)",,False
"getNonce(address,address)",,False
checkTokenSupported(address),,False
checkExchangeSupported(bytes32),,False
"checkProviderSupported(address,address)",,False
"getRates(address,uint)",,False
"setCustomExtraData(bytes32,uint,bytes32,bytes32)",,False
"getCustomExtraData(bytes32,uint,bytes32)",,False
"addTokenDetails(uint,,,,)",,False
"addOrderBasicFields(uint,address,uint,uint,bytes32)",,False
"getOrderTokenCompletedAmount(uint,address)",,False
getIndexOrder1(uint),,False
getIndexOrder2(uint),,False
"updateIndexOrderToken(uint,uint,uint,uint,uint,)",,False
"getIndexToken(uint,uint)",,False
"updateOrderStatus(uint,)",,False
resetOrderIdTo(uint),,False
"addCustomField(uint,bytes32,bytes32)",,False
"getCustomField(uint,bytes32)",,False
constructor(address),permissionProvider,False
"addTokenDetails(uint,,,,)","orders, orders, orders, orders, orders, orders, orders, orderTokenAmounts",False
"addOrderBasicFields(uint,address,uint,uint,bytes32)",orders,False
getIndexOrder1(uint),orders,False
getIndexOrder2(uint),orders,False
"getIndexToken(uint,uint)",orders,False
"getOrderTokenCompletedAmount(uint,address)",orders,False
"updateIndexOrderToken(uint,uint,uint,uint,uint,)","orders, orders, orders, orders",False
"addCustomField(uint,bytes32,bytes32)","olympusStorageExtended, dataKind",False
"getCustomField(uint,bytes32)","olympusStorageExtended, dataKind",False
"updateOrderStatus(uint,)",orders,False
resetOrderIdTo(uint),"orderId, orderId",False
"setProvider(uint8,address)",olympusStorageExtended,False
getStrategyCount(),,False
getStrategyTokenCount(uint),,False
"getStrategyTokenByIndex(uint,uint)",,False
getStrategy(uint),,False
"createStrategy(string,string,string,,,bytes32)",,False
"updateStrategy(uint,string,string,string,,,bytes32)",,False
"incrementStatistics(uint,uint)",,False
"updateFollower(uint,bool)",,False
isAllowed(address),,False
OlympusLabsCore(address),permissionProvider,False
function()payablepublic{revert();}(),,False
getStrategyCount(),strategyProvider,False
getStrategy(uint),"strategyProvider, name, description, strategyProvider, strategyProvider",False
"getStrategyTokenAndWeightByIndex(uint,uint)","strategyProvider, strategyProvider",False
"getPrice(address,uint)",priceProvider,False
"getStrategyTokenPrice(uint,uint)","strategyProvider, strategyProvider",False
"setProvider(uint8,address)","strategyProvider, exchangeProvider, priceProvider, olympusStorage, whitelistProvider",False
"buyIndex(uint,address,bool)","minimumInWei, maximumInWei, maximumInWei, strategyProvider, strategyProvider, olympusStorage, exchangeProvider, exchangeProvider, priceProvider, exchangeProvider, olympusStorage, exchangeProvider, strategyProvider, strategyProvider",True
resetOrderIdTo(uint),olympusStorage,False
getIndexOrder(uint),"olympusStorage, olympusStorage, olympusStorage",False
"updateIndexOrderToken(uint,address,uint,uint,uint)","olympusStorage, olympusStorage",False
"updateOrderStatus(uint,)",olympusStorage,False
"getSubOrderStatus(uint,address)",exchangeProvider,False
adjustFee(uint),"DENOMINATOR, feePercentage",False
adjustMOTFeeDiscount(uint),MOTDiscount,False
"adjustTradeRange(uint,uint)","minimumInWei, maximumInWei",False
"withdrawERC20(address,address)",,True
withdrawETH(address),,True
