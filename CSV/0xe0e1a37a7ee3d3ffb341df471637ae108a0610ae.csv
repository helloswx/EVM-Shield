Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),owner,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
mint(),,False
coinAge(),,False
annualInterest(),,False
GameGoldToken(),"chainStartTime, chainStartBlockNumber, totalSupply, saleSupply, tokenPrice, alreadySold, owner, totalSupply, owner, totalSupply, maxMintProofOfStake, saleIsGoing",False
updateSaleStatus(),"saleIsGoing, saleIsGoing",False
setPrice(uint),tokenPrice,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
withdraw(uint),owner,True
ownerMint(uint),"totalSupply, owner, totalSupply, totalSupply, owner, owner, owner",False
mint(),"totalSupply, totalSupply",True
getBlockNumber(),chainStartBlockNumber,False
coinAge(),,True
annualInterest(),maxMintProofOfStake,False
ownerSetStakeStartTime(uint),"stakeStartTime, chainStartTime, stakeStartTime",False
ownerBurnToken(uint),"totalSupply, totalSupply",True
"batchTransfer(,)",,True
"function()publiconlyIfSaleIsGoingpayable{require(msg.value>=tokenPrice);uinttokenAmount=(msg.value/tokenPrice)*10**decimals;require(alreadySold.add(tokenAmount)<=saleSupply);balances[owner]=balances[owner].sub(tokenAmount);balances[msg.sender]=balances[msg.sender].add(tokenAmount);alreadySold=alreadySold.add(tokenAmount);Transfer(owner,msg.sender,tokenAmount);}()","tokenPrice, tokenPrice, alreadySold, saleSupply, owner, owner, alreadySold, alreadySold, owner",True
