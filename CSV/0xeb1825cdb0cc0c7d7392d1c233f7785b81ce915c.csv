Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
burn(uint256),,True
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
crowdsaleTargetReached(),crowdsaleTargetBRA,False
crowdsaleStarted(),first_period_start_date,False
crowdsaleFinished(),crowdsale_end_timestamp,False
amountOfParticipants(),allParticipants,False
amountOfBRAsold(),,False
"transfer(address,uint256)",participantToBRAbought,True
"transferFrom(address,address,uint256)",participantToBRAbought,True
BRANDCOIN(),decimals,False
distributeInitialFunds(),"distributedInitialFunds, distributedInitialFunds, founderWallet, earlyBackersWallet, teamWallet, bountyAffiliateWallet, reserveWallet",True
destroyUnsoldTokens(),,False
function()payableexternal{buyTokens();}(),,False
buyTokens(),"decimals, ETH_per_BRA, first_period_start_date, first_period_start_date, second_period_start_date, first_period_bonus_minimum_purchased_BRA, first_period_bonus_percentage, second_period_start_date, third_period_start_date, second_period_bonus_percentage, third_period_start_date, fourth_period_start_date, third_period_bonus_percentage, fourth_period_start_date, fifth_period_start_date, fourth_period_bonus_percentage, fifth_period_start_date, crowdsale_end_timestamp, fifth_period_bonus_percentage, participantToEtherSpent, allParticipants, participantToBRAbought, participantToEtherSpent",True
refund(),,True
"refundMany(uint256,uint256)","allParticipants, allParticipants",False
"distributeCrowdsaleTokens(address,uint256)",,True
ownerWithdrawETH(),owner,True
setPrice(uint256),ETH_per_BRA,False
