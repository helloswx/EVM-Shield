Function Name,State Variables Modified,Can Transfer Ether
OwnableOZ(),"m_owner, m_changeable",True
setImmutableOwnership(address),"m_changeable, m_owner, m_owner, m_changeable",False
"attachContracts(address,address,address,address,address)",,False
setCategoriesCreator(address),,False
"createCategory(string,string,uint256)",,False
"createWorkerPool(string,uint256,uint256,uint256)",,False
"createApp(string,uint256,string)",,False
"createDataset(string,uint256,string)",,False
"buyForWorkOrder(uint256,address,address,address,string,address,address)",,False
isWoidRegistred(address),,False
claimFailedConsensus(address),,False
"finalizeWorkOrder(address,string,string,string)",,False
getCategoryWorkClockTimeRef(uint256),,False
existingCategory(uint256),,False
getCategory(uint256),,False
getWorkerStatus(address),,False
getWorkerScore(address),,False
registerToPool(address),,False
unregisterFromPool(address),,False
evictWorker(address),,False
"lockForOrder(address,uint256)",,False
"unlockForOrder(address,uint256)",,False
"lockForWork(address,address,uint256)",,False
"unlockForWork(address,address,uint256)",,False
"rewardForWork(address,address,uint256,bool)",,False
"seizeForWork(address,address,uint256,bool)",,False
deposit(uint256),,False
withdraw(uint256),,False
checkBalance(address),,False
IexecHubAccessor(address),iexecHubInterface,False
"createMarketOrder(,uint256,uint256,uint256,address,uint256)",,False
closeMarketOrder(uint256),,False
getMarketOrderValue(uint256),,False
getMarketOrderWorkerpoolOwner(uint256),,False
getMarketOrderCategory(uint256),,False
getMarketOrderTrust(uint256),,False
getMarketOrder(uint256),,False
MarketplaceAccessor(address),"marketplaceAddress, marketplaceInterface",False
"WorkOrder(uint256,address,address,address,address,uint256,string,address,address)","m_iexecHubAddress, m_status, m_marketorderIdx, m_app, m_dataset, m_workerpool, m_requester, m_emitcost, m_params, m_callback, m_beneficiary",True
startRevealingPhase(),"m_workerpool, m_status, m_status",True
reActivate(),"m_workerpool, m_status, m_status",True
claim(),"m_status, m_status, m_status",False
"setResult(string,string,string)","m_status, m_status, m_stdout, m_stderr, m_uri, m_resultCallbackProof",False
"App(address,string,uint256,string)","m_appName, m_appPrice, m_appParams",True
AppHub(),,False
isAppRegistered(address),,False
getAppsCount(address),,False
"getApp(address,uint256)",,False
getAppByIndex(uint256),,False
"createApp(string,uint256,string)",,True
"Dataset(address,string,uint256,string)","m_datasetName, m_datasetPrice, m_datasetParams",True
DatasetHub(),,False
isDatasetRegistred(address),,False
getDatasetsCount(address),,False
"getDataset(address,uint256)",,False
getDatasetByIndex(uint256),,False
"createDataset(string,uint256,string)",,True
WorkerPoolHub(),,False
isWorkerPoolRegistered(address),,False
getWorkerPoolsCount(address),,False
"getWorkerPool(address,uint256)",,False
getWorkerPoolByIndex(uint256),,False
getWorkerAffectation(address),,False
"createWorkerPool(string,uint256,uint256,uint256,address)",,True
"registerWorkerAffectation(address,address)",,False
"unregisterWorkerAffectation(address,address)",,False
IexecHub(),m_categoriesCreator,True
"attachContracts(address,address,address,address,address)","rlc, rlc, marketplace, workerPoolHub, appHub, datasetHub",False
setCategoriesCreator(address),m_categoriesCreator,False
"createCategory(string,string,uint256)","m_categoriesCount, m_categoriesCount, m_categories, m_categoriesCount, m_categoriesCount, m_categoriesCount, m_categoriesCount",False
"createWorkerPool(string,uint256,uint256,uint256)","workerPoolHub, marketplace",False
"createApp(string,uint256,string)",appHub,False
"createDataset(string,uint256,string)",datasetHub,False
"buyForWorkOrder(uint256,address,address,address,string,address,address)","marketplace, m_woidRegistered",True
isWoidRegistred(address),m_woidRegistered,False
claimFailedConsensus(address),"marketplace, marketplace",True
"finalizeWorkOrder(address,string,string,string)","marketplace, marketplace, m_accounts, STAKE_BONUS_RATIO, STAKE_BONUS_MIN_THRESHOLD",True
getCategoryWorkClockTimeRef(uint256),m_categories,False
existingCategory(uint256),m_categories,False
getCategory(uint256),"m_categories, m_categories, m_categories, m_categories",False
getWorkerStatus(address),"workerPoolHub, m_scores",False
getWorkerScore(address),m_scores,False
registerToPool(address),"workerPoolHub, m_accounts, m_scores, workerPoolHub",True
unregisterFromPool(address),,True
evictWorker(address),,True
"lockForOrder(address,uint256)",,False
"unlockForOrder(address,uint256)",,False
"lockForWork(address,address,uint256)",,True
"unlockForWork(address,address,uint256)",,True
"rewardForWork(address,address,uint256,bool)","m_contributionHistory, m_contributionHistory, m_scores, m_scores",True
"seizeForWork(address,address,uint256,bool)","m_contributionHistory, m_contributionHistory, m_scores, m_scores, m_scores, SCORE_UNITARY_SLASH",True
deposit(uint256),"rlc, m_accounts, m_accounts",True
withdraw(uint256),"m_accounts, m_accounts, rlc",True
checkBalance(address),"m_accounts, m_accounts",False
"workOrderCallback(address,string,string,string)",,False
"WorkerPool(address,string,uint256,uint256,uint256,address)","m_description, m_stakeRatioPolicy, m_schedulerRewardRatioPolicy, m_subscriptionLockStakePolicy, m_subscriptionMinimumStakePolicy, m_subscriptionMinimumScorePolicy, m_workerPoolHubAddress",True
"changeWorkerPoolPolicy(uint256,uint256,uint256,uint256)","m_stakeRatioPolicy, m_schedulerRewardRatioPolicy, m_subscriptionMinimumStakePolicy, m_subscriptionMinimumScorePolicy, m_stakeRatioPolicy, m_schedulerRewardRatioPolicy, m_subscriptionMinimumStakePolicy, m_subscriptionMinimumScorePolicy",False
getWorkerAddress(uint),m_workers,False
getWorkerIndex(address),"m_workerIndex, m_workers",False
getWorkersCount(),m_workers,False
subscribeToPool(),"iexecHubInterface, m_workers, m_workerIndex",True
unsubscribeFromPool(),iexecHubInterface,True
evictWorker(address),iexecHubInterface,False
getConsensusDetails(address),m_consensus,False
getContributorsCount(address),m_consensus,False
"getContributor(address,uint256)",m_consensus,False
"existingContribution(address,address)",m_contributions,False
"getContribution(address,address)",m_contributions,False
"emitWorkOrder(address,uint256)","marketplaceInterface, iexecHubInterface, CONSENSUS_DURATION_RATIO, m_consensus, marketplaceInterface, marketplaceInterface, m_stakeRatioPolicy, m_schedulerRewardRatioPolicy",False
claimFailedConsensus(address),"m_consensus, m_contributions, iexecHubInterface",False
"allowWorkersToContribute(address,,address)",,False
"allowWorkerToContribute(address,address,address)","iexecHubInterface, m_contributions, m_consensus, iexecHubInterface",False
"contribute(address,bytes32,bytes32,uint8,bytes32,bytes32)","iexecHubInterface, m_consensus, m_contributions, iexecHubInterface, iexecHubInterface",True
"revealConsensus(address,bytes32)","iexecHubInterface, m_consensus, m_contributions, m_contributions, iexecHubInterface, marketplaceInterface, REVEAL_PERIOD_DURATION_RATIO",False
"reveal(address,bytes32)","iexecHubInterface, m_consensus, m_contributions",True
reopen(address),"iexecHubInterface, m_consensus, m_contributions, m_contributions",False
"finalizeWork(address,string,string,string)","iexecHubInterface, m_consensus, iexecHubInterface",False
Marketplace(address),,False
"createMarketOrder(,uint256,uint256,uint256,address,uint256)","iexecHubInterface, m_orderCount, m_orderCount, m_orderBook, m_orderCount, iexecHubInterface, ASK_STAKE_RATIO, m_orderCount, m_orderCount",True
closeMarketOrder(uint256),"m_orderBook, iexecHubInterface, ASK_STAKE_RATIO",True
"consumeMarketOrderAsk(uint256,address,address)","m_orderBook, iexecHubInterface",False
existingMarketOrder(uint256),m_orderBook,False
getMarketOrderValue(uint256),m_orderBook,False
getMarketOrderWorkerpoolOwner(uint256),m_orderBook,False
getMarketOrderCategory(uint256),m_orderBook,False
getMarketOrderTrust(uint256),m_orderBook,False
getMarketOrder(uint256),m_orderBook,False
isCallbackDone(address),,True
"workOrderCallback(address,string,string,string)",iexecHubInterface,True
