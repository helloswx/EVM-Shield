Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint,bytes)",,False
"tokenFallback(address,uint,bytes)",,False
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
constructor(),adminAddress,True
setAdminAddress(address),"owner, adminAddress",False
setOperatorAddress(address),"owner, operatorAddress",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
burn(uint256),,True
constructor(),"initialSupply, initialSupply, initialSupply",True
"transferFrom(address,address,uint256)",,True
"transfer(address,uint256)",,True
"transfer(address,uint,bytes)",,True
"transferAnyERC20Token(address,uint)",owner,True
finalize(),"finalized, finalized",False
pause(),paused,False
unpause(),paused,False
"constructor(,address)","TOKENS_PER_KETHER, wallet, finalized, publicSaleStarted, tokensPerKEther, TOKENS_PER_KETHER, tokenContract",False
initialize(),"totalTokensSold, totalPresaleBase, totalPresaleBonus, tokenContract, TOKENS_SALE",False
changeWallet(address),"tokenContract, wallet, wallet",False
currentTime(),,False
updateWhitelist(address),whitelist,False
setTokensPerKEther(uint256),tokensPerKEther,False
function()externalpayablewhenNotPausedonlyDuringSale{buyTokens();}(),,False
buyTokens(),"CONTRIBUTION_MIN, CONTRIBUTION_MAX, totalTokensSold, TOKENS_SALE, whitelist, CONTRIBUTION_MAX_NO_WHITELIST, TOKENS_SALE, totalTokensSold, tokensPerKEther, PURCHASE_DIVIDER, bonusIncreasePercentage, PURCHASE_DIVIDER, tokensPerKEther, totalTokensSold, totalTokensSold, tokenContract, weiRaised, weiRaised, wallet, totalTokensSold, totalTokensSold, TOKENS_SALE",True
reclaimTokens(uint256),"tokenContract, tokenContract, tokenContract",True
changeBonusIncreasePercentage(uint256),"bonusIncreasePercentage, bonusIncreasePercentage",False
finalize(),,False
startPublicSale(),publicSaleStarted,False
