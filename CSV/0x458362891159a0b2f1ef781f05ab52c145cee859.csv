Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
constructor(),owner,True
transferOwnership(address),"owner, owner",False
reclaimToken(),owner,True
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
setTokenAddress(address),,False
buyToken(),,False
withdraw(uint256),,False
"withdrawTo(address,uint256)",,False
"updateDividendBalance(uint256,address,uint256)",,False
"transferTokens(address,address,uint256)",,False
shareDividends(),,False
getDividendBalance(address),,False
constructor(address),dividend,False
function()public{}(),,False
"mint(address,uint256)","maxTotalSupply, dividend",False
"transfer(address,uint256)",dividend,True
ln(uint256),,False
constructor(uint256),"m_presaleFinished, owner, m_maxTotalSupply, m_tokenDiscountThreshold",True
function()externalpayable{buyTokens(msg.sender);}(),,True
setTokenAddress(address),m_token,False
setTokenDiscountThreshold(uint256),m_tokenDiscountThreshold,False
"mintPresale(uint256,address)","m_token, m_token",False
finishPresale(),m_presaleFinished,False
buyToken(),,True
withdraw(uint256),"m_dividendBalances, m_dividendBalances",True
"withdrawTo(address,uint256)","m_dividendBalances, m_dividendBalances",True
"updateDividendBalance(uint256,address,uint256)","m_totalTokens, m_totalTokens, m_totalTokens, m_userHistories, m_userHistories",False
"transferTokens(address,address,uint256)","m_userHistories, m_userHistories, m_userHistories, m_userHistories",False
shareDividends(),"m_sharedDividendBalance, m_sharedDividendBalance, m_D_n, m_D_n, rounding, m_totalTokens, m_D_n",False
getDividendBalance(address),m_dividendBalances,False
getDividendAmount(address),"m_userHistories, m_D_n, rounding",False
buyTokens(address),"m_token, m_sharedDividendBalance, m_sharedDividendBalance, m_D_n, m_D_n, rounding, m_totalTokens, m_dividendBalances, m_dividendBalances, m_token, m_D_n",False
"calculateTokensFrom(uint256,uint256)",m_tokenPrice,False
priceFor(uint256),m_tokenPrice,False
"priceWithDiscount(uint256,uint256)","rounding, m_tokenPrice, rounding",False
tokensAmountFrom(uint256),m_tokenPrice,False
