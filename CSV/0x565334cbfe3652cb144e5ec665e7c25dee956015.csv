Function Name,State Variables Modified,Can Transfer Ether
"supply(address,uint256)",,False
"withdraw(address,uint256)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
balanceOf(address),,False
constructor(),owner,True
transferOwnership(address),owner,False
constructor(),owner,True
save(),,False
"cashOut(uint256,address)",,True
"changePay(address,uint,uint,string)","salaryId, salaryId, payroll, payroll, payroll",False
removePay(address),"salaryId, salaryId, payroll, payroll, payroll, salaryId, payroll, salaryId, payroll, payroll, payroll",False
getAmountOwed(address),"salaryId, payroll, payroll",False
paySalary(address),"payroll, salaryId",True
"function()externalpayable{uinttotalToPay=0;uintpayrollLength=payroll.length;uint[]memorypayments=newuint[](payrollLength);uintamount;for(uinti=1;i<payrollLength-1;i++){amount=(now-payroll[i].lastPaid)*payroll[i].payRate;totalToPay+=amount;payments[i]=amount;}compound.withdraw(daiAddress,totalToPay);require(dai.balanceOf(address(this))<=totalToPay);for(uinti=1;i<payrollLength-1;i++){payroll[i].lastPaid=now;dai.transfer(payroll[i].recipient,payments[i]);emitMemberPaid(payroll[i].recipient,payments[i]);}save();msg.sender.transfer(msg.value);}()","payroll, payroll, payroll, payroll, payroll, payroll",True
