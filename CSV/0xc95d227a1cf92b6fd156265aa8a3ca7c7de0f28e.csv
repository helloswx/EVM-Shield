Function Name,State Variables Modified,Can Transfer Ether
minHouseStake(uint),,False
maxBalance(),,False
"isValidBet(uint8,uint,uint)",,False
"endGameConflict(uint8,uint,uint,int,uint,bytes32,bytes32)",,False
"serverForceGameEnd(uint8,uint,uint,int,uint,uint)",,False
"playerForceGameEnd(uint8,uint,uint,int,uint,uint)",,False
Ownable(),owner,True
setOwner(address),"owner, owner",False
ConflictResolutionManager(address),conflictRes,False
updateConflictResolution(address),"newConflictRes, updateTime",False
activateConflictResolution(),"newConflictRes, updateTime, updateTime, MIN_TIMEOUT, updateTime, MAX_TIMEOUT, conflictRes, newConflictRes, newConflictRes, updateTime, newConflictRes",False
pause(),"paused, timePaused",False
unpause(),"paused, timePaused",False
destroy(),owner,False
"GameChannelBase(address,uint,uint,address,address,uint)","gameIdCntr, serverAddress, houseAddress, lastProfitTransferTimestamp, minStake, maxStake, typeHash",False
withdraw(),"pendingReturns, pendingReturns",True
transferProfitToHouse(),"lastProfitTransferTimestamp, profitTransferTimeSpan, houseProfit, lastProfitTransferTimestamp, houseProfit, houseStake, houseProfit, lastProfitTransferTimestamp, houseStake, houseStake, houseAddress",True
setProfitTransferTimeSpan(uint),profitTransferTimeSpan,False
addHouseStake(),houseStake,False
withdrawHouseStake(uint),"conflictRes, activeGames, houseStake, houseStake, houseProfit, houseProfit, houseStake, houseStake, houseStake, owner",True
withdrawAll(),"houseProfit, houseStake, houseStake, owner",True
setHouseAddress(address),houseAddress,False
"setStakeRequirements(uint,uint)","minStake, maxStake, minStake, maxStake",False
"GameChannelConflict(address,uint,uint,address,address,uint)",,False
"serverEndGameConflict(uint32,uint8,uint16,uint,int,bytes32,bytes32,uint,address,bytes,address,bytes32,bytes32)",,False
"playerEndGameConflict(uint32,uint8,uint16,uint,int,bytes32,bytes32,uint,address,bytes,bytes32)",serverAddress,True
playerCancelActiveGame(uint),"playerGameId, gameIdGame",True
"serverCancelActiveGame(address,uint)","playerGameId, gameIdGame",True
"serverForceGameEnd(address,uint)","playerGameId, gameIdGame, conflictRes",False
playerForceGameEnd(uint),"playerGameId, gameIdGame, conflictRes",True
"GameChannel(address,uint,uint,address,address,uint)",,False
createGame(bytes32),"playerGameId, gameIdGame, gameIdCntr, playerGameId, gameIdGame, activeGames, activeGames",True
cancelGame(uint),"playerGameId, gameIdGame",True
"rejectGame(address,uint)","playerGameId, gameIdGame",False
"acceptGame(address,uint,bytes32)","playerGameId, gameIdGame",False
"serverEndGame(uint32,uint8,uint16,uint,int,bytes32,bytes32,uint,address,address,bytes)",,False
"playerEndGame(uint32,uint8,uint16,uint,int,bytes32,bytes32,uint,address,bytes)",serverAddress,True
