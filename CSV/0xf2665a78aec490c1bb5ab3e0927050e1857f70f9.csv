Function Name,State Variables Modified,Can Transfer Ether
ChefICO(),"softCap, hardCap, totalAmount, chefPrice, minimumInvestment, maximumInvestment, icoStart, icoEnd, chefOwner",True
balanceOf(address),balanceOf,False
chefBalanceOf(address),chefBalanceOf,False
"function()publicpayablebeforeICOdeadline{uint256amount=msg.value;require(!hardCapReached);require(amount>=minimumInvestment&&balanceOf[msg.sender]<maximumInvestment);if(hardCap<=totalAmount.add(amount)){hardCapReached=true;emitChefICOSucceed(chefOwner,hardCap);if(hardCap<totalAmount.add(amount)){uint256returnAmount=totalAmount.add(amount).sub(hardCap);msg.sender.transfer(returnAmount);emitChefICOTransfer(msg.sender,returnAmount,false);amount=amount.sub(returnAmount);}}if(maximumInvestment<balanceOf[msg.sender].add(amount)){uintoverMaxAmount=balanceOf[msg.sender].add(amount).sub(maximumInvestment);msg.sender.transfer(overMaxAmount);emitChefICOTransfer(msg.sender,overMaxAmount,false);amount=amount.sub(overMaxAmount);}totalAmount=totalAmount.add(amount);balanceOf[msg.sender]=balanceOf[msg.sender].add(amount);if(amount>=10ether){if(amount>=150ether){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(135).div(100));}elseif(amount>=70ether){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(130).div(100));}elseif(amount>=25ether){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(125).div(100));}else{chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(120).div(100));}}elseif(now<=icoStart.add(10days)){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(120).div(100));}elseif(now<=icoStart.add(20days)){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(115).div(100));}elseif(now<=icoStart.add(30days)){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(110).div(100));}elseif(now<=icoStart.add(40days)){chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice).mul(105).div(100));}else{chefBalanceOf[msg.sender]=chefBalanceOf[msg.sender].add(amount.div(chefPrice));}emitChefICOTransfer(msg.sender,amount,true);if(totalAmount>=softCap&&softCapReached==false){softCapReached=true;emitChefICOSucceed(chefOwner,totalAmount);}}()","hardCapReached, minimumInvestment, balanceOf, maximumInvestment, hardCap, totalAmount, hardCapReached, chefOwner, hardCap, hardCap, totalAmount, totalAmount, hardCap, maximumInvestment, balanceOf, balanceOf, maximumInvestment, totalAmount, totalAmount, balanceOf, balanceOf, chefBalanceOf, chefBalanceOf, chefPrice, chefBalanceOf, chefBalanceOf, chefPrice, chefBalanceOf, chefBalanceOf, chefPrice, chefBalanceOf, chefBalanceOf, chefPrice, icoStart, chefBalanceOf, chefBalanceOf, chefPrice, icoStart, chefBalanceOf, chefBalanceOf, chefPrice, icoStart, chefBalanceOf, chefBalanceOf, chefPrice, icoStart, chefBalanceOf, chefBalanceOf, chefPrice, chefBalanceOf, chefBalanceOf, chefPrice, totalAmount, softCap, softCapReached, softCapReached, chefOwner, totalAmount",True
safeWithdrawal(),"softCapReached, balanceOf, balanceOf",True
chefOwnerWithdrawal(),"icoEnd, softCapReached, hardCapReached, chefOwner, totalAmount, chefOwner, totalAmount",True
