Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
renounceOwnership(),"owner, owner",False
"onlyMultiOwnerType(uint,address)","multiOwnersTypes, owner",True
"addMultiOwnerType(uint,address)",multiOwnersTypes,False
"addMultiOwnerTypes(,address)",multiOwnersTypes,False
"removeMultiOwnerType(uint,address)",multiOwnersTypes,False
"getCurrentDayBonus(uint,bool)",,False
"_currentDay(uint,bool)",,False
getBonusData(),,False
getPreSaleBonusPercent(),,False
getMinReachUsdPayInCents(),,False
getUsdAbsRaisedInCents(),,False
getCoinRaisedBonusInWei(),,False
getCoinRaisedInWei(),,False
getUsdFromETH(uint),,False
getTokenFromETH(uint),,False
getCurrencyRate(string),,False
"addPay(string,uint,uint,uint,uint)",,False
checkTickerExists(string),,False
"getUsdFromCurrency(string,uint)",,False
"getUsdFromCurrency(string,uint,uint)",,False
"getUsdFromCurrency(bytes32,uint)",,False
"getUsdFromCurrency(bytes32,uint,uint)",,False
getTokenWeiFromUSD(uint),,False
"editPay(bytes32,uint,uint,uint,uint,uint)",,False
getCurrencyList(string),,False
getCurrencyList(bytes32),,False
getTotalUsdRaisedInCents(),,False
getAllCurrencyTicker(),,False
getCoinUSDRate(),,False
addPreSaleBonus(uint),,False
"editPreSaleBonus(uint,uint)",,False
"processPreSaleBonus(uint,uint,uint,uint)",,False
checkNeedProcessPreSaleBonus(uint),,False
"getCountNeedProcessPreSaleBonus(uint,uint,uint)",,False
"reCountUserPreSaleBonus(uint,uint,uint,uint)",,False
getContributorIndexes(uint),,False
checkNeedSendSHPC(bool),,False
"getCountNeedSendSHPC(uint,uint)",,False
checkETHRefund(bool),,False
"getCountETHRefund(uint,uint)",,False
"addPayment(address,string,uint,uint,uint,uint,uint,uint,uint)",,False
"addPayment(uint,string,uint,uint,uint,uint,uint,uint,uint)",,False
checkUserIdExists(uint),,False
getContributorAddressById(uint),,False
"editPaymentByUserId(uint,uint,uint,uint,uint,uint,uint,uint,uint)",,False
"getUserPaymentById(uint,uint)",,False
checkWalletExists(address),,False
checkReceivedCoins(address),,False
getContributorId(address),,False
getTotalCoin(address),,False
setReceivedCoin(uint),,False
checkPreSaleReceivedBonus(address),,False
checkRefund(address),,False
setRefund(uint),,False
getEthPaymentContributor(address),,False
"refundPaymentByUserId(uint,uint)",,False
changeSupportChangeMainWallet(bool),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
function()externalwhenNotPausedpayable{buyTokens(msg.sender);}(),,True
"init(address,address,address,address,address,uint,uint,uint,uint)","startSaleDate, coinContract, storageContract, currencyContract, bonusContract, multiSig1, multiSig2, startPreSaleDate, endPreSaleDate, startSaleDate, endSaleDate, unfreezeRefundPreSale, unfreezeRefundAll, ONE_DAY, state",False
pause(),paused,False
unpause(),paused,False
setMinimalContributionUSD(uint),"minimalContributionUSD, minimalContributionUSD, minimalContributionUSD",False
setUnfreezeRefund(uint),"startSaleDate, unfreezeRefundPreSale, unfreezeRefundAll, ONE_DAY",False
setStorageContract(address),"storageContract, storageContract, storageContract",False
setCoinContract(address),"coinContract, coinContract, coinContract",False
setCurrencyContract(address),"currencyContract, currencyContract, currencyContract",False
setBonusContract(address),"bonusContract, bonusContract",False
setMultisig(address),multiSig1,False
setSoftCap(uint),softCapUSD,False
changeMaxDistributeCoin(uint),"currencyContract, maxDistributeCoin",False
startPreSale(),"endPreSaleDate, state, state, state",False
startCalculatePreSaleBonus(),"state, state, state",False
startSale(),"endSaleDate, state, state, state",False
saleSetEnded(),"state, state, startSaleDate, state, storageContract, state",False
saleSetRefund(),"state, state, endSaleDate, state, state",False
buyTokens(address),"state, startPreSaleDate, endPreSaleDate, state, startSaleDate, endSaleDate, currencyContract, minimalContributionUSD, state, bonusContract, startSaleDate, state, currencyContract, storageContract, currencyContract",False
"addPay(string,uint,uint,uint,uint)","storageContract, currencyContract, currencyContract, state, bonusContract, startSaleDate, state, currencyContract, storageContract, currencyContract, storageContract",False
"editPay(uint,uint,uint,uint,uint)","storageContract, currencyContract, storageContract, storageContract",False
"refundPay(uint,uint)","storageContract, storageContract, currencyContract, storageContract",False
checkSoftCapAchieved(),"softCapAchieved, softCapUSD",False
activeSoftCapAchieved(),"maxDistributeCoin, softCapAchieved",False
getEther(),"softCapAchieved, multiSigReceivedSoftCap, state, multiSig1, multiSig2, multiSigReceivedSoftCap",True
calculateMaxCoinIssued(),"maxDistributeCoin, currencyContract",False
getCoinRaisedInWei(),currencyContract,False
getTotalUsdRaisedInCents(),currencyContract,False
getAllCurrencyTicker(),currencyContract,False
getCoinUSDRate(),currencyContract,False
getCoinBalance(),coinContract,False
getETHBalance(),,False
"processSetPreSaleBonus(uint,uint)","state, storageContract, currencyContract",False
reCountUserPreSaleBonus(uint),"state, state, startSaleDate, storageContract, currencyContract",False
getCoins(),,True
"sendSHPCtoContributors(uint,uint)","state, storageContract, storageContract, storageContract, storageContract, storageContract, storageContract, unfreezeRefundPreSale, storageContract, unfreezeRefundAll, coinContract, storageContract",True
setStartPreSaleDate(uint),"startPreSaleDate, startPreSaleDate",False
setEndPreSaleDate(uint),"endPreSaleDate, endPreSaleDate",False
setStartSaleDate(uint),"startSaleDate, startSaleDate",False
setEndSaleDate(uint),"endSaleDate, endSaleDate",False
getSHPCBack(),"state, coinContract",True
refundETH(),,True
"refundETHContributors(uint,uint)","state, storageContract, storageContract, storageContract, storageContract, storageContract, storageContract",True
getPreSaleBonusPercent(),bonusContract,False
getMinReachUsdPayInCents(),bonusContract,False
_currentDay(),"bonusContract, startSaleDate, state",False
getCurrentDayBonus(),"bonusContract, startSaleDate, state",False
