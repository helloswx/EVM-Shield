Function Name,State Variables Modified,Can Transfer Ether
name(),,False
symbol(),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
decimals(),,False
validate(),,False
"setBalance(address,uint256)",,False
"transfer(address,address,uint256)",,False
"approve(address,address,uint256)",,False
"transferWithAllowance(address,address,address,uint256)",,False
OptionToken(),owner,True
balanceOf(address),tokenHolders,False
totalSupply(),baseToken,False
"transfer(address,uint256)","expiration, tokenHolders",True
"approve(address,uint256)","expiration, tokenHolders",True
"transferFrom(address,address,uint256)","expiration, tokenHolders",True
"allowance(address,address)",tokenHolders,False
"init(,,string,string,uint256,uint256)","owner, baseToken, tokenHolders, baseToken, tokenHolders, name, symbol, expiration, strike, decimals, baseToken",True
issue(uint256),"expiration, balanceOf, baseToken, tokenHolders",True
"function()publicpayable{require(now<=expiration&&_initialized);uint256available=balanceOf(msg.sender);require(available>0);uint256tokens=msg.value/(strike);assert(tokens>0&&tokens<=msg.value);uint256change=0;uint256eth_to_transfer=0;if(tokens>available){tokens=available;}eth_to_transfer=tokens*strike;assert(eth_to_transfer>=tokens);change=msg.value-eth_to_transfer;assert(change<msg.value);if(!baseToken.transfer(msg.sender,tokens)){revert();}uint256new_balance=balanceOf(msg.sender)-tokens;tokenHolders.setBalance(msg.sender,new_balance);assert(balanceOf(msg.sender)<available);if(change>0){msg.sender.transfer(change);}if(eth_to_transfer>0){owner.transfer(eth_to_transfer);}Redeem(msg.sender,tokens,eth_to_transfer);}()","expiration, balanceOf, strike, strike, baseToken, balanceOf, tokenHolders, balanceOf, owner",True
withdraw(),"owner, expiration, baseToken, owner, baseToken, tokenHolders",True
