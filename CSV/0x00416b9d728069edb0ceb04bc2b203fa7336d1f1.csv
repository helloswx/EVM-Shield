Function Name,State Variables Modified,Can Transfer Ether
Owned(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
getAccountLimit(address),,False
getAccountActivity(address),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"function()noReentrancypayablepublic{require(msg.value!=0);require(crowdsaleState!=state.crowdsaleEnded);boolstateChanged=checkCrowdsaleState();if(crowdsaleState==state.priorityPass){if(priorityPassContract.getAccountActivity(msg.sender)){processTransaction(msg.sender,msg.value);}else{refundTransaction(stateChanged);}}elseif(crowdsaleState==state.openedPriorityPass){if(priorityPassContract.getAccountActivity(msg.sender)){processTransaction(msg.sender,msg.value);}else{refundTransaction(stateChanged);}}else{refundTransaction(stateChanged);}}()","crowdsaleState, crowdsaleState, crowdsaleState",True
calculateMaxContribution(address),"crowdsaleState, contributorList, maxP1Cap, ethRaised, maxP1Cap, ethRaised, maxCap, ethRaised",False
"salvageTokensFromContract(address,address,uint)",,True
withdrawEth(),"ethRaised, minCap, pendingEthWithdrawal",False
pullBalance(),"multisigAddress, pendingEthWithdrawal, multisigAddress, pendingEthWithdrawal, pendingEthWithdrawal",True
batchReturnEthIfFailed(uint),"crowdsaleEndedTime, ethRaised, minCap, contributorIndexes, contributorList",True
withdrawRemainingBalanceForManualRecovery(),"crowdsaleEndedTime, contributorIndexes, multisigAddress",True
setMultisigAddress(address),multisigAddress,False
setPriorityPassContract(address),,False
priorityPassContractAddress(),,False
"setCrowdsaleTimes(uint,uint,uint)","crowdsaleState, presaleStartTime, presaleUnlimitedStartTime, crowdsaleEndedTime",False
