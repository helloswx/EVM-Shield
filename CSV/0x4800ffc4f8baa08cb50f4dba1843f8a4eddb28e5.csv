Function Name,State Variables Modified,Can Transfer Ether
"generateCrabGene(bool,bool)",,False
"mutateCrabPart(uint256,uint256,uint256)",,False
generateCrabHeart(),,False
"createAddress(bytes32,address)",,False
"createAddresses(,)",,False
"updateAddress(bytes32,address)",,False
"updateAddresses(,)",,False
removeAddress(bytes32),,False
removeAddresses(),,False
readAddress(bytes32),,False
readAddresses(),,False
"createBool(bytes32,bool)",,False
"createBools(,)",,False
"updateBool(bytes32,bool)",,False
"updateBools(,)",,False
removeBool(bytes32),,False
removeBools(),,False
readBool(bytes32),,False
readBools(),,False
"createBytes32(bytes32,bytes32)",,False
"createBytes32s(,)",,False
"updateBytes32(bytes32,bytes32)",,False
"updateBytes32s(,)",,False
removeBytes32(bytes32),,False
removeBytes32s(),,False
readBytes32(bytes32),,False
readBytes32s(),,False
"createUint256(bytes32,uint256)",,False
"createUint256s(,)",,False
"updateUint256(bytes32,uint256)",,False
"updateUint256s(,)",,False
removeUint256(bytes32),,False
removeUint256s(),,False
readUint256(bytes32),,False
readUint256s(),,False
"createInt256(bytes32,int256)",,False
"createInt256s(,)",,False
"updateInt256(bytes32,int256)",,False
"updateInt256s(,)",,False
removeInt256(bytes32),,False
removeInt256s(),,False
readInt256(bytes32),,False
readInt256s(),,False
constructor(),"STORE_RBAC, RBAC_ROLE_ADMIN",True
"hasRole(uint256,address,uint256)",stores,False
"checkRole(uint256,address,uint256)",,False
"adminAddRole(uint256,address,uint256)",,False
"adminRemoveRole(uint256,address,uint256)",,False
applyAllPermission(address),"STORE_FUNCTIONS, FN_ROLE_CREATE, STORE_FUNCTIONS, FN_ROLE_UPDATE, STORE_FUNCTIONS, FN_ROLE_REMOVE",False
constructor(),"auctionItems, tradeRecords, bidHistory",False
getWithdrawalList(address),"withdrawalList, withdrawer",True
getTradeRecord(uint256),tradeRecords,False
totalTradeRecords(),tradeRecords,False
getPricesOfLatestTradeRecords(uint256),"tradeRecords, tradeRecords",False
getAuctionItem(uint256),auctionItems,False
getAuctionItems(),auctionItems,False
totalAuctionItems(),auctionItems,False
getBid(uint256),bidHistory,False
getBids(),bidHistory,False
"addTradeRecord(uint256,uint256,uint256,uint256,address,address)","tradeRecords, tradeRecords, auctionItems",False
"addAuctionItem(uint256,uint256,address,uint256)","auctionItems, auctionItems",False
"updateAuctionTime(uint256,uint256,uint256)",auctionItems,False
"addBidder(uint256,address,uint256,uint256)","bidHistory, bidHistory, auctionItems, bidHistory",False
"addWithdrawal(address,uint256,uint256,uint256)",withdrawalList,True
clearPendingWithdrawal(address),"withdrawalList, lastWithdrawnIndex, lastWithdrawnIndex",False
supportsInterface(bytes4),,False
constructor(),InterfaceId_ERC165,False
supportsInterface(bytes4),supportedInterfaces,False
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
"constructor(address,address,address)",,False
"setAddresses(address,address,address)",,False
"constructor(address,address,address)",,False
"constructor(address,address,address)",,False
getCrabsOfOwner(address),"cryptantCrabToken, cryptantCrabToken",False
getCrab(uint256),"cryptantCrabToken, cryptantCrabStorage",False
getCrabStats(uint256),"cryptantCrabToken, cryptantCrabStorage",False
"constructor(address,address,address,address)",,False
"setAddresses(address,address,address,address)",,False
getCryptantFragments(address),cryptantCrabStorage,True
"createCrab(uint256,uint256,uint256,uint256,bool)",,False
"constructor(address,address,address)",,False
getCryptantFragments(address),cryptantCrabStorage,True
"constructor(address,address,address)","NORMAL_FOSSIL_RELIC_PERCENTAGE, PIONEER_FOSSIL_RELIC_PERCENTAGE, LEGENDARY_FOSSIL_RELIC_PERCENTAGE, FOSSIL_ATTRIBUTE_COUNT, LEGENDARY_BONUS_COUNT, LAST_PIONEER_TOKEN_ID",False
"setPartIndex(uint256,)",legendaryPartIndex,False
getPartIndexes(uint256),legendaryPartIndex,False
getUint(bytes4),,False
"setUint(bytes4,uint256)",,False
"xenograft(uint256,uint256,uint256)","cryptantCrabToken, cryptantCrabToken, cryptantCrabStorage, crabPartMultiplier, crabPartMultiplier, crabPartMultiplier, FOSSIL_ATTRIBUTE_COUNT, NORMAL_FOSSIL_RELIC_PERCENTAGE, LAST_PIONEER_TOKEN_ID, PIONEER_FOSSIL_RELIC_PERCENTAGE, LEGENDARY_FOSSIL_RELIC_PERCENTAGE, cryptantCrabStorage",True
"mutate(uint256,uint256)","cryptantCrabToken, crabPartMultiplier, genesisCrab, cryptantCrabStorage, crabPartMultiplier, LEGENDARY_BONUS_COUNT, cryptantCrabStorage",True
generateBonusForGene(uint256),"legendaryPartIndex, LEGENDARY_BONUS_COUNT",False
setWithdrawer(address),withdrawer,False
withdraw(uint256),withdrawer,True
"constructor(address,address,address,address,address)","CURRENT_TOKEN_ID, MARKET_PRICE_UPDATE_PERIOD, REFERRAL_CUT, PURCHASE_PRIZE_POOL_CUT, EXCHANGE_PRIZE_POOL_CUT, EXCHANGE_DEVELOPER_CUT, marketItems",False
"setAddresses(address,address,address,address,address)",,False
setCurrentPrizePool(bytes4),currentPrizePool,False
getUint(bytes4),,False
"setUint(bytes4,uint256)",,False
"purchase(uint256,uint256,address)","CURRENT_TOKEN_ID, tradedPrices, CURRENT_TOKEN_ID, REFERRAL_CUT, PURCHASE_PRIZE_POOL_CUT, prizePool, currentPrizePool, LAST_TRANSACTION_PERIOD, MARKET_PRICE_UPDATE_PERIOD, LAST_TRANSACTION_PRICE",True
getCurrentPeriod(),MARKET_PRICE_UPDATE_PERIOD,False
getCurrentCrabPrice(),"LAST_TRANSACTION_PERIOD, LAST_TRANSACTION_PRICE, MARKET_PRICE_UPDATE_PERIOD, tradedPrices, tradedPrices, initialCrabTradingPrice",False
getCurrentCryptantFragmentPrice(),initialCryptantFragmentTradingPrice,False
totalCrabTraded(),tradedPrices,False
"sellCrab(uint256,uint256)","cryptantCrabToken, marketItems, cryptantCrabToken, marketItems",True
cancelOnSaleCrab(uint256),"marketItems, cryptantCrabToken",True
buyCrab(uint256),"marketItems, cryptantCrabToken, EXCHANGE_DEVELOPER_CUT, EXCHANGE_PRIZE_POOL_CUT, prizePool, currentPrizePool, cryptantCrabStorage, tradedPrices, LAST_TRANSACTION_PERIOD, MARKET_PRICE_UPDATE_PERIOD, LAST_TRANSACTION_PRICE",True
function()publicpayable{revert();}(),,False
constructor(),,False
function()external{}(),,False
reclaimEther(),owner,True
"checkRole(address,string)",roles,False
"hasRole(address,string)",roles,False
addAddressToWhitelist(address),ROLE_WHITELISTED,False
whitelist(address),ROLE_WHITELISTED,False
addAddressesToWhitelist(),,False
removeAddressFromWhitelist(address),ROLE_WHITELISTED,False
removeAddressesFromWhitelist(),,False
constructor(),,False
increasePrizePool(bytes4),,False
"addWinner(address,bytes4,uint256)",,False
claimPrize(bytes4),,True
"claimableAmount(address,bytes4)",,False
prizePoolTotal(bytes4),,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"setApprovalForAll(address,bool)",,False
"isApprovedForAll(address,address)",,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
totalSupply(),,False
"tokenOfOwnerByIndex(address,uint256)",,False
tokenByIndex(uint256),,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
constructor(),"InterfaceId_ERC721, InterfaceId_ERC721Exists",False
balanceOf(address),ownedTokensCount,False
ownerOf(uint256),"tokenOwner, owner, owner",False
exists(uint256),"tokenOwner, owner",False
"approve(address,uint256)","owner, owner, owner, tokenApprovals, owner",True
getApproved(uint256),tokenApprovals,False
"setApprovalForAll(address,bool)",operatorApprovals,True
"isApprovedForAll(address,address)",operatorApprovals,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,True
"onERC721Received(address,address,uint256,bytes)",,False
"constructor(string,string)","name_, symbol_, InterfaceId_ERC721Enumerable, InterfaceId_ERC721Metadata",False
name(),name_,False
symbol(),symbol_,False
tokenURI(uint256),tokenURIs,False
"tokenOfOwnerByIndex(address,uint256)",ownedTokens,False
totalSupply(),allTokens,False
tokenByIndex(uint256),allTokens,False
"constructor(string,string)",,False
tokenURI(uint256),"tokenURIs, defaultMetadataURI",False
"dataOfPart(uint256,uint256,uint256)","CRAB_BODY, CRAB_LEG, CRAB_LEFT_CLAW, CRAB_RIGHT_CLAW, crabPartData",False
"giftToken(address,address,uint256)",,False
"mintToken(address,uint256,uint256)",crabSpecialSkins,False
crabPartDataFromGene(uint256),,False
"setPartData(uint256,uint256,)","CRAB_BODY, CRAB_LEG, CRAB_LEFT_CLAW, CRAB_RIGHT_CLAW, crabPartData, crabPartData, crabPartData, crabPartData",False
setDefaultMetadataURI(string),defaultMetadataURI,False
"setTokenURI(uint256,string)",,False
specialSkinOfTokenId(uint256),crabSpecialSkins,False
