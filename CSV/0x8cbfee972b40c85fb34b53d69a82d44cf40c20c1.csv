Function Name,State Variables Modified,Can Transfer Ether
"function()externalpayable{require(JPContract.getState()&&msg.value>=0.05ether);JPContract.setInfo(msg.sender,msg.value.mul(90).div(100));DEEXFund.transfer(msg.value.mul(10).div(100));address(JPContract).transfer(msg.value.mul(90).div(100));}()","JPContract, JPContract, DEEXFund, JPContract",True
"constructor(address,address)","JPContract, JPContract, DEEXContract, DEEXContract",False
"constructor(address,address)","JPContract, JPContract, DEEXContract, DEEXContract",False
constructor(),currentDeadline,False
setDEEXAddress(address),"DEEXContract, DEEXContract",False
setDragonsAddress(address),"DragonsContract, DragonsContract",False
setHamstersAddress(address),"HamstersContract, HamstersContract",False
getNow(),,False
getState(),currentDeadline,False
"setInfo(address,uint256)","DragonsContract, HamstersContract, DragonsContract, depositHamsters, depositDragons, countOfDragons, totalSupplyOfDragons, totalSupplyOfDragons, depositDragons, depositDragons, HamstersContract, depositDragons, depositHamsters, countOfHamsters, totalSupplyOfHamsters, totalSupplyOfHamsters, depositHamsters, depositHamsters, lastHero, currentDeadline, lastDeadline, currentDeadline, currentDeadline, currentDeadline, lastDeadline, jackPot",True
calculateProbability(),"winner, totalDEEXSupplyOfHamsters, DEEXContract, HamstersContract, totalDEEXSupplyOfDragons, DEEXContract, DragonsContract, totalSupplyOfHamsters, totalSupplyOfDragons, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfDragons, totalDEEXSupplyOfDragons, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfDragons, totalDEEXSupplyOfDragons, totalDEEXSupplyOfHamsters, probabilityOfDragons, totalSupplyOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfHamsters, probabilityOfDragons, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfDragons, probabilityOfHamsters, totalSupplyOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfDragons, probabilityOfHamsters, totalDEEXSupplyOfHamsters, DEEXContract, HamstersContract, totalDEEXSupplyOfDragons, DEEXContract, DragonsContract",False
getWinners(),"winner, totalSupplyOfHamsters, totalSupplyOfDragons, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfHamsters, probabilityOfDragons, winner, probabilityOfDragons, winner",False
"function()externalpayable{if(msg.value==0&&!getState()&&winner>0){require(depositDragons[msg.sender]>0||depositHamsters[msg.sender]>0);uintpayout=0;uintpayoutDEEX=0;if(winner==1&&depositDragons[msg.sender]>0){payout=calculateETHPrize(msg.sender);}if(winner==2&&depositHamsters[msg.sender]>0){payout=calculateETHPrize(msg.sender);}if(payout>0){depositDragons[msg.sender]=0;depositHamsters[msg.sender]=0;msg.sender.transfer(payout);}if((winner==1&&depositDragons[msg.sender]==0)||(winner==2&&depositHamsters[msg.sender]==0)){payoutDEEX=calculateDEEXPrize(msg.sender);if(DEEXContract.balanceOf(address(HamstersContract))>0)DEEXContract.transferFrom(address(HamstersContract),address(this),DEEXContract.balanceOf(address(HamstersContract)));if(DEEXContract.balanceOf(address(DragonsContract))>0)DEEXContract.transferFrom(address(DragonsContract),address(this),DEEXContract.balanceOf(address(DragonsContract)));if(payoutDEEX>0){DEEXContract.transfer(msg.sender,payoutDEEX);}}if(msg.sender==lastHero){lastHeroHistory=lastHero;lastHero=address(0x0);msg.sender.transfer(jackPot);}}}()","winner, depositDragons, depositHamsters, winner, depositDragons, winner, depositHamsters, depositDragons, depositHamsters, winner, depositDragons, winner, depositHamsters, DEEXContract, HamstersContract, DEEXContract, HamstersContract, DEEXContract, HamstersContract, DEEXContract, DragonsContract, DEEXContract, DragonsContract, DEEXContract, DragonsContract, DEEXContract, lastHero, lastHeroHistory, lastHero, lastHero, jackPot",True
calculateETHPrize(address),"totalSupplyOfDragons, totalSupplyOfHamsters, totalSupply, depositDragons, totalSupply, depositDragons, totalSupplyOfDragons, depositHamsters, totalSupply, depositHamsters, totalSupplyOfHamsters",False
calculateDEEXPrize(address),"totalDEEXSupplyOfDragons, totalDEEXSupplyOfHamsters, totalDEEXSupplyOfDragons, totalDEEXSupplyOfHamsters, depositDragons, totalSupply, depositDragons, totalSupplyOfDragons, depositHamsters, totalSupply, depositHamsters, totalSupplyOfHamsters",False
"receiveApproval(address,uint256,address,bytes)",,False
"tokenFallback(address,uint256,bytes)",,False
constructor(),"owner, maxSalesAllowed, transfersBetweenSalesAllowed",True
"initContract(address,address,address)","contractInitialized, contractInitialized, priceSetter, totalSupply, balanceOf, balanceOf, balanceOf, isPreferredTokensAccount, balanceOf, balanceOf, isPreferredTokensAccount, balanceOf, balanceOf, isPreferredTokensAccount",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","owner, isPreferredTokensAccount, transfersBetweenSalesAllowed, salesCounter, maxSalesAllowed, owner, isPreferredTokensAccount, allowance, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
"approveAllAndCall(address,bytes)",balanceOf,True
"transferAndCall(address,uint256,bytes)",,True
"transferAllAndCall(address,bytes)",balanceOf,True
changeOwner(address),"owner, owner",False
"startSale(uint256,uint256)","balanceOf, salesCounter, maxSalesAllowed, saleStartUnixTime, saleEndUnixTime, saleStartUnixTime, saleEndUnixTime, salesCounter, salesCounter, salesCounter",False
saleIsRunning(),"balanceOf, saleStartUnixTime, saleEndUnixTime, saleStartUnixTime, saleEndUnixTime",False
saleIsFinished(),"balanceOf, saleStartUnixTime, saleEndUnixTime, saleEndUnixTime",False
changePriceSetter(address),priceSetter,False
"setMinMaxPriceInWei(uint256,uint256)","priceMinWei, priceMaxWei",False
setTokenPriceInWei(uint256),"priceMinWei, priceMinWei, tokenPriceInWei, priceMinWei, priceMaxWei, priceMaxWei, tokenPriceInWei, priceMaxWei, tokenPriceInWei, tokenPriceInWei",False
function()externalpayable{buyTokens();}(),,False
buyTokens(),"tokenPriceInWei, tokenPriceInWei, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, tokenPriceInWei",True
withdrawAllToOwner(),,True
addReferrer(bytes32),isReferrer,False
removeReferrer(bytes32),isReferrer,False
"setReferralBonuses(uint256,uint256)","referralBonus, referrerBonus",False
buyTokensWithReferrerAddress(address),"tokenPriceInWei, isReferrer, tokenPriceInWei, balanceOf, referrerLinkedSales, referrerLinkedSales, referralBonus, referrerBonus, balanceOf, balanceOf, balanceOf, balanceOf, referrerBalanceOf, referrerBalanceOf, tokenPriceInWei",True
getReferrerBonusTokens(),"referrerBalanceOf, balanceOf, balanceOf",True
