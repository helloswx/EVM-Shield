Function Name,State Variables Modified,Can Transfer Ether
Authorized(),authorized,True
"isAuthorized(address,bytes32)",authorized,False
"toggleAuthorization(address,bytes32)","authorized, authorized, authorized, authorized",True
Pausable(),,False
pause(),paused,False
unpause(),paused,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
recoverEther(),,True
recoverToken(address),"token, token",True
Freezable(),,False
isFrozen(address),frozenAccounts,False
freezeAccount(address),"frozenAccounts, frozenAccounts",False
unfreezeAccount(address),"frozenAccounts, frozenAccounts",False
numberAccounts(),accounts,False
returnAccounts(),accounts,False
balanceOf(uint256),"accounts, balances, accounts",False
setName(string),name,False
setSymbol(string),symbol,False
BasicTokenStorage(),,False
totalSupply(),totalsupply,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
"bulkTransfer(,)","balances, balances, balances, balances, balances, balances",True
balanceOf(address),balances,False
"transferFrom(address,address,uint256)","allowances, allowances, balances, balances, balances, balances",True
"approve(address,uint256)","allowances, allowances",True
"allowance(address,address)",allowances,False
"IntimateShoppe(uint256,uint256,uint256,address,address,uint256,uint8)","round, startTime, endTime, startTime, rate, minValue, capTokens, wallet_address, token_address, token, token_address",False
getContributors(),contributors,False
getContributionsForAddress(address),contributions,False
setRound(uint8),round,False
setMaxValue(uint256),"startTime, endTime, maxValue",False
setMinValue(uint256),"startTime, endTime, minValue",False
"setTimes(uint256,uint256)","startTime, endTime, startTime, endTime, startTime, startTime, endTime",False
setCap(uint256),"startTime, endTime, capTokens",False
setRate(uint256),rate,False
changeCompanyWallet(address),wallet_address,False
getHighWater(),highWater,False
setHighWater(uint256),highWater,False
function()payablepublic{require(msg.value>=minValue&&msg.value<=maxValue);backTokenOwner();}(),"minValue, maxValue",False
