Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
"transfer(address,uint)",,False
constructor(address),"price, refPercent, softCap, hardCap, startDate, bonusEnds50, bonusEnds30, bonusEnds20, bonusEnds10, bonusEnds5, endDate, beneficiary, owner, tokenReward",False
"function()payableexternal{require(!crowdsaleClosed);require(now>=startDate&&now<=endDate);uint256amount=msg.value;uint256buyTokens=msg.value.mul(price);uint256buyBonus=0;require(hardCap>=buyTokens.add(buyBonus));if(now<=bonusEnds50){buyBonus=msg.value.mul(price.mul(50).div(100));}elseif(now<=bonusEnds30){buyBonus=msg.value.mul(price.mul(30).div(100));}elseif(now<=bonusEnds20){buyBonus=msg.value.mul(price.mul(20).div(100));}elseif(now<=bonusEnds10){buyBonus=msg.value.mul(price.mul(10).div(100));}elseif(now<=bonusEnds5){buyBonus=msg.value.mul(price.mul(5).div(100));}addressreferrerAddr=msg.data.toAddress();uint256refTokens=msg.value.mul(price).mul(refPercent).div(100);if(referrerAddr.notZero()&&referrerAddr!=msg.sender&&hardCap<buyTokens.add(buyBonus).add(refTokens)){balanceOfEth[msg.sender]=balanceOfEth[msg.sender].add(amount);totalSalesEth=totalSalesEth.add(amount);totalSalesTokens=totalSalesTokens.add(buyTokens).add(buyBonus).add(refTokens);addTokensBonusRef(msg.sender,buyTokens,buyBonus,referrerAddr,refTokens);emitFundTransfer(msg.sender,amount,true);}else{balanceOfEth[msg.sender]=balanceOfEth[msg.sender].add(amount);totalSalesEth=totalSalesEth.add(amount);totalSalesTokens=totalSalesTokens.add(buyTokens).add(buyBonus);addTokensBonus(msg.sender,buyTokens,buyBonus);emitFundTransfer(msg.sender,amount,true);}}()","startDate, endDate, price, hardCap, buyTokens, bonusEnds50, price, bonusEnds30, price, bonusEnds20, price, bonusEnds10, price, bonusEnds5, price, price, refPercent, hardCap, buyTokens, refTokens, balanceOfEth, balanceOfEth, totalSalesEth, totalSalesEth, totalSalesTokens, totalSalesTokens, buyTokens, refTokens, buyTokens, refTokens, balanceOfEth, balanceOfEth, totalSalesEth, totalSalesEth, totalSalesTokens, totalSalesTokens, buyTokens, buyTokens",True
checkGoalReached(),"totalSalesTokens, softCap, beneficiary, totalSalesEth",False
safeWithdrawal(),"balanceOfEth, balanceOfEth, balanceOfEth, beneficiary, beneficiary",True
setRefPer(uint8),refPercent,False
sendAllTokensToOwner(uint256),"tokenReward, owner",True
