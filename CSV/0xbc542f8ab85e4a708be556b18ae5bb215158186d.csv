Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
balanceOf(address),,False
"transfer(address,uint)",,False
"transfer(address,uint,bytes)",,False
"tokenFallback(address,uint,bytes)",,False
"transfer(address,uint,bytes)",,True
"transfer(address,uint)",,True
balanceOf(address),,False
constructor(),"ICOSupply, DonscoinOwnerSupply",False
addToWhitelist(address),whitelist,False
addManyToWhitelist(),whitelist,False
removeFromWhitelist(address),whitelist,False
constructor(),"Inverstors, DonscoinOwner, Inverstors, DonscoinOwner, StartTime, Inverstors, DonscoinOwner, DonscoinOwnerSupply, Inverstors, DonscoinOwner, InverstorList, InvestorNum, DonscoinOwner, InvestorNum, InvestorNum",False
"function()payablepublicisWhitelisted(msg.sender)whenNotPausedbeforeDeadlineafterStartTimesaleNotClosednonReentrant{require(msg.value>=MinInvestMent);uintamount=msg.value;uintCurrentTime=now;addressRequestAddress=msg.sender;uintrate;uintCurrentInvestMent=Inverstors[RequestAddress].EthAmount;Inverstors[RequestAddress].EthAmount=CurrentInvestMent.add(amount);Inverstors[RequestAddress].LockupTime=StartTime.add(Month*9);Inverstors[RequestAddress].DskTokenWithdraw=false;TotalAmountETH=TotalAmountETH.add(amount);if(CurrentTime<PrivateSaleEndTime){rate=Private_rate;}elseif(CurrentTime<PreSaleEndTime){rate=Pre_rate;}else{rate=Public;}uintNumDskToken=amount.mul(rate);ICOSupply=ICOSupply.sub(NumDskToken);if(ICOSupply>0){Inverstors[RequestAddress].DskTokenAmount=Inverstors[RequestAddress].DskTokenAmount.add(NumDskToken);SaleAmountDSK=SaleAmountDSK.add(NumDskToken);CheckHardCap();CheckSoftCap();InverstorList[InvestorNum]=RequestAddress;InvestorNum++;emitSuccessInvestor(msg.sender,msg.value);}else{revert();}}()","MinInvestMent, Inverstors, Inverstors, Inverstors, StartTime, Inverstors, TotalAmountETH, TotalAmountETH, PrivateSaleEndTime, Private_rate, PreSaleEndTime, Pre_rate, Public, ICOSupply, ICOSupply, ICOSupply, Inverstors, Inverstors, SaleAmountDSK, SaleAmountDSK, InverstorList, InvestorNum, InvestorNum",True
safeWithdrawal(),"SoftCapReached, Inverstors, Inverstors, RefundAmount, RefundAmount",True
transferEthToOwner(uint256),"SoftCapReached, owner",True
burn(uint256),"ICOSupply, ICOSupply, ICOSupply, totalSupply, totalSupply",True
DskToOwner(),"Inverstors, Inverstors, ICOSupply, ICOSupply, ICOSupply, ICOSupply",True
DskTokenToInvestors(),"SoftCapReached, InvestorNum, Inverstors, InverstorList, InverstorList, Inverstors, Inverstors, Inverstors, Inverstors",False
DskTokenToCore(),"SoftCapReached, Inverstors, InverstorList, InverstorList, Inverstors, Inverstors, Inverstors, Inverstors",False
