Function Name,State Variables Modified,Can Transfer Ether
becomeSnailmaster(),"EGGS_TO_HATCH_1SHRIMP, initialized, ceoAddress, snailmasterReq, claimedEggs, snailmasterReq, snailmasterReq, ceoAddress",True
hatchEggs(address),"initialized, referrals, referrals, referrals, EGGS_TO_HATCH_1SHRIMP, hatcheryShrimp, hatcheryShrimp, claimedEggs, lastHatch, marketEggs, marketEggs, claimedEggs, referrals, claimedEggs, referrals, marketEggs, marketEggs",True
sellEggs(),"initialized, hatcheryShrimp, hatcheryShrimp, claimedEggs, lastHatch, marketEggs, marketEggs, ceoAddress, owner",True
buyEggs(),"initialized, ceoAddress, owner, claimedEggs, claimedEggs",True
"calculateTrade(uint256,uint256,uint256)",,False
calculateEggSell(uint256),marketEggs,False
"calculateEggBuy(uint256,uint256)",marketEggs,False
calculateEggBuySimple(uint256),,False
devFee(uint256),,False
devFee2(uint256),,False
seedMarket(uint256),"marketEggs, initialized, marketEggs",False
getFreeShrimp(),"initialized, ceoAddress, hatcheryShrimp, lastHatch, hatcheryShrimp, STARTING_SHRIMP",True
getBalance(),,False
getMyShrimp(),hatcheryShrimp,True
getSnailmasterReq(),snailmasterReq,False
getMyEggs(),claimedEggs,True
updateEggs(),"claimedEggs, snailmasterReq",True
SpiderFarm(),"ceoAddress, owner",True
getEggsSinceLastHatch(address),"EGGS_TO_HATCH_1SHRIMP, lastHatch, hatcheryShrimp",False
tmp(),,False
callThisToStart(),owner,True
callThisToStop(),owner,True
