Function Name,State Variables Modified,Can Transfer Ether
requiredSignatures(),,False
requiredDevSignatures(),,False
adminCount(),,False
devCount(),,False
adminName(address),,False
isAdmin(address),,False
isDev(address),,False
"receivePlayerInfo(uint256,address,bytes32,uint256)",,False
"receivePlayerNameList(uint256,bytes32)",,False
getPlayerID(address),,False
getPlayerName(uint256),,False
getPlayerLAff(uint256),,False
getPlayerAddr(uint256),,False
getNameFee(),,False
"registerNameXIDFromDapp(address,bytes32,uint256,bool)",,False
"registerNameXaddrFromDapp(address,bytes32,address,bool)",,False
"registerNameXnameFromDapp(address,bytes32,bytes32,bool)",,False
isDev(address),,False
deleteAnyProposal(bytes32),msData,False
checkData(bytes32),"msData, msData",False
"checkSignersByName(bytes32,uint256,uint256,uint256)","msData, msData, msData",False
constructor(),Jekyll_Island_Inc,True
function()publicpayable{Jekyll_Island_Inc.transfer(address(this).balance);}(),Jekyll_Island_Inc,True
"addAdmin(address,bytes32,bool)","msData, msData",False
removeAdmin(address),"msData, msData",False
changeRequiredSignatures(uint256),"msData, msData",False
changeRequiredDevSignatures(uint256),"msData, msData",False
requiredSignatures(),,False
requiredDevSignatures(),,False
adminCount(),,False
devCount(),,False
adminName(address),,False
isAdmin(address),,False
isDev(address),,False
deleteAnyProposal(bytes32),msData,False
checkData(bytes32),"msData, msData",False
"checkSignersByAddress(bytes32,uint256,uint256,uint256)","msData, msData, msData",False
"checkSignersByName(bytes32,uint256,uint256,uint256)","teamJust, msData, teamJust, msData, teamJust, msData",False
setTeam(address),"owner, teamJust, teamJust",True
constructor(),"owner, plyr_, plyr_, plyr_, pIDxAddr_, pIDxName_, plyrNames_, plyrNameList_, pID_, Jekyll_Island_Inc",True
checkIfNameValid(string),pIDxName_,False
"registerNameXID(string,uint256,bool)","registrationFee_, pIDxAddr_, plyr_, plyr_",True
"registerNameXaddr(string,address,bool)","registrationFee_, pIDxAddr_, pIDxAddr_, plyr_, plyr_",True
"registerNameXname(string,bytes32,bool)","registrationFee_, pIDxAddr_, pIDxName_, plyr_, plyr_",True
addMeToGame(uint256),"gID_, pIDxAddr_, plyr_, games_, plyr_, plyr_, games_, plyrNameList_",True
addMeToAllGames(),"pIDxAddr_, plyr_, plyr_, plyr_, gID_, games_, games_, plyrNameList_",True
useMyOldName(string),"pIDxAddr_, plyrNames_, plyr_",True
getPlayerID(address),pIDxAddr_,False
getPlayerName(uint256),plyr_,False
getPlayerLAff(uint256),plyr_,False
getPlayerAddr(uint256),plyr_,False
getNameFee(),registrationFee_,False
"registerNameXIDFromDapp(address,bytes32,uint256,bool)","registrationFee_, pIDxAddr_, plyr_, plyr_",False
"registerNameXaddrFromDapp(address,bytes32,address,bool)","registrationFee_, pIDxAddr_, pIDxAddr_, plyr_, plyr_",False
"registerNameXnameFromDapp(address,bytes32,bytes32,bool)","registrationFee_, pIDxAddr_, pIDxName_, plyr_, plyr_",False
"addGame(address,bytes32)","gameIDs_, gID_, gameIDs_, gID_, gameNames_, games_, gID_",False
setRegistrationFee(uint256),registrationFee_,False
isDev(address),teamJust,False
