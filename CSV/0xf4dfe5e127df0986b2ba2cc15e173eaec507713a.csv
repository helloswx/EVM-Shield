Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
ownerOf(uint256),,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
EthWuxia(),"owner, admins, owner, lotteryGiveHunt",True
setOwner(address),owner,False
getOwner(),owner,False
setItemRegistry(address),itemRegistry,False
addAdmin(address),admins,False
removeAdmin(address),admins,False
disableLotteryGiveHunt(),lotteryGiveHunt,False
enableLotteryGiveHunt(),lotteryGiveHunt,False
"createNewMartial(uint,uint,uint)","listedMartials, unitRareGrowth, initialMartialTimes, unitEpicGrowth, initialMartialTimes, unitMythGrowth, initialMartialTimes, listedMartials",False
"createNewCardType(uint,uint,uint,uint)","listedMartials, listedMartials, listedCardType, listedCardType, listedCardType",False
userHasSmartSpeed(address),mapUserHasSmartSpeed,False
getCurrentSmartSpeedPrice(),currentSmartSpeedNumber,False
buySmartSpeed(),"currentSmartSpeedNumber, mapUserHasSmartSpeed, currentSmartSpeedNumber, mapUserHasSmartSpeed, totalEarning, totalEarning, totalEarning, totalEarning, totalTrading, totalTrading, smartSpeedEarning, smartSpeedEarning",True
userHasLuckyStone(address),mapUserHasLuckyStone,False
getCurrentLuckyStonePrice(),currentLuckyStoneNumber,False
buyLuckyStone(),"currentLuckyStoneNumber, mapUserHasLuckyStone, currentLuckyStoneNumber, mapUserHasLuckyStone, totalEarning, totalEarning, totalEarning, totalEarning, totalTrading, totalTrading, luckyStoneEarning, luckyStoneEarning",True
"createEtherMonster(uint,uint,uint)","listedMartials, listedEtherMonster, listedEtherMonster",False
userHasHunterLicence(address),mapUserHasHunterLicence,False
getCurrentHunterLicencePrice(),currentHunterNumber,False
buyHunterLicence(),"currentHunterNumber, currentHunterNumber, mapUserHasHunterLicence, currentHunterNumber, mapUserHasHunterLicence, totalEarning, totalEarning, totalEarning, totalEarning, totalTrading, totalTrading, hunterLicenceEarning, hunterLicenceEarning",True
getUserCurrentMartialId(),mapUserCurrentMartialId,True
getMartialInfo(uint),"listedMartials, listedMartials",False
getMartialListInfo(),"listedMartials, listedMartials, listedMartials, listedMartials, mapUserPower, mapMartialUserCount",False
getMartialOwner(),"listedMartials, listedMartials, listedMartials",False
getMartialNumber(),listedMartials,False
getTravelPrice(uint),,True
changeMartial(uint),"listedMartials, mapUserLotteryNumber, mapMartialUserCount, mapUserCurrentMartialId, mapMartialUserCount, mapUserCurrentMartialId, mapMartialUserCount, mapUserCurrentMartialId, mapMartialUserCount, mapUserCurrentMartialId, totalEarning, totalEarning, totalEarning, totalEarning, travelTotalEarning, travelTotalEarning",True
debug(),"mapUserLastFreeLotteryTimestamp, freeLotterySeconds, freeLotterySeconds",True
getNowTimestamp(),,False
getMyLastFreeLotteryTimestamp(),mapUserLastFreeLotteryTimestamp,True
canLotteryFree(),,True
getMartialCardTypeIdList(uint),"listedMartials, listedMartials",False
getCardTypeInfo(uint),"listedCardType, listedCardType",False
"getCardPower(uint,uint)","listedCardType, listedCardType",False
getUserPower(address),mapUserPower,False
lottery(),"lotteryPrice, totalLotteryNumber, totalLotteryNumber, mapUserLastFreeLotteryTimestamp, lotteryPrice, mapUserCurrentMartialId, listedMartials, listedMartials, listedMartials, listedCardType, listedMartials, produceUnitSeconds, listedMartials, unitEpicGrowth, listedMartials, unitRareGrowth, listedMartials, unitMythGrowth, listedMartials, listedMartials, produceUnitSeconds, listedMartials, mapUserHasLuckyStone, listedMartials, listedMartials, listedMartials, listedMartials, listedMartials, listedMartials, listedCard, mapOwnerOfCard, listedCard, mapUserLotteryNumber, totalUserNumber, totalUserNumber, mapMartialUserCount, mapUserCurrentMartialId, mapUserLotteryNumber, lotteryGiveHunt, mapUserLotteryNumber, lotteryGiveHuntMinimalNumber, mapUserHasHunterLicence, mapUserHasHunterLicence, mapMartialLotteryCount, mapUserCurrentMartialId, mapUserPower, mapUserPower, mapUserPower, maxUserPower, maxUserPower, mapUserPower, maxPowerUserAddress, listedCard, totalEarning, totalEarning, totalEarning, totalEarning, totalTrading, totalTrading, lotteryTotalEarning, lotteryTotalEarning",True
getCardNumber(),listedCard,False
getCardInfo(uint),"listedCard, listedCard",False
getGameStats(),"totalUserNumber, totalBuyCardNumber, totalLotteryNumber, totalEarning, totalTrading, wuxiaMaster",False
"mergeCard(uint,uint)","listedCard, listedCard, listedCard, listedCard, listedCard, listedCard, listedCard, listedCard, listedCard, mapOwnerOfCard, mapOwnerOfCard, listedCard, listedCard, listedCard, mapOwnerOfCard, mapOwnerOfCard, listedCard, listedCard, mapOwnerOfCard, listedCard, listedCard, mapUserPower, mapUserPower, listedCard, listedCard, listedCard, listedCard, mapUserPower, maxUserPower, maxUserPower, mapUserPower, maxPowerUserAddress",True
beatMartialOwner(),"mapUserCurrentMartialId, listedMartials, mapUesrAlreadyMartialOwner, listedMartials, mapUesrAlreadyMartialOwner, mapUesrAlreadyMartialOwner, mapUserPower, mapUserPower, listedMartials, mapUesrAlreadyMartialOwner, mapUesrAlreadyMartialOwner",True
currentWulinMasterPrice(),wuxiaMasterPrice,False
buyWuxiaMaster(),"wuxiaMasterPrice, wuxiaMaster, wuxiaMaster, wuxiaMasterPrice, wuxiaMasterPrice, masterTotalEarning, masterTotalEarning, wuxiaMasterPrice, totalTrading, totalTrading, wuxiaMasterPrice, wuxiaMaster, wuxiaMasterPrice, wuxiaMasterPrice",True
"sellCard(uint,uint)","listedCard, totalSellCardNumber, totalSellCardNumber, mapOwnerOfCard, listedCard, listedCard, listedCard",True
cancelSell(uint),"listedCard, mapOwnerOfCard, listedCard, listedCard",True
buyCard(uint),"mapOwnerOfCard, mapOwnerOfCard, listedCard, listedCard, totalBuyCardNumber, totalBuyCardNumber, wuxiaMaster, wuxiaMaster, wuxiaMasterPrice, wuxiaMasterPrice, wuxiaMasterPrice, wuxiaMasterPrice, mapOwnerOfCard, listedCard, listedCard, listedCard, mapUserPower, mapOwnerOfCard, mapUserPower, mapOwnerOfCard, mapUserPower, mapUserPower, mapOwnerOfCard, listedCard, totalEarning, totalEarning, totalEarning, totalEarning, totalTrading, totalTrading, marketTotalEarning, marketTotalEarning",True
getCurrentDragonGirlLotteryNumber(),dragonGirlLotteryNumber,False
buyLittleDragonGirlLottery(),"dragonGirlLotteryPrice, listedCardType, totalDragonLotteryNumber, totalDragonLotteryNumber, listedDragonGirlLotteryUser, dragonGirlLotteryNumber, dragonGirlLotteryNumber, dragonGirlLotteryNumber, dragonGirlLotteryNumber, listedDragonGirlLotteryUser, mapOwnerOfCard, listedCard, listedCard, listedCard, mapUserPower, mapUserPower, dragonGirlLotteryNumber",True
getEtherMonsterNumber(),listedEtherMonster,False
getCanAttackMonsterIds(),"listedEtherMonster, listedEtherMonster, listedEtherMonster",False
getOnSellCardIds(),"listedCard, listedCard, listedCard",False
getEtherMonsterInfo(uint),"listedEtherMonster, listedEtherMonster",False
attackMonster(uint),"listedEtherMonster, listedEtherMonster, mapUserLastAttackMonsterTimestamp, userAttackMonsterCDSeconds, listedEtherMonster, mapUserHasHunterLicence, mapUserCurrentMartialId, listedEtherMonster, listedEtherMonster, listedEtherMonster, mapUserLastAttackMonsterTimestamp, mapUserPower, listedEtherMonster, listedEtherMonster, mapUserPower, listedEtherMonster, listedEtherMonster, listedEtherMonster, mapUserPower",True
setNickname(bytes32),mapUserNickname,True
getAddressNickname(address),mapUserNickname,False
listedMartialsLength(),listedMartials,False
initMartial(),"hasInitMartial, hasInitMartial",False
initCard1(),"hasInitCard1, hasInitCard1",False
initCard2(),"hasInitCard2, hasInitCard2",False
withdrawAll(),,True
withdrawAmount(uint256),,True
name(),,False
symbol(),,False
totalSupply(),listedCard,False
balanceOf(address),"listedCard, listedCard",False
ownerOf(uint256),mapOwnerOfCard,False
tokensOf(address),"listedCard, listedCard",False
tokenExists(uint256),mapOwnerOfCard,False
approvedFor(uint256),approvedOfItem,False
"approve(address,uint256)","approvedOfItem, approvedOfItem, approvedOfItem",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
isAdmin(address),admins,False
"itemsForSaleLimit(uint256,uint256)",,False
ownerOf(uint256),,False
priceOf(uint256),,False
