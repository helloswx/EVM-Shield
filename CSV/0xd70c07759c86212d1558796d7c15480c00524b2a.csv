Function Name,State Variables Modified,Can Transfer Ether
owner(),,False
addressOf(bytes32),,False
constructor(address),registry,False
getOwner(),registry,False
getRegistry(),registry,False
constructor(address),,False
getAdmin(),,False
lastCreatedGame(),,False
getCollector(),,False
constructor(address),,False
getMonarchyFactory(),,False
issueDividend(),,False
profitsSendable(),,False
constructor(address),,False
getTreasury(),,False
constructor(uint),,False
getDailyLimit(),vars,False
getDailyLimitUsed(),"vars, vars",False
getDailyLimitRemaining(),"vars, vars",False
constructor(address),owner,False
"add(address,uint)","entries, entries, entries, entries, entries, total",False
"subtract(address,uint)","entries, total, entries, entries, entries, total",False
size(),"entries, entries",False
balanceOf(address),entries,False
balances(),"entries, entries, entries",False
constructor(address),owner,False
add(address),"entries, entries, entries",False
remove(address),"entries, entries, entries, entries",False
size(),"entries, entries",False
has(address),entries,False
addresses(),"entries, entries",False
constructor(address),"ledger, whitelist",False
addToWhitelist(address),whitelist,True
removeFromWhitelist(address),whitelist,True
function()publicpayable{}(),,False
addBankroll(),"whitelist, whitelist, ledger, bankroll, ledger, bankroll",True
"removeBankroll(uint,string)","ledger, bankroll, ledger, bankroll",True
sendProfits(),profitsSent,True
getCollateral(),,False
getWhitelistOwner(),,False
profits(),bankroll,False
profitsTotal(),profitsSent,False
bankrollAvailable(),bankroll,False
bankrolledBy(address),ledger,False
bankrollerTable(),ledger,False
sendPrize(uint),,False
sendFees(),,False
prize(),,False
numOverthrows(),,False
fees(),,False
monarch(),,False
isEnded(),,False
isPaid(),,False
constructor(address),,False
setDailyLimit(uint),,True
"editDefinedGame(uint,string,uint,uint,int,uint,uint)","numDefinedGames, numDefinedGames, numDefinedGames, definedGames, definedGames, definedGames, definedGames, definedGames, definedGames",False
"enableDefinedGame(uint,bool)","numDefinedGames, definedGames",False
function()publicpayable{totalFees+=msg.value;}(),totalFees,False
startDefinedGame(uint),"definedGames, numDefinedGames, definedGames",True
startDefinedGameManually(uint),definedGames,True
refreshGames(),"numDefinedGames, definedGames, totalPrizes, totalOverthrows, definedGames, endedGames",True
getCollateral(),,False
getWhitelistOwner(),,False
numEndedGames(),endedGames,False
numActiveGames(),"numDefinedGames, definedGames",False
getNumEndableGames(),"numDefinedGames, definedGames",False
getFirstStartableIndex(),numDefinedGames,False
getAvailableFees(),"numDefinedGames, definedGames, definedGames",False
recentlyEndedGames(uint),"endedGames, endedGames",False
getGame(uint),definedGames,False
getIsEnabled(uint),definedGames,False
getInitialPrize(uint),definedGames,False
getIsStartable(uint),"definedGames, numDefinedGames",False
