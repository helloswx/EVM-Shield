Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner",True
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
balanceOf(address),balances,False
"transferFrom(address,address,uint256)","balances, allowed, balances, balances, balances, balances, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"SparkERC20(uint256,string,uint8,string,bool,bool)","standard, locked, totalSupply, balances, totalSupply, balances, totalSupply, name, symbol, decimals, creationBlock",True
"transfer(address,uint256)",locked,True
"approve(address,uint256)",locked,False
"increaseApproval(address,uint)",locked,False
"decreaseApproval(address,uint)",locked,False
"transferFrom(address,address,uint256)",locked,True
"MintingERC20(uint256,uint256,string,uint8,string,bool,bool)","standard, minters, maxSupply",True
addMinter(address),minters,False
removeMinter(address),minters,False
"mint(address,uint256)","totalSupply, maxSupply, totalSupply, totalSupply, balances, balances",False
"Spark(string,uint8,string,uint256,bool)",standard,False
setICO(address),ico,False
setSparkDividends(address),dividends,False
setLocked(bool),locked,False
"mint(address,uint256)","owner, ico, ico, ico, dividends, dividends",True
freezing(bool),"ico, ico, ico, transferFrozen",True
"transfer(address,uint)","transferFrozen, dividends, dividends, dividends",True
"transferFrom(address,address,uint)","transferFrozen, dividends, dividends, dividends",True
WhiteList(),whitelist,True
addToWhitelist(address),whitelist,False
removeFromWhitelist(address),whitelist,False
"SparkDividends(address,address,address)","spark, ico, treasuryAddress",False
setSpark(address),spark,False
setICO(address),ico,False
setTreasuryAddress(address),treasuryAddress,False
transferEthers(),owner,True
"logAccount(address,uint256)",ico,False
setEtherAmount(),"ico, funds, funds, funds, funds",False
claim(),treasuryAddress,True
"calculateAmount(address,uint256,uint256)","accounts, accounts, accounts, funds, funds, accounts, accounts, accounts, accounts, accounts, accounts, accounts, spark, spark",False
Multivest(address),allowedMultivests,False
setAllowedMultivest(address),allowedMultivests,False
unsetAllowedMultivest(address),allowedMultivests,False
"multivestBuy(address,uint256)",,False
"multivestBuy(address,uint8,bytes32,bytes32)",,True
"SellableToken(address,address,address,address,uint256,uint256)","spark, etherHolder, tokensHolder, startTime, endTime",False
setSpark(address),spark,False
setEtherHolder(address),etherHolder,False
setTokenHolder(address),tokensHolder,False
transferEthers(),etherHolder,True
isActive(),"soldTokens, spark",False
withinPeriod(),"startTime, endTime",False
"ICO(address,address,address,address,uint256,uint256,uint256)","price, bonuses, spark, bonuses, spark, bonuses, spark",False
"function()publicpayableonlyWhitelisted{require(buy(msg.sender,msg.value)==true);}()",,True
allocateUnsoldTokens(),"startTime, spark, soldTokens, spark, tokensHolder, soldTokens, spark",False
calculateTokensAmount(uint256),"spark, price",False
calculateEthersAmount(uint256),"price, spark",False
