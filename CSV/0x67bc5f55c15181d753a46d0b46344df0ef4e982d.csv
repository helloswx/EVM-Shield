Function Name,State Variables Modified,Can Transfer Ether
"safeAdd(uint,uint)",,False
"safeSub(uint,uint)",,False
"safeMul(uint,uint)",,False
"safeDiv(uint,uint)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"getExpectedRate(,,uint)",,False
"trade(,uint,,address,uint,uint,address)",,False
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
constructor(),"symbol, name, decimals, _totalSupply, owner, _totalSupply, kyber, knc, dai, ieth, owner, _totalSupply",False
totalSupply(),_totalSupply,False
balanceOf(address),,False
"transfer(address,uint)","knc, dai, _totalSupply, _totalSupply",True
"approve(address,uint)",,True
"transferFrom(address,address,uint)",,True
"allowance(address,address)",,False
"function()publicpayable{require(msg.value>0);(uintkncExpectedPrice,)=kyber.getExpectedRate(ieth,knc,msg.value);(uintdaiExpectedPrice,)=kyber.getExpectedRate(ieth,dai,msg.value);uinttmp=safeAdd(kncExpectedPrice,daiExpectedPrice);uintkncCost=safeDiv(safeMul(daiExpectedPrice,msg.value),tmp);uintdaiCost=safeDiv(safeMul(kncExpectedPrice,msg.value),tmp);uintkncCount=kyber.trade.value(kncCost)(ieth,kncCost,knc,address(this),2**256-1,1,0);uintdaiCount=kyber.trade.value(daiCost)(ieth,daiCost,dai,address(this),2**256-1,1,0);uinttotalCount=0;if(kncCount<daiCount){totalCount=kncCount;}else{totalCount=daiCount;}require(totalCount>0);balances[msg.sender]=safeAdd(balances[msg.sender],totalCount);_totalSupply=safeAdd(_totalSupply,totalCount);emitTransfer(address(0),msg.sender,totalCount);}()","kyber, ieth, knc, kyber, ieth, dai, kyber, ieth, knc, kyber, ieth, dai, _totalSupply, _totalSupply",True
getExpectedRate(uint),"kyber, ieth, knc, kyber, ieth, dai",False
"transferAnyERC20Token(address,uint)",owner,True
withdrawETH(uint),owner,True
depositETH(),,False
