Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),,False
acceptOwnership(),"owner, owner",False
"constructor(string,string,uint8)","name, symbol, decimals",False
setCrowdsale(address),"crowdsale, crowdsale",False
"transfer(address,uint)",mintable,True
"transferFrom(address,address,uint)",mintable,True
"multiTransfer(,)",,True
balanceOf(address),,False
"approve_fixed(address,uint,uint)",,True
"approve(address,uint)",,True
"allowance(address,address)",,False
"mint(address,uint)","owner, crowdsale, mintable, totalSupply, totalSupply",True
"multimint(,)","owner, crowdsale",True
deactivateMint(),"mintable, mintable",False
unMint(address),"mintable, owner, crowdsale, totalSupply, totalSupply",True
"constructor(address,address,address)","token, prices, timestamps, owner, updater, beneficiaries, beneficiaries",False
"function()payablepublic{require(active);require(!hardCapReached);contributions[msg.sender]+=msg.value;contributionsUSD[msg.sender]+=msg.value*ETHUSD/10**(uint(18));uintamount=calculateTokens(msg.value);totalETH+=msg.value;totalUSD+=msg.value*ETHUSD/10**(uint(18));token.mint(msg.sender,amount);if(totalUSD>=softCap){softCapReached=true;}if(totalUSD>=hardCap){active=false;hardCapReached=true;}}()","active, hardCapReached, ETHUSD, totalETH, totalUSD, ETHUSD, token, totalUSD, softCap, softCapReached, totalUSD, hardCap, active, hardCapReached",True
calculateTokens(uint),ETHUSD,False
currentPrice(),"prices, timestamps, prices, prices, prices",False
updatePrice(uint),"updater, ETHUSD",True
activate(),"timestamps, timestamps, active, active",False
deactivate(),"active, active",False
returnEther(address),"totalETH, totalUSD, token",True
withdrawContributed(),"softCapReached, beneficiaries, beneficiaries",True
