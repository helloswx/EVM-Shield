Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
transferOwnership(address),,True
getCurrentPeriod(),,False
settle(),,False
"constructor(string,)","thorMutualToken, thorMutualContract",False
"function()externalpayable{require(msg.value>=0.001ether);require(address(thorMutualContract)!=address(0));address(thorMutualContract).transfer(msg.value);uintactualPeriod=0;uintactualPeriodWeek=0;actualPeriod=thorMutualContract.getCurrentPeriod();actualPeriodWeek=actualPeriod/WEEKLY_PERIOD;if(participantAmount[msg.sender]==0){participants.push(msg.sender);}if(participantAmountOfDailyPeriod[actualPeriod][msg.sender]==0){participantsDaily[actualPeriod].push(msg.sender);}if(participantAmountOfWeeklyPeriod[actualPeriodWeek][msg.sender]==0){participantsWeekly[actualPeriodWeek].push(msg.sender);}participantAmountOfDailyPeriod[actualPeriod][msg.sender]+=msg.value;participantAmount[msg.sender]+=msg.value;participantAmountOfWeeklyPeriod[actualPeriodWeek][msg.sender]+=msg.value;amountOfDailyPeriod[actualPeriod]+=msg.value;amountOfWeeklyPeriod[actualPeriodWeek]+=msg.value;participantsHistoryTime[msg.sender].push(block.timestamp);participantsHistoryPeriod[msg.sender].push(actualPeriod);participantsHistoryAmount[msg.sender].push(msg.value);emitThorDepositToken(msg.sender,msg.value);}()","thorMutualContract, thorMutualContract, thorMutualContract",True
setThorMutualContract(),thorMutualContract,False
getThorMutualContract(),thorMutualContract,False
setThorMutualToken(string),thorMutualToken,False
getDepositDailyAmountofPeriod(uint),,False
getDepositWeeklyAmountofPeriod(uint),,False
getParticipantsDaily(uint),,False
getParticipantsWeekly(uint),,False
"getParticipantAmountDailyPeriod(uint,address)",,False
"getParticipantAmountWeeklyPeriod(uint,address)",,False
getParticipantHistory(address),,False
getSelfBalance(),,False
"withdraw(address,uint)",,True
getParticipantsDaily(uint),,False
getParticipantsWeekly(uint),,False
getDepositDailyAmountofPeriod(uint),,False
getDepositWeeklyAmountofPeriod(uint),,False
"getParticipantAmountDailyPeriod(uint,address)",,False
"getParticipantAmountWeeklyPeriod(uint,address)",,False
getMaxDailyDrawdown(uint),,False
getMaxWeeklyDrawdown(uint),,False
"settleWeekly(address,uint)",,False
constructor(),thorMutual,False
"function()externalpayable{emitDepositToken(msg.sender,msg.value);}()",,True
"setThorMutualParms(uint,uint,uint,uint)","distributeRatioOfDaily, distributeRatioOfWeekly, distributeRatioOfPlatform, ratioWeekly",False
getThorMutualParms(),"distributeRatioOfDaily, distributeRatioOfWeekly, distributeRatioOfPlatform, ratioWeekly",False
"setThorMutualTokenContracts(,uint)",,False
getCurrentPeriod(),periodUpdateIndex,False
settle(),"thorMutualTokenPrice, initialFlag, initialFlag, periodUpdateIndex, periodUpdateIndex",True
getDailyWinnerTokenInfo(uint),periodUpdateIndex,False
getWeeklyWinnerTokenInfo(uint),periodUpdateIndex,False
"getDailyAndWeeklyWinnerInfo(uint,address)",periodUpdateIndex,False
setThorMutualTokenPrice(),thorMutualTokenPrice,False
setRewardAddressOfPlatfrom(address),rewardAddressOfPlatfrom,False
setThorMutualWeeklyReward(address),thorMutualWeeklyReward,False
getSelfBalance(),,False
"withdraw(address,uint)",,True
constructor(),"thorMutualWeeklyReward, thorMutual",False
function()externalpayable{emitThorMutualWeeklyRewardDeposit(msg.value);}(),,False
"settleWeekly(address,uint)",thorMutual,True
setThorMutualContract(address),thorMutual,False
getSelfBalance(),,False
"withdraw(address,uint)",,True
constructor(),"thorMutualTokenPrice, thorMutualContract",False
getTokensIncluded(),tokensIncluded,False
"addTokensAndPrices(,,uint)","thorMutualContract, tokensIncluded",False
"setTokensPrice(,,bool)","thorMutualContract, tokensIncluded",False
settle(),"thorMutualContract, thorMutualContract",False
"getTokenPriceOfPeriod(address,uint)",,False
setThorMutualContract(),thorMutualContract,False
getMaxDailyDrawdown(uint),,False
getMaxWeeklyDrawdown(uint),,False
getDailyAndWeeklyPriceDrawdownInfo(uint),tokensIncluded,False
"withdraw(address,uint)",,True
