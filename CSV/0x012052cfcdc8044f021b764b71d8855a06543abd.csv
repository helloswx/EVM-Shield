Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
constructor(),"roundId, timeInADay, timeInAWeek, roundEndTime, timeInAWeek, startOfNewDay, timeInADay, stakeMultiplier, totalStake",False
"function()externalpayable{require(msg.value>=10000000000000000&&msg.value<1000000000000000000000,""0.01 ETH minimum."");if(now>roundEndTime){startNewRound();}uintstakeBought=msg.value.mul(stakeMultiplier);stakeBought=stakeBought.div(1000);playerDivsInADay[roundId][day].playerStakeAtDay[msg.sender]+=stakeBought;leadAddress=msg.sender;totalStake+=stakeBought;addTime(stakeBought);emitInvestReceipt(msg.sender,stakeBought);}()","roundEndTime, stakeMultiplier, playerDivsInADay, roundId, day, leadAddress, totalStake",True
buyStakeWithEth(address),"playerDivsInADay, roundId, day, roundEndTime, stakeMultiplier, playerDivsInADay, roundId, day, leadAddress, totalStake",True
addMessage(string),playerMessage,True
getMessage(address),playerMessage,False
addName(string),playerName,True
getName(address),playerName,False
getPlayerCurrentRoundDivs(address),"day, playerDivsInADay, roundId, playerDivsInADay, roundId, playerDivsInADay, roundId",False
getPlayerPreviousRoundDivs(address),"roundId, roundIdToDays, playerDivsInADay, playerDivsInADay, playerDivsInADay",False
getPlayerTotalDivs(address),,False
getPlayerCurrentStake(address),"day, playerDivsInADay, roundId",False
reinvestDivs(uint),"spentDivs, spentDivs, roundEndTime, playerDivsInADay, roundId, day, leadAddress, totalStake",True
withdrawDivs(uint),"spentDivs, spentDivs",True
reinvestDivsWithContract(address),"reinvestmentContractAddress, spentDivs, spentDivs, roundEndTime, playerDivsInADay, roundId, day, leadAddress, totalStake",True
withdrawDivsWithContract(address),"withdrawalContractAddress, spentDivs, spentDivs",True
returnTimeLeft(),roundEndTime,False
returnDayTimeLeft(),startOfNewDay,False
returnSeedAtRound(uint),seed,False
returnjackpot(),"totalStake, seed, roundId, totalStake",False
"returnEarningsAtDay(uint256,uint256,address)",playerDivsInADay,False
"setWithdrawalAndReinvestmentContracts(address,address)","withdrawalContractAddress, reinvestmentContractAddress",False
constructor(address),"etherStakeAddress, owner",True
"function()externalpayable{require(msg.value>=10000000000000000,""0.01 ETH Fee"");EtherStakeinstanceEtherStake=EtherStake(etherStakeAddress);instanceEtherStake.withdrawDivsWithContract(msg.sender);}()",etherStakeAddress,True
collectFees(),owner,True
