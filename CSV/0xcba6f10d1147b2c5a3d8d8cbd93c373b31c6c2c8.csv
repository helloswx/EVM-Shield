Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),owner,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
VuePayTokenSale(),"totalSupply, INITIAL_VUP_TOKEN_SUPPLY, preSaleStartBlock, preSaleEndBlock, preSaleStartBlock, icoEndBlock, preSaleEndBlock, executor, saleHasEnded, minCapReached, allowRefund, ADVISORY_TEAM_PORTION, totalETHRaised, totalVUP",True
"function()payablepublic{require(msg.value>=.05ether);require(!saleHasEnded);require(block.number>=preSaleStartBlock);require(block.number<icoEndBlock);if(block.number>preSaleEndBlock){preSaleEnded=true;}require(msg.value!=0);uint256newEtherBalance=totalETHRaised.add(msg.value);getCurrentVUPRate();uint256amountOfVUP=msg.value.mul(curTokenRate);totalVUP=totalVUP.add(amountOfVUP);require(totalVUP<=PRESALE_ICO_PORTION);uint256totalSupplySafe=totalSupply.sub(amountOfVUP);uint256balanceSafe=balances[msg.sender].add(amountOfVUP);uint256contributedSafe=ETHContributed[msg.sender].add(msg.value);totalSupply=totalSupplySafe;balances[msg.sender]=balanceSafe;totalETHRaised=newEtherBalance;ETHContributed[msg.sender]=contributedSafe;CreatedVUP(msg.sender,amountOfVUP);}()","saleHasEnded, preSaleStartBlock, icoEndBlock, preSaleEndBlock, preSaleEnded, totalETHRaised, totalVUP, totalVUP, totalVUP, PRESALE_ICO_PORTION, totalSupply, ETHContributed, totalSupply, totalETHRaised, ETHContributed",True
"createCustomVUP(address,uint256)","totalVUP, totalVUP",False
endICO(),"saleHasEnded, minCapReached, saleHasEnded, CORE_TEAM_PORTION, DEV_TEAM_PORTION, CO_FOUNDER_PORTION, UDF_PORTION, devVUPDestination, advisoryVUPDestination, udfVUPDestination, coreTeamUnlockedAt, coldStorageYears, unsoldUnlockedAt, devVUPDestination, advisoryVUPDestination, udfVUPDestination",False
unlock(),"saleHasEnded, coreTeamUnlockedAt, unsoldUnlockedAt, coreTeamUnlockedAt, coreVUPDestination, coreVUPDestination, cofounderVUPDestination, cofounderVUPDestination, unsoldUnlockedAt, PRESALE_ICO_PORTION, totalVUP, unsoldVUPDestination, coreVUPDestination",False
withdrawFunds(),"minCapReached, vuePayETHDestination",True
triggerMinCap(),minCapReached,False
triggerRefund(),"saleHasEnded, minCapReached, icoEndBlock, executor, allowRefund",True
claimRefund(),"allowRefund, ETHContributed, ETHContributed, ETHContributed",True
changeVuePayETHDestinationAddress(address),vuePayETHDestination,False
"transfer(address,uint)",minCapReached,True
"transferFrom(address,address,uint)",minCapReached,True
