Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"constructor(string,string,uint8)","name, symbol, decimals",False
"constructor(address,address,address,string,string,uint8)","tokenAllocToTeam, tokenAllocToCompany, tokenAllocToCrowdsale, crowdsaleAddress, teamAddress, companyAddress, crowdsaleAddress, tokenAllocToCrowdsale, companyAddress, tokenAllocToCompany, teamAddress, tokenAllocToTeam, crowdsaleAddress, tokenAllocToCrowdsale, companyAddress, tokenAllocToCompany, teamAddress, tokenAllocToTeam",False
checkWhitelist(address),,False
function()payablepublic{buyTokens(msg.sender);}(),,True
"constructor(address,address,uint256)","beneficiaryAddress, whitelist, startPrivatesaleDate, isPrivatesaleActive, isPrivatesaleActive",False
endPrivatesale(),"isPrivatesaleActive, isPrivatesaleActive, isPrivatesaleActive",False
setTokenAddress(address),"tokenAddress, token, tokenAddress, token",False
activePresale(uint256),"isPresaleActive, isPrivatesaleActive, startPresaleDate, endPresaleDate, startPresaleDate, isPresaleActive, isPresaleActive",False
activeCrowdsalePhase1(uint256),"isPresaleActive, endPresaleDate, isPhase1CrowdsaleActive, startCrowdsalePhase1Date, endCrowdsalePhase1Date, isPresaleActive, isPresaleActive, isPhase1CrowdsaleActive, isPhase1CrowdsaleActive",False
activeCrowdsalePhase2(uint256),"isPhase2CrowdsaleActive, endCrowdsalePhase1Date, isPhase1CrowdsaleActive, startCrowdsalePhase2Date, endCrowdsalePhase2Date, isPhase2CrowdsaleActive, isPhase2CrowdsaleActive, isPhase1CrowdsaleActive, isPhase1CrowdsaleActive",False
activeCrowdsalePhase3(uint256),"isPhase3CrowdsaleActive, endCrowdsalePhase2Date, isPhase2CrowdsaleActive, startCrowdsalePhase3Date, endCrowdsalePhase3Date, isPhase3CrowdsaleActive, isPhase3CrowdsaleActive, isPhase2CrowdsaleActive, isPhase2CrowdsaleActive",False
changeMinInvestment(uint256),MIN_INVESTMENT,False
setEtherRate(uint256),ethRate,False
getState(),"startPrivatesaleDate, isPrivatesaleActive, startPresaleDate, endPresaleDate, isPresaleActive, startCrowdsalePhase1Date, endCrowdsalePhase1Date, isPhase1CrowdsaleActive, startCrowdsalePhase2Date, endCrowdsalePhase2Date, isPhase2CrowdsaleActive, startCrowdsalePhase3Date, endCrowdsalePhase3Date, isPhase3CrowdsaleActive",False
getRate(),,False
getTokenAmount(uint256),ethRate,False
buyTokens(address),"whitelist, tokenAddress, MIN_INVESTMENT, token, ethRaised, ethRaised, soldToken, soldToken",True
endCrowdfund(address),"isPhase3CrowdsaleActive, endCrowdsalePhase3Date, token, token, companyAddress",True
