Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
RefundVault(address),"wallet, state",False
deposit(address),"state, deposited, deposited",False
close(),"state, state, wallet",True
enableRefunds(),"state, state",False
refund(address),"state, deposited, deposited",True
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
certified(address),,False
"DigitizeCoinPresale(uint256,uint256,uint256,address,,address)","owner, startTime, endTime, softCap, token, vault, picopsCertifier",True
"function()externalpayable{require(validPurchase());addresspurchaser=msg.sender;uint256weiAmount=msg.value;uint256chargedWeiAmount=weiAmount;uint256tokensAmount=weiAmount.mul(rate);uint256tokensDue=tokensAmount;uint256tokensLeft=token.balanceOf(address(this));if(tokensAmount>tokensLeft){chargedWeiAmount=tokensLeft.div(rate);tokensDue=tokensLeft;hardCapReached=true;}elseif(tokensAmount==tokensLeft){hardCapReached=true;}weiRaised=weiRaised.add(chargedWeiAmount);contributed[purchaser]=contributed[purchaser].add(chargedWeiAmount);token.transfer(purchaser,tokensDue);if(chargedWeiAmount<weiAmount){purchaser.transfer(weiAmount-chargedWeiAmount);}emitTokenPurchase(purchaser,chargedWeiAmount,tokensDue);vault.deposit.value(chargedWeiAmount)(purchaser);}()","rate, token, rate, hardCapReached, hardCapReached, weiRaised, weiRaised, contributed, contributed, token, vault",True
softCapReached(),"weiRaised, softCap",False
hasEnded(),"endTime, hardCapReached",False
hasStarted(),startTime,False
claimRefund(),vault,True
finalize(),"vault, vault",False
setPicopsCertifier(address),"picopsCertifier, picopsCertifier, picopsCertifier",False
passedKYC(address),picopsCertifier,False
addToWhitelist(),whitelist,False
removeFromWhitelist(),whitelist,False
withdrawEther(),"owner, owner",True
withdrawERC20Tokens(),"owner, owner",True
