Function Name,State Variables Modified,Can Transfer Ether
"recover(bytes32,bytes)",,False
"getCEOHashing(address,uint256)",,False
"setCEO(address,bytes)","cfoAddress, cooAddress, ceoAddress, CLevelTxCount_",True
"getCFOHashing(address,uint256)",,False
"setCFO(address,bytes)","ceoAddress, cooAddress, cfoAddress, CLevelTxCount_",True
"getCOOHashing(address,uint256)",,False
"setCOO(address,bytes)","ceoAddress, cfoAddress, cooAddress, CLevelTxCount_",True
getNonce(),,True
"transfer(address,uint)",,False
balanceOf(address),,False
"constructor(address,address,address,address)","ceoAddress, cfoAddress, cooAddress, systemAddress, minimumPurchaseAmount, decimals",False
"recover(bytes32,bytes)",,False
getNonces(address),,True
setDeklaPrice(uint256),deklaTokenPrice,True
setMinimumPurchaseAmount(uint256),minimumPurchaseAmount,True
"getTokenAddressHashing(address,uint256)",,False
"setTokenAddress(address,bytes)",token,True
calculateDekla(uint256),"deklaTokenPrice, deklaTokenPrice",False
"function()externalpayablevalidToken{uint256amount=msg.value.div(deklaTokenPrice)*(10**decimals);require(amount>=minimumPurchaseAmount);require(token.balanceOf(this)>=amount);token.transfer(msg.sender,amount);emitBuyDeklaSuccessful(amount,msg.sender);}()","deklaTokenPrice, decimals, minimumPurchaseAmount, token, token",True
"withdrawEthHashing(address,uint256,uint256)",,False
"withdrawEth(address,uint256,bytes)",,True
"withdrawDeklaHashing(address,uint256,uint256)",,False
"withdrawDekla(address,uint256,bytes)","token, token",True
