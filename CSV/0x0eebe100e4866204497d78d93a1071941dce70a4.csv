Function Name,State Variables Modified,Can Transfer Ether
name(),,False
symbol(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
AppCoins(),"owner, token_name, token_symbol, totalSupply, decimals, balances, owner, totalSupply",True
name(),token_name,False
symbol(),token_symbol,False
balanceOf(address),balances,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
"transferFrom(address,address,uint256)","allowance, allowance, allowance",True
"approve(address,uint256)",allowance,True
burn(uint256),"balances, balances, totalSupply",True
"burnFrom(address,uint256)","balances, allowance, balances, allowance, totalSupply",True
convertCountryIndexToBytes(),,False
getStorageAddress(),,False
"checkRole(address,string)",roles,False
"hasRole(address,string)",roles,False
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
setAllowedAddress(address),,False
addAddressToWhitelist(address),ROLE_WHITELISTED,False
whitelist(address),ROLE_WHITELISTED,False
addAddressesToWhitelist(),,False
removeAddressFromWhitelist(address),ROLE_WHITELISTED,False
removeAddressesFromWhitelist(),,False
"_setCampaign(bytes32,uint,uint,uint,uint,bool,address)",owner,False
constructor(),,True
getCampaignPriceById(bytes32),,False
"setCampaignPriceById(bytes32,uint)",,False
getCampaignBudgetById(bytes32),,False
"setCampaignBudgetById(bytes32,uint)",,False
getCampaignStartDateById(bytes32),,False
"setCampaignStartDateById(bytes32,uint)",,False
getCampaignEndDateById(bytes32),,False
"setCampaignEndDateById(bytes32,uint)",,False
getCampaignValidById(bytes32),,False
"setCampaignValidById(bytes32,bool)",,False
getCampaignOwnerById(bytes32),,False
"setCampaignOwnerById(bytes32,address)",,False
getLastBidId(),,False
getCampaign(bytes32),,False
"setCampaign(bytes32,uint,uint,uint,uint,bool,address,string)",,False
getCampaignEndPointById(bytes32),,False
"setCampaignEndPointById(bytes32,string)",,False
"constructor(address,address,address)",,False
upgradeFinance(address),,True
upgradeStorage(address),,False
getStorageAddress(),,True
cancelCampaign(bytes32),owner,True
getCampaignValidity(bytes32),,False
getPriceOfCampaign(bytes32),,False
getStartDateOfCampaign(bytes32),,False
getEndDateOfCampaign(bytes32),,False
getBudgetOfCampaign(bytes32),,False
getOwnerOfCampaign(bytes32),,False
getBidIdList(),,False
isCampaignValid(bytes32),,False
"division(uint,uint)",,False
uintToBytes(uint256),,False
bytesToUint(bytes32),,False
"recoverSigner(bytes32,bytes)",,False
constructor(address),,False
setAdsStorageAddress(address),,False
setAllowedAddress(address),,False
"increaseBalance(address,uint256)",,False
"pay(address,address,uint256)",,False
"withdraw(address,uint256)",,False
reset(),,False
transferAllFunds(address),,True
getUserBalance(address),,False
getUserList(),,False
constructor(address),,False
"pay(address,address,uint256)",,False
"withdraw(address,uint256)",,True
"withdrawRewards(address,uint256)",,True
getRewardsBalance(address),,False
"constructor(address,address,address)",,True
"createCampaign(string,,,uint,uint,uint,uint,string)",,False
"bulkRegisterPoA(bytes32,bytes32,bytes,uint256)",owner,True
withdraw(),,True
getRewardsBalance(address),,False
getEndPointOfCampaign(bytes32),,False
