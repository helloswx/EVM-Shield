Function Name,State Variables Modified,Can Transfer Ether
buyTokens(address),,False
"isAllowedWhitelist(uint256,uint256)",,False
isWhitelistEnabled(),maxWhitelistLength,False
isWhitelisted(address),whitelist,False
"isAllowedBalance(address,uint256)","whitelistThresholdBalance, whitelist",False
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
pause(),paused,False
unpause(),paused,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
hasStarted(),startBlock,False
hasEnded(),endBlock,False
setStartBlock(uint256),"endBlock, startBlock, startBlock",False
setEndBlock(uint256),"startBlock, endBlock, endBlock",False
setMinDeposit(uint256),"minDeposit, minDeposit, minDeposit",False
setMaxWhitelistLength(uint256),maxWhitelistLength,False
setWhitelistThresholdBalance(uint256),,False
addToWhitelist(address),,False
removeFromWhitelist(address),balanceOf,False
function()externalpayablewhenNotPaused{buyTokens(msg.sender);}(),,True
buyTokens(address),"beneficiary, beneficiary, balanceOf, beneficiary, balanceOf, beneficiary, raisedFunds, raisedFunds, soldTokens, soldTokens, beneficiary, beneficiary",True
"isAllowedBalance(address,uint256)","minDeposit, beneficiary",False
"payFee(bytes32,uint256,address)",,False
"usageFee(bytes32,uint256)",,False
isCustomToken(),,False
finishBurning(),burningFinished,False
setPricingPlan(address),"pricingPlan, pricingPlan",True
burn(uint256),,False
constructor(address),"wallet, burningPercentage",True
setBurningPercentage(uint256),"burningPercentage, burningPercentage",True
"tokenReceived(address,uint256)","burningPercentage, burnedTokens, burnedTokens, wallet, transferredTokens, transferredTokens",True
burn(uint256),,True
"constructor(string,string,uint8)","name, symbol, decimals",False
"constructor(,address,uint256)","token, beneficiary, releaseTime",False
release(),"releaseTime, token, token, beneficiary",False
"constructor(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"constructor(string,string,uint8,uint256,uint256,address,address)","transferableFromBlock, lockEndBlock, mintingFeeEnabled",True
setMintingFeeEnabled(bool),"mintingFeeEnabled, mintingFeeEnabled",True
"setInformation(string,string)","name, symbol",True
finishTransferFeePayment(),"transferFeePaymentFinished, transferFeePaymentFinished",True
setTransferFeePercentage(uint256),"transferFeePercentage, transferFeePercentage",True
lockedBalanceOf(address),"initiallyLockedBalanceOf, lockEndBlock, transferableFromBlock, lockEndBlock, transferableFromBlock, transferableFromBlock, released",True
transferFee(uint256),transferFeePercentage,True
freeTransfer(),"transferFeePaymentFinished, transferFeePercentage",True
"transfer(address,uint256)",owner,True
"transferFrom(address,address,uint256)",owner,True
burn(uint256),"pricingPlan, BURN_SERVICE_NAME",True
"mint(address,uint256)","mintingFeeEnabled, pricingPlan, MINT_SERVICE_NAME",True
"mintLocked(address,uint256)","initiallyLockedBalanceOf, initiallyLockedBalanceOf",False
"mintTimelocked(address,uint256,uint256)","timelock, timelock, timelock, pricingPlan, TIMELOCK_SERVICE_NAME",True
"mintVested(address,uint256,uint256,uint256)","vesting, vesting, vesting, pricingPlan, VESTING_SERVICE_NAME",True
releaseVested(),"vesting, vesting",False
revokeVested(),"vesting, vesting",False
hasEnded(),"soldTokens, tokenCap",False
"constructor(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,address)","platinumAgeRate, goldenAgeRate, silverAgeRate, token, wallet, tokenCap, token, startBlock, endBlock",True
"setThreePowerAges(uint256,uint256,uint256,uint256,uint256,uint256)","startBlock, endBlock, rate, platinumAgeEndBlock, goldenAgeEndBlock, silverAgeEndBlock, platinumAgeRate, goldenAgeRate, silverAgeRate",True
"setTwoPowerAges(uint256,uint256,uint256,uint256)","startBlock, endBlock, rate, platinumAgeEndBlock, goldenAgeEndBlock, platinumAgeRate, goldenAgeRate, silverAgeRate, rate",True
"setOnePowerAge(uint256,uint256)","startBlock, endBlock, rate, platinumAgeEndBlock, platinumAgeRate, goldenAgeRate, rate, silverAgeRate, rate",True
grantTokenOwnership(address),token,True
setPricingPlan(address),"pricingPlan, pricingPlan",True
constructor(address),,True
"createCustomCrowdsale(uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,address)","pricingPlan, SERVICE_NAME, CREATE_AMOUNT",True
