Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
reserveOwnership(address),"owner, reservedOwner, ownershipDeadline, OWNERSHIP_DURATION_TIME, TIME_FACTOR",False
confirmOwnership(),"reservedOwner, ownershipDeadline, owner, reservedOwner, owner, reservedOwner, reservedOwner",False
cancelOwnership(),"reservedOwner, owner, reservedOwner, reservedOwner",False
MultiOwnable(),"owners, MULTI_OWNER_COUNT",False
grantOwners(address),owners,False
revokeOwners(address),owners,False
pause(),paused,False
unpause(),paused,False
lockup(address),"locked, LOCKUP_DURATION_TIME, TIME_FACTOR, locked",False
"receiveApproval(address,uint,address,bytes)",,False
"TokenERC20(string,string,uint8,uint)","name, symbol, decimals, totalSupply, balanceOf, totalSupply, name, symbol, decimals, totalSupply",True
"transfer(address,uint)",,True
"transferFrom(address,address,uint)","allowance, allowance, allowance",True
"approve(address,uint)",allowance,True
"approveAndCall(address,uint,bytes)",,True
"AcreToken(address,address)","companyCapital, prePayment, companyCapital, CAPITAL_SUPPLY, prePayment, PRE_PAYMENT_SUPPLY, prePayment",True
"transferFrom(address,address,uint)",frozenAccount,True
freezeAccount(address),"frozenAccount, frozenAccount",False
unfreezeAccount(address),"frozenAccount, frozenAccount",False
burn(uint),"balanceOf, balanceOf, balanceOf, totalSupply, totalSupply",True
"mining(address,uint)","frozenAccount, totalMineSupply, MAX_MINING_SUPPLY, balanceOf, balanceOf, totalSupply, totalSupply, totalMineSupply, totalMineSupply",False
withdrawContractToken(uint),,True
getContractBalanceOf(),balanceOf,False
getRemainingMineSupply(),"MAX_MINING_SUPPLY, totalMineSupply",False
function()public{revert();}(),,False
"AcreSale(address,uint,uint,)","sendEther, softCapToken, TOKEN_DECIMALS, hardCapToken, TOKEN_DECIMALS, tokenReward",True
getRemainingSellingTime(),"saleDeadline, saleDeadline",False
getRemainingSellingToken(),"hardCapToken, soldToken",False
getSoftcapReached(),"soldToken, softCapToken",False
getContractBalanceOf(),tokenReward,False
getCurrentBonusRate(),,False
checkGoalReached(),"saleOpened, fundingGoalReached, saleOpened, receivedEther, soldToken, fundingGoalReached",False
checkKYC(address),"saleOpened, orders, orders, orders, orders, refund, refund, orders, refund, refund, orders, refund, refund, orders, kyc, kyc, orders, kyc, kyc, orders, kyc, kyc",False
checkRefund(address),"saleOpened, orders, orders, orders, orders, kyc, kyc, orders, kyc, kyc, orders, kyc, kyc, orders, refund, refund, orders, refund, refund, orders, refund, refund",False
withdrawFunder(address),"saleOpened, fundingGoalReached, orders, orders, orders, tokenReward, orders, withdrawal, withdrawal, orders, withdrawal, withdrawal, orders, withdrawal, withdrawal, orders, orders",True
withdrawContractToken(uint),tokenReward,True
"function()payablepublic{require(saleOpened);require(now<=saleDeadline);require(MIN_ETHER<=msg.value);uintamount=msg.value;uintcurBonusRate=getCurrentBonusRate();uinttoken=(amount.mul(curBonusRate.add(100)).div(100)).mul(EXCHANGE_RATE);require(token>0);require(SafeMath.add(soldToken,token)<=hardCapToken);sendEther.transfer(amount);if(orders[msg.sender].paymentEther==0){indexedFunders[funderCount]=msg.sender;funderCount=funderCount.add(1);orders[msg.sender].state=eOrderstate.NONE;}orders[msg.sender].paymentEther=orders[msg.sender].paymentEther.add(amount);orders[msg.sender].reservedToken=orders[msg.sender].reservedToken.add(token);receivedEther=receivedEther.add(amount);soldToken=soldToken.add(token);ReservedToken(msg.sender,amount,token,curBonusRate);}()","saleOpened, saleDeadline, MIN_ETHER, EXCHANGE_RATE, soldToken, hardCapToken, sendEther, orders, indexedFunders, funderCount, funderCount, funderCount, orders, orders, orders, orders, orders, receivedEther, receivedEther, soldToken, soldToken",True
"AcrePresale(address,uint,uint,)",,False
startPresale(),PRESALE_DURATION_TIME,False
getCurrentBonusRate(),"startSaleTime, TIME_FACTOR, startSaleTime, TIME_FACTOR",False
"AcreCrowdsale(address,uint,uint,)",,False
startCrowdsale(),CROWDSALE_DURATION_TIME,False
getCurrentBonusRate(),"startSaleTime, TIME_FACTOR, startSaleTime, TIME_FACTOR, startSaleTime, TIME_FACTOR",False
