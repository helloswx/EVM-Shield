Function Name,State Variables Modified,Can Transfer Ether
constructor(address),"owner, GWContract, GWContract, owner",True
setPrice(uint256),buyPrice,False
"function()payableexternal{uintamount=msg.value;balance=(amount/buyPrice)*10**18;GWContract.transfer(msg.sender,balance);address(GWContract).transfer(amount);}()","buyPrice, GWContract, GWContract",True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),_totalSupply,False
balanceOf(address),"_balances, owner",False
"allowance(address,address)","_allowed, owner",False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
constructor(),owner,True
transferOwnership(address),owner,False
constructor(),,True
function()payableexternal{if(msg.value==0){withdrawDividends(msg.sender);}}(),,True
getDividends(address),,False
withdrawDividends(address),,True
startPayments(),owner,True
constructor(address),,False
"setRateToken(uint256,uint256)","rate, rateModifier",False
setCrowdSale(address),,False
"setRoundTime(uint,uint)",,False
setGameWaveAddress(address),"GameWaveContract, GameWaveContract",False
setBearsAddress(address),"BearsContract, BearsContract",False
setBullsAddress(address),"BullsContract, BullsContract",False
getNow(),,False
getState(),currentDeadline,False
"setInfo(address,uint256)","BearsContract, BullsContract, BearsContract, depositBulls, currentRound, depositBears, currentRound, countOfBears, totalSupplyOfBears, totalSupplyOfBears, depositBears, currentRound, depositBears, currentRound, BullsContract, depositBears, currentRound, depositBulls, currentRound, countOfBulls, totalSupplyOfBulls, totalSupplyOfBulls, depositBulls, currentRound, depositBulls, currentRound, lastHero, currentDeadline, lastDeadline, currentDeadline, currentDeadline, currentDeadline, lastDeadline, jackPot",True
estimateTokenPercent(uint256),"rateModifier, rate, rate",False
calculateProbability(),"winner, totalGWSupplyOfBulls, GameWaveContract, BullsContract, totalGWSupplyOfBears, GameWaveContract, BearsContract, totalSupplyOfBulls, totalSupplyOfBears, totalGWSupplyOfBulls, totalGWSupplyOfBulls, totalGWSupplyOfBears, totalGWSupplyOfBears, totalGWSupplyOfBulls, totalGWSupplyOfBears, totalGWSupplyOfBears, totalGWSupplyOfBulls, probabilityOfBears, totalSupplyOfBears, probabilityOfBears, probabilityOfBears, probabilityOfBears, probabilityOfBears, probabilityOfBulls, probabilityOfBears, totalGWSupplyOfBulls, totalGWSupplyOfBears, probabilityOfBulls, totalSupplyOfBulls, probabilityOfBulls, probabilityOfBulls, probabilityOfBulls, probabilityOfBulls, probabilityOfBears, probabilityOfBulls, totalGWSupplyOfBulls, GameWaveContract, BullsContract, totalGWSupplyOfBears, GameWaveContract, BearsContract",False
getWinners(),"winner, totalSupplyOfBulls, totalSupplyOfBears, totalGWSupplyOfBulls, totalGWSupplyOfBulls, probabilityOfBears, winner, probabilityOfBears, winner, GameWaveContract, BullsContract, GameWaveContract, BullsContract, GameWaveContract, BullsContract, GameWaveContract, BearsContract, GameWaveContract, BearsContract, GameWaveContract, BearsContract, lastTotalSupplyOfBulls, totalSupplyOfBulls, lastTotalSupplyOfBears, totalSupplyOfBears, lastTotalGWSupplyOfBears, totalGWSupplyOfBears, lastTotalGWSupplyOfBulls, totalGWSupplyOfBulls, lastRoundHero, lastHero, lastJackPot, jackPot, lastWinner, winner, lastCountOfBears, countOfBears, lastCountOfBulls, countOfBulls, lastWithdrawn, withdrawn, lastWithdrawnGW, withdrawnGW, lastBalance, lastWithdrawn, remainder, lastBalance, lastWithdrawn, GameWaveContract, remainder, lastBalance, lastTotalSupplyOfBears, lastTotalSupplyOfBulls, lastJackPot, lastBalanceGW, lastWithdrawnGW, remainderGW, lastBalanceGW, lastWithdrawnGW, tokenReturn, totalGWSupplyOfBears, totalGWSupplyOfBulls, remainderGW, GameWaveContract, tokenReturn, lastBalanceGW, GameWaveContract, totalSupplyOfBulls, totalSupplyOfBears, totalGWSupplyOfBulls, totalGWSupplyOfBears, remainder, remainderGW, jackPot, withdrawn, winner, withdrawnGW, countOfBears, countOfBulls, probabilityOfBulls, probabilityOfBears, defaultCurrentDeadlineInHours, defaultLastDeadlineInHours, currentRound",True
"function()externalpayable{if(msg.value==0){require(depositBears[currentRound-1][msg.sender]>0||depositBulls[currentRound-1][msg.sender]>0);uintpayout=0;uintpayoutGW=0;if(lastWinner==1&&depositBears[currentRound-1][msg.sender]>0){payout=calculateLastETHPrize(msg.sender);}if(lastWinner==2&&depositBulls[currentRound-1][msg.sender]>0){payout=calculateLastETHPrize(msg.sender);}if(payout>0){depositBears[currentRound-1][msg.sender]=0;depositBulls[currentRound-1][msg.sender]=0;withdrawn=withdrawn.add(payout);msg.sender.transfer(payout);}if((lastWinner==1&&depositBears[currentRound-1][msg.sender]==0)||(lastWinner==2&&depositBulls[currentRound-1][msg.sender]==0)){payoutGW=calculateLastGWPrize(msg.sender);withdrawnGW=withdrawnGW.add(payoutGW);GameWaveContract.transfer(msg.sender,payoutGW);}if(msg.sender==lastRoundHero){lastHeroHistory=lastRoundHero;lastRoundHero=address(0x0);withdrawn=withdrawn.add(lastJackPot);msg.sender.transfer(lastJackPot);}}}()","depositBears, currentRound, depositBulls, currentRound, lastWinner, depositBears, currentRound, lastWinner, depositBulls, currentRound, depositBears, currentRound, depositBulls, currentRound, withdrawn, withdrawn, lastWinner, depositBears, currentRound, lastWinner, depositBulls, currentRound, withdrawnGW, withdrawnGW, GameWaveContract, lastRoundHero, lastHeroHistory, lastRoundHero, lastRoundHero, withdrawn, withdrawn, lastJackPot, lastJackPot",True
calculateETHPrize(address),"totalSupplyOfBears, totalSupplyOfBulls, depositBears, currentRound, depositBears, currentRound, totalSupplyOfBears, depositBulls, currentRound, depositBulls, currentRound, totalSupplyOfBulls",False
calculateGWPrize(address),"totalGWSupplyOfBears, totalGWSupplyOfBulls, depositBears, currentRound, depositBears, currentRound, totalSupplyOfBears, depositBulls, currentRound, depositBulls, currentRound, totalSupplyOfBulls",False
calculateLastETHPrize(address),"lastTotalSupplyOfBears, lastTotalSupplyOfBulls, depositBears, currentRound, depositBears, currentRound, lastTotalSupplyOfBears, depositBulls, currentRound, depositBulls, currentRound, lastTotalSupplyOfBulls",False
calculateLastGWPrize(address),"lastTotalGWSupplyOfBears, lastTotalGWSupplyOfBulls, depositBears, currentRound, depositBears, currentRound, lastTotalSupplyOfBears, depositBulls, currentRound, depositBulls, currentRound, lastTotalSupplyOfBulls",False
constructor(),owner,True
"function()externalpayable{require(BankContract.getState()&&msg.value>=0.05ether);BankContract.setInfo(msg.sender,msg.value.mul(90).div(100));owner.transfer(msg.value.mul(10).div(100));address(BankContract).transfer(msg.value.mul(90).div(100));}()","BankContract, BankContract, owner, BankContract",True
"constructor(address,address)","BankContract, BankContract, GameWaveContract, GameWaveContract",False
"constructor(address,address)","BankContract, BankContract, GameWaveContract, GameWaveContract",False
