Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
balanceOf(address),,False
totalSupply(),,False
"generateTokens(address,uint)",,False
"destroyTokens(address,uint)",,False
totalSupplyAt(uint),,False
"balanceOfAt(address,uint)",,False
transferOwnership(address),,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
"getExpectedRate(,,uint)",,False
"tradeWithHint(,uint,,address,uint,uint,address,bytes)",,False
"constructor(address,address)","DAI_ADDR, KYBER_ADDR, dai, kyber",False
betokenFundAddress(),,False
updateBetokenFundAddress(),,False
currentChunk(),"cyclePhase, startTimeOfCyclePhase, CHUNK_SIZE",False
currentSubchunk(),"cyclePhase, startTimeOfCyclePhase, CHUNK_SIZE, PROPOSE_SUBCHUNK_SIZE",False
getVotingWeight(address),"cycleNumber, CYCLES_TILL_MATURITY, cToken, managePhaseEndBlock, cycleNumber, CYCLES_TILL_MATURITY",False
getTotalVotingWeight(),"cycleNumber, CYCLES_TILL_MATURITY, cToken, managePhaseEndBlock, cycleNumber, CYCLES_TILL_MATURITY, proposersVotingWeight",False
kairoPrice(),"cToken, MIN_KRO_PRICE, totalFundsInDAI, cToken, MIN_KRO_PRICE, MIN_KRO_PRICE",False
enterMarkets(),,False
markets(address),,False
getPrice(address),,False
mint(uint),,False
redeemUnderlying(uint),,False
borrow(uint),,False
repayBorrow(uint),,False
borrowBalanceCurrent(address),,False
exchangeRateCurrent(),,False
balanceOf(address),,False
decimals(),,False
underlying(),,False
"constructor(address,uint256,uint256,uint256,uint256,bool,address,address,address,address,address,address,address)","stake, collateralAmountInDAI, loanAmountInDAI, cycleNumber, compoundTokenAddr, orderType, logicContract, COMPTROLLER, ORACLE, CDAI, CETH_ADDR",False
"executeOrder(uint256,uint256)",logicContract,True
"sellOrder(uint256,uint256)",logicContract,True
repayLoan(uint256),logicContract,True
getCurrentLiquidityInDAI(),logicContract,True
getCurrentCollateralRatioInDAI(),logicContract,True
getCurrentProfitInDAI(),logicContract,True
getMarketCollateralFactor(),logicContract,True
getCurrentCollateralInDAI(),logicContract,True
getCurrentBorrowInDAI(),logicContract,True
getCurrentCashInDAI(),logicContract,True
function()externalpayable{}(),,False
"constructor(address,address,address,address,address,address,address,address,address,address)","SHORT_CERC20_LOGIC_CONTRACT, SHORT_CEther_LOGIC_CONTRACT, LONG_CERC20_LOGIC_CONTRACT, LONG_CEther_LOGIC_CONTRACT, DAI_ADDR, KYBER_ADDR, COMPTROLLER_ADDR, ORACLE_ADDR, CDAI_ADDR, CETH_ADDR",False
"createOrder(address,uint256,uint256,uint256,uint256,bool)","CETH_ADDR, logicContract, SHORT_CERC20_LOGIC_CONTRACT, LONG_CERC20_LOGIC_CONTRACT, logicContract, SHORT_CEther_LOGIC_CONTRACT, LONG_CEther_LOGIC_CONTRACT, logicContract, DAI_ADDR, KYBER_ADDR, COMPTROLLER_ADDR, ORACLE_ADDR, CDAI_ADDR, CETH_ADDR",True
getMarketCollateralFactor(address),COMPTROLLER_ADDR,False
"constructor(address,address,address,,uint256,address,address,address,address,address)","controlTokenAddr, shareTokenAddr, devFundingAccount, phaseLengths, devFundingRate, cyclePhase, compoundFactoryAddr, betokenLogic, previousVersion, cToken, sToken",False
"initTokenListings(,,)","hasInitializedTokenListings, hasInitializedTokenListings, isKyberToken, isCompoundToken, isPositionToken",False
setProxy(address),"proxyAddr, proxyAddr, proxy",False
developerInitiateUpgrade(address),betokenLogic,True
signalUpgrade(bool),betokenLogic,True
"proposeCandidate(uint256,address)",betokenLogic,True
"voteOnCandidate(uint256,bool)",betokenLogic,True
finalizeSuccessfulVote(uint256),betokenLogic,True
migrateOwnedContractsToNextVersion(),"cToken, nextVersion, sToken, nextVersion, proxy",True
transferAssetToNextVersion(address),"ETH_TOKEN_ADDRESS, nextVersion, nextVersion",True
investmentsCount(address),userInvestments,False
compoundOrdersCount(address),userCompoundOrders,False
getPhaseLengths(),phaseLengths,False
commissionBalanceOf(address),"lastCommissionRedemption, cycleNumber, lastCommissionRedemption, lastCommissionRedemption, cycleNumber",False
"commissionOfAt(address,uint256)","hasRedeemedCommissionForCycle, cToken, managePhaseEndBlock, baseRiskStakeFallback, baseRiskStakeFallback, riskTakenInCycle, PRECISION, MIN_RISK_TIME, PRECISION, PRECISION, totalCommissionOfCycle, cToken, managePhaseEndBlock, cToken, managePhaseEndBlock, PRECISION",False
changeDeveloperFeeAccount(address),devFundingAccount,False
changeDeveloperFeeRate(uint256),"PRECISION, devFundingRate, devFundingRate",False
listKyberToken(address),isKyberToken,False
nextPhase(),betokenLogic,True
registerWithDAI(uint256),betokenLogic,True
registerWithETH(),betokenLogic,True
"registerWithToken(address,uint256)",betokenLogic,True
depositEther(),"ETH_TOKEN_ADDRESS, dai, cycleNumber, ETH_TOKEN_ADDRESS",True
depositDAI(uint256),"dai, cycleNumber, DAI_ADDR",True
"depositToken(address,uint256)","DAI_ADDR, ETH_TOKEN_ADDRESS, dai, cycleNumber",True
withdrawEther(uint256),"dai, ETH_TOKEN_ADDRESS, cycleNumber, ETH_TOKEN_ADDRESS",True
withdrawDAI(uint256),"dai, cycleNumber, DAI_ADDR",True
"withdrawToken(address,uint256)","DAI_ADDR, ETH_TOKEN_ADDRESS, dai, cycleNumber",True
redeemCommission(bool),"cycleNumber, DAI_ADDR, dai",True
"redeemCommissionForCycle(bool,uint256)","cycleNumber, cycleNumber, DAI_ADDR, dai",True
sellLeftoverToken(address),"dai, totalFundsInDAI, totalFundsInDAI",False
sellLeftoverCompoundOrder(address),"cycleNumber, dai, MAX_QTY, dai, totalFundsInDAI, totalFundsInDAI",False
burnDeadman(address),"cycleNumber, lastActiveCycle, INACTIVE_THRESHOLD, cToken, cToken",False
"createInvestment(address,uint256,uint256,uint256)",betokenLogic,True
"sellInvestmentAsset(uint256,uint256,uint256,uint256)",betokenLogic,True
"createCompoundOrder(bool,address,uint256,uint256,uint256)",betokenLogic,True
"sellCompoundOrder(uint256,uint256,uint256)",betokenLogic,True
"repayCompoundOrder(uint256,uint256)",betokenLogic,True
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
function()externalpayable{}(),,False
