Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, developer",True
renounceOwnership(),"owner, owner",False
renounceDevelopership(),developer,False
transferOwnership(address),,True
transferDevelopership(address),developer,False
pause(),paused,False
unpause(),paused,False
constructor(address),playerBookAddress,False
"fishBowl(uint,uint)",,False
"multipleBuy(uint,uint,uint)",,False
getFishBowlLevel(uint),,False
"getFodderFee(uint,uint)",,False
getFishbowlSize(uint),,False
getAdmissionPrice(uint),,False
"getAmountToSale(uint,uint)",,False
setPlayerBookAddr(address),playerBookAddress,False
getPlayerBookAddr(),playerBookAddress,False
constructor(),"INIT_FISHAMOUNT, INIT_FISHPRICE, isFleshUp, INIT_FISHAMOUNT, INIT_FISHPRICE, INIT_FISHPRICE, reproductionBlockNumbers",False
function()payableexternal{playerBookAddress.transfer(msg.value);}(),playerBookAddress,True
"addNewBuyOrder(address,uint,uint,bool)","sellOrderSequence, playerBookAddress, priceTotalFishAmount, sellOrderSequence, playerBookAddress, priceTotalFishAmount, sellOrderSequence, sellOrders, sellOrders, sellOrders, sellOrders, sellOrders, priceTotalFishAmount, priceTotalFishAmount, sellOrders, sellOrders, sellOrders, priceTotalFishAmount, priceTotalFishAmount",False
getEstimateFishPrice(uint),"isFleshUp, fleshUpCount, priceTotalFishAmount, priceTotalFishAmount, priceTotalFishAmount, priceTotalFishAmount, priceTotalFishAmount",False
"addNewSellOrder(address,uint,uint)","isFleshUp, priceTotalFishAmount, priceTotalFishAmount, sellOrders, sellOrders, personSellOrders, sellOrders, sellOrders, sellOrders, priceTotalFishAmount, priceTotalFishAmount, personSellOrders, sellOrderSequence",False
"cancelSellOrder(address,uint)","sellOrders, sellOrders, sellOrders, isFleshUp, sellOrders, sellOrders, sellOrders, sellOrders, priceTotalFishAmount, priceTotalFishAmount, personSellOrders",True
deadFish(uint),,False
setPlayerBookAddress(address),playerBookAddress,False
getPersonSellOrders(),personSellOrders,True
getSellOrderData(uint),"sellOrders, sellOrders, sellOrders",False
showGlobalData(),,False
showAvaliablePriceInterval(),,False
showPriceIntervalFishAmount(),"priceTotalFishAmount, priceTotalFishAmount",False
showFish(),,False
getRepoBlockNumbers(),reproductionBlockNumbers,False
constructor(address),playerBookAddress,False
firstGenerationJoinGame(address),,False
"joinGame(address,address)",,False
"inviteNewUser(address,uint,address,uint)",,False
getAncestorList(address),,False
getMotherGeneration(address),,False
getInviteesList(address),,False
getInviteesCount(address),,False
setPlayerBookAddr(address),playerBookAddress,False
getPlayerBookAddr(),playerBookAddress,False
constructor(),"reproductionRound, weekRound, _ghostProfit, owner",False
firstGenerationJoinGame(uint),playerLastTotalCost,True
"joinGame(uint,address)","weekRound, weekRound, weekData, weekData, weekData, weekData, weekData, weekData, weekData, weekData, playerLastTotalCost",True
increseFishbowlSizeByMoney(uint),"playerLastTotalCost, reproductionRound, playerLastTotalCost, weekRound, weekRound, weekData, weekData, weekData, weekData, weekData, weekData, weekData, weekData",True
"rebuyAddNewBuyOrder(uint,uint)","playerLastTotalCost, playerLastTotalCost",True
"addNewSellOrder(uint,uint)",,True
cancelSellOrder(uint),,True
"addFishAmount(address,uint,uint,bool)",playerLastTotalCost,False
"sellerProcessProfit(address,uint)","_ghostProfit, _ghostProfit, _ghostProfit, _ghostProfit",False
"buyOrderRefund(address,uint)",,True
"minusFishAmount(address,uint)",,False
addReproductionRound(),"reproductionRound, reproductionRound",False
getPlayerStatusAndExceeded(),,True
getPlayerWeekCount(),,True
setTransactionSystemAddr(address),TransactionSystemAddress,False
setFishbowlAddr(address),FishbowlAddress,False
setCommissionAddr(address),CommissionAddress,False
getPlayerData(),reproductionRound,True
getBonusPool(),"BONUS_TIMEOUT_WEEK, BONUS_TIMEOUT_NO_USER",False
getWeekData(),weekData,False
withdrawProfit(),,True
"setWhiteList(address,bool)",,False
getWhiteList(),,True
getOwnerProfit(),"owner, _ghostProfit",True
withdrawOwnerProfit(),"_ghostProfit, _ghostProfit, developer, owner",True
function()externalpayable{owner.transfer(msg.value);}(),owner,True
