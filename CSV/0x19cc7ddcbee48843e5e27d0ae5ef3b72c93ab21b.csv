Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
setMarketplaceAddress(address),marketplace,False
"setSettingValues(uint8,uint8,uint16,uint16,uint16,uint16,uint16,uint8,uint8,uint32,uint32,uint8)","upgradeGems, upgradeGemsSpecial, gemAttackConversion, gemDefenseConversion, gemHpConversion, gemSpeedConversion, gemCriticalRateConversion, goldPercentage, silverPercentage, eventCardRangeMin, eventCardRangeMax, maxBattleRounds",False
"setStarterPack(uint256,uint16)","starterPackPrice, starterPackCardLevel",False
setStarterPackOnSale(bool),starterPackOnSale,False
setBattleStart(bool),battleStart,False
setCardDrawPrice(uint256),cardDrawPrice,False
setReferrerFee(uint256),referrerFee,False
setChallengeFee(uint256),challengeFee,False
setUpgradeFee(uint256),upgradeFee,False
setAvatarFee(uint256),avatarFee,False
setDeveloperCut(uint256),developerCut,False
getTotalDeveloperCut(),totalDeveloperCut,False
getTotalRankTokens(),totalRankTokens,False
getSettingValues(),"upgradeGems, upgradeGemsSpecial, gemAttackConversion, gemDefenseConversion, gemHpConversion, gemSpeedConversion, gemCriticalRateConversion, maxBattleRounds",False
constructor(address),"hogsmashToken, starterPackPrice, starterPackCardLevel, starterPackOnSale, challengeFee, upgradeFee, avatarFee, developerCut, referrerFee, cardDrawPrice, battleStart, paused, totalDeveloperCut",False
getCard(uint256),"owner, hogsmashToken, cards",False
getCardIdByRank(uint256),,False
draftNewCard(),"cardDrawPrice, marketplace, hogsmashToken, marketplace, totalDeveloperCut, totalDeveloperCut, cardDrawPrice",True
draftNewCardWithReferrer(address),"cardDrawPrice, marketplace, hogsmashToken, marketplace, referrerFee, hogsmashToken, referrerFee, totalDeveloperCut, totalDeveloperCut, cardDrawPrice, totalDeveloperCut, totalDeveloperCut, cardDrawPrice",True
"levelUp(uint256,uint16,uint16,uint16,uint16,uint16,uint16)","upgradeFee, cards, gemCriticalRateConversion, upgradeGemsSpecial, upgradeGems, upgradeGemsSpecial, upgradeGems, totalDeveloperCut, totalDeveloperCut, upgradeFee",False
"challenge(uint256,,uint256,uint256,uint16)","battleStart, hogsmashToken, cards, cards, challengeFee, gemAttackConversion, gemDefenseConversion, gemHpConversion, gemSpeedConversion, gemCriticalRateConversion, gemHpConversion, historyId, historyId, historyId, historyId, historyId",True
buyStarterPack(),"starterPackOnSale, starterPackPrice, marketplace, totalDeveloperCut, totalDeveloperCut, starterPackPrice, hogsmashToken, marketplace, starterPackCardLevel",True
"updateAvatar(uint256,uint256)","avatarFee, cards",False
generateInitialCard(uint16),"marketplace, hogsmashToken, marketplace",True
"distributeTokensToRank(,uint256)","rankTokens, rankTokens, totalRankTokens, totalRankTokens",False
withdrawBalance(),"totalDeveloperCut, totalDeveloperCut, owner",True
isMarketplace(),,False
ownerOf(uint256),,False
balanceOf(address),,False
tokensOf(address),,False
mint(address),,False
"setTokenURI(uint256,string)",,False
"setApprovalForAllByContract(address,address,bool)",,False
