Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",,True
"transferFrom(address,address,uint256)",_allowed,True
"increaseAllowance(address,uint256)",_allowed,True
"decreaseAllowance(address,uint256)",_allowed,True
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
isPauser(address),_pausers,False
addPauser(address),,False
renouncePauser(),,True
paused(),_paused,False
pause(),_paused,True
unpause(),_paused,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
"increaseAllowance(address,uint)",,False
"decreaseAllowance(address,uint)",,False
burn(uint256),,True
"burnFrom(address,uint256)",,False
constructor(),INITIAL_SUPPLY,True
"transferTokens(address,uint256)",,True
constructor(),darknodeRegistry,False
"slash(address,address,address)",darknodeRegistry,False
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),_pendingOwner,False
claimOwnership(),"_owner, _pendingOwner, _owner, _pendingOwner, _pendingOwner",False
"constructor(string,)","VERSION, ren",False
"appendDarknode(address,address,uint256,bytes,uint256,uint256)","darknodeRegistry, darknodes",False
begin(),darknodes,False
next(address),darknodes,False
removeDarknode(address),"darknodeRegistry, darknodeRegistry, darknodes, ren",True
"updateDarknodeBond(address,uint256)","darknodeRegistry, darknodeRegistry, ren",True
"updateDarknodeDeregisteredAt(address,uint256)",darknodeRegistry,False
darknodeOwner(address),darknodeRegistry,False
darknodeBond(address),darknodeRegistry,False
darknodeRegisteredAt(address),darknodeRegistry,False
darknodeDeregisteredAt(address),darknodeRegistry,False
darknodePublicKey(address),darknodeRegistry,False
"constructor(string,,,uint256,uint256,uint256)","VERSION, store, ren, minimumBond, nextMinimumBond, minimumBond, minimumPodSize, nextMinimumPodSize, minimumPodSize, minimumEpochInterval, nextMinimumEpochInterval, minimumEpochInterval, currentEpoch, numDarknodes, numDarknodesNextEpoch, numDarknodesPreviousEpoch",False
"register(address,bytes)","minimumBond, ren, store, store, currentEpoch, minimumEpochInterval, numDarknodesNextEpoch, numDarknodesNextEpoch",True
deregister(address),,False
epoch(),"previousEpoch, currentEpoch, minimumEpochInterval, previousEpoch, currentEpoch, currentEpoch, numDarknodesPreviousEpoch, numDarknodes, numDarknodes, numDarknodesNextEpoch, nextMinimumBond, minimumBond, minimumBond, nextMinimumBond, minimumBond, nextMinimumBond, nextMinimumPodSize, minimumPodSize, minimumPodSize, nextMinimumPodSize, minimumPodSize, nextMinimumPodSize, nextMinimumEpochInterval, minimumEpochInterval, minimumEpochInterval, nextMinimumEpochInterval, minimumEpochInterval, nextMinimumEpochInterval, nextSlasher, slasher, slasher, nextSlasher, slasher, nextSlasher",True
transferStoreOwnership(address),store,True
claimStoreOwnership(),store,False
updateMinimumBond(uint256),nextMinimumBond,False
updateMinimumPodSize(uint256),nextMinimumPodSize,False
updateMinimumEpochInterval(uint256),nextMinimumEpochInterval,False
updateSlasher(),nextSlasher,False
"slash(address,address,address)","store, store, ren, store, ren, store",True
refund(address),"store, store, store, ren",True
getDarknodeOwner(address),store,False
getDarknodeBond(address),store,False
getDarknodePublicKey(address),store,False
"getDarknodes(address,uint256)",numDarknodes,False
"getPreviousDarknodes(address,uint256)",numDarknodesPreviousEpoch,False
isPendingRegistration(address),"store, currentEpoch",False
isPendingDeregistration(address),"store, currentEpoch",False
isDeregistered(address),"store, currentEpoch",False
isDeregisterable(address),store,False
isRefunded(address),"store, store",False
isRefundable(address),"store, previousEpoch",False
isRegistered(address),currentEpoch,False
isRegisteredInPreviousEpoch(address),previousEpoch,False
constructor(string),VERSION,False
function()externalpayable{}(),,False
isBlacklisted(address),darknodeBlacklist,False
isWhitelisted(address),darknodeWhitelist,False
totalBalance(address),ETHEREUM,False
availableBalance(address),lockedBalances,False
blacklist(address),"darknodeBlacklist, darknodeWhitelist, darknodeWhitelistLength, darknodeWhitelistLength",False
whitelist(address),"darknodeWhitelist, darknodeWhitelistLength",False
"incrementDarknodeBalance(address,address,uint256)","darknodeBalances, darknodeBalances, lockedBalances, lockedBalances",False
"transfer(address,address,uint256,address)","darknodeBalances, darknodeBalances, darknodeBalances, lockedBalances, lockedBalances, ETHEREUM",True
"constructor(string,,,uint256)","VERSION, darknodeRegistry, store, cycleDuration, blacklister, currentCycle, cycleStartTime, cycleTimeout, cycleStartTime, cycleDuration",True
"withdraw(address,address)","darknodeRegistry, store, store",True
"withdrawMultiple(address,)",,False
"function()externalpayable{address(store).transfer(msg.value);emitLogPaymentReceived(msg.sender,msg.value,ETHEREUM);}()","store, ETHEREUM",True
currentCycleRewardPool(address),"store, unclaimedRewards",False
"darknodeBalances(address,address)",store,False
changeCycle(),"cycleTimeout, currentCycle, registeredTokens, registeredTokens, previousCycle, currentCycle, currentCycle, cycleStartTime, cycleTimeout, cycleStartTime, cycleDuration, shareCount, store, currentCycle, previousCycle, cycleTimeout, currentCycle",False
"deposit(uint256,address)","ETHEREUM, store, store",True
claim(address),"store, store, cycleStartTime, previousCycle",False
blacklist(address),store,False
registerToken(address),"registeredTokenIndex, pendingTokens, pendingTokens, pendingTokens",False
deregisterToken(address),registeredTokenIndex,False
updateBlacklister(address),"blacklister, blacklister",False
updateCycleDuration(uint256),"cycleDuration, cycleDuration, cycleDuration",False
transferStoreOwnership(address),store,True
claimStoreOwnership(),store,False
