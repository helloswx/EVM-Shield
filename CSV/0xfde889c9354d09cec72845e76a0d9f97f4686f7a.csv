Function Name,State Variables Modified,Can Transfer Ether
constructor(),"administrators, administrators, administrators, ambassadors_, ambassadors_, ambassadors_, ambassadors_, ambassadors_",False
"buy(address,bytes32)",,False
"function()payablepublic{if(botPhase){revert();}else{purchaseInternal(msg.value,0x0);}}()",botPhase,False
payBankRoll(),"totalEthBankrollCollected, totalEthBankrollReceived, totalEthBankrollReceived, totalEthBankrollReceived, giveEthBankRollAddress, totalEthBankrollReceived, totalEthBankrollReceived",True
reinvest(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
exit(),tokenBalanceLedger_,True
withdraw(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
sell(uint256),"tokenBalanceLedger_, sellDividendFee_, bankRollFee_, totalEthBankrollCollected, totalEthBankrollCollected, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
"transfer(address,uint256)","tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, payoutsTo_, profitPerShare_, payoutsTo_, profitPerShare_",True
"transfer(address,uint256,bytes)","tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, payoutsTo_, profitPerShare_, payoutsTo_, profitPerShare_",True
openTheRabbitHole(),"onlyAmbassadors, botPhase",False
"setAdministrator(address,bool)",administrators,False
setStakingRequirement(uint256),stakingRequirement,False
setName(string),name,False
setSymbol(string),symbol,False
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(bool),referralBalance_,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, sellDividendFee_, bankRollFee_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, buyDividendFee_, bankRollFee_",False
calculateTokensReceived(uint256),"buyDividendFee_, bankRollFee_",False
calculateEthereumReceived(uint256),"tokenSupply_, sellDividendFee_, bankRollFee_",False
etherToSendBankRoll(),"totalEthBankrollCollected, totalEthBankrollReceived",False
