Function Name,State Variables Modified,Can Transfer Ether
Owned(),"owner, owners",True
addOwner(address),owners,False
removeOwner(),owners,True
removeOwner(address),owners,False
isOwner(address),owners,False
"receiveApproval(address,uint256,address,bytes)",,False
"TokenERC20(uint256,string,string,uint8)","totalSupply, balanceOf, totalSupply, name, symbol, decimals",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, allowance, balanceOf, allowance, totalSupply",True
"MifflinToken(address,uint8,uint256,string,string,uint8)","tokenId, tokenId",False
"give(address,uint256)",,True
"take(address,uint256)",,True
"freezeAccount(address,bool)",frozenAccount,False
setBuyPrice(uint256),buyPrice,False
sell(uint256),,True
BeetBuck(address),"buyPrice, decimals",False
function()payablepublic{contribution(msg.value);uint256amountToGive=0;uint256price=buyPrice;if(totalBought<10000){price-=price*15/100;}elseif(totalBought<50000){price-=price/10;}elseif(totalBought<100000){price-=price/20;}elseif(totalBought<200000){price-=price/100;}amountToGive+=msg.value/price;buy(amountToGive);}(),"buyPrice, totalBought, totalBought, totalBought, totalBought",False
NapNickel(address),"buyPrice, decimals",False
"function()payablepublic{contribution(msg.value);uint256price=buyPrice;uint256estTime=block.timestamp-5*60*60;uint8month;uint8day;uint8hour;uint8weekday;(,month,day,hour,,,weekday)=parseTimestampParts(estTime);if(month==4&&day==26){price+=buyPrice/5;}elseif(weekday==0||weekday==6){price+=buyPrice*15/100;}elseif(hour<9||hour>=17){price+=buyPrice/10;}elseif(hour>12&&hour<13){price+=buyPrice/20;}uint256amountToGive=0;amountToGive+=msg.value/price;buy(amountToGive);}()","buyPrice, buyPrice, buyPrice, buyPrice, buyPrice",False
isLeapYear(uint16),,False
leapYearsBefore(uint),,False
"getDaysInMonth(uint8,uint16)",,False
parseTimestampParts(uint),,False
getYear(uint),,False
getMonth(uint),,False
getDay(uint),,False
getHour(uint),,False
getMinute(uint),,False
getSecond(uint),,False
getWeekday(uint),,False
QuabityQuarter(address),"buyPrice, decimals",False
"function()payablepublic{contribution(msg.value);uint256amountToGive=0;amountToGive+=msg.value/buyPrice;uint256time=block.timestamp;uint256diff=time-lastContributionTime/60/60;uint256chance=0;if(diff>96)chance=50;if(diff>48)chance=40;elseif(diff>24)chance=30;elseif(diff>12)chance=20;elseif(diff>1)chance=10;elsechance=5;if(chance>0){uint256lastBlockHash=uint256(keccak256(block.blockhash(block.number-1),uint8(0)));if(lastBlockHash%100<chance){amountToGive+=amountToGive/10;}}buy(amountToGive);}()",buyPrice,False
KelevinKoin(address),"buyPrice, decimals",False
"function()payablepublic{contribution(msg.value);uint256lastBlockHash=uint256(keccak256(block.blockhash(block.number-1),uint8(0)));uint256newPrice=buyPrice+((lastBlockHash%(buyPrice*69/1000))-(buyPrice*69*2/1000));buyPrice=newPrice;uint256amountToGive=msg.value/buyPrice;if(buyPrice%msg.value==0)amountToGive+=amountToGive*69/1000;buy(amountToGive);}()","buyPrice, buyPrice, buyPrice, buyPrice, buyPrice, buyPrice",False
NnexNote(address),"buyPrice, decimals",False
function()payablepublic{contribution(msg.value);uintmaxDiscountRange=buyPrice*100;uintdiscountPercent;if(msg.value>=maxDiscountRange)discountPercent=100;elsediscountPercent=msg.value/maxDiscountRange*100;uintprice=buyPrice-(buyPrice/2)*(discountPercent/100);uintamountToGive=msg.value/price;buy(amountToGive);}(),"buyPrice, buyPrice, buyPrice",False
DundieDollar(address),"buyPrice, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awards, awardsCount",False
addAward(string),"awards, awardsCount, name, awardsCount",False
function()payablepublic{contribution(msg.value);uint256amountToGive=msg.value/buyPrice;buy(amountToGive);}(),buyPrice,False
"awardBalanceOf(address,uint8)",awardsOf,False
awardName(uint8),awards,False
MifflinMarket(),,False
"setToken(uint8,address)",tokenIds,False
removeToken(uint8),tokenIds,False
setActive(bool),,False
getRewardToken(),,False
getTokenById(uint8),"tokenIds, tokenIds",False
getTokenByAddress(address),"tokenIds, tokenId",False
"exchangeTokensByAddress(uint256,address,address)","totalExchanged, totalExchanged",True
"exchangeTokensById(uint256,uint8,uint8)","tokenIds, tokenIds",False
highContributionAward(address),,False
lowContributionAward(address),,False
