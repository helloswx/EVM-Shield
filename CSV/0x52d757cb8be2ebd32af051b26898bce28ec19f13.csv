Function Name,State Variables Modified,Can Transfer Ether
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
constructor(address),,False
setGameAddress(address),gameAddress,False
"buyTokens(address,uint256)",,False
startEthLottery(),isEthLottery,False
startTokensLottery(),isTokensLottery,False
restartEthLottery(),"ethLotteryParticipants, ethLotteryBalances, ethLotteryParticipants, ethLotteryParticipants, ethLotteryBank, isEthLottery",False
restartTokensLottery(),"tokensLotteryParticipants, tokensLotteryBalances, tokensLotteryParticipants, tokensLotteryParticipants, tokensLotteryBank, isTokensLottery",False
updateEthLotteryBank(uint256),"ethLotteryBank, ethLotteryBank",False
updateTokensLotteryBank(uint256),"tokensLotteryBank, tokensLotteryBank",False
"swapTokens(address,uint256)",investTokenAddress,True
sendToEthLottery(uint256),"isEthLottery, ethLotteryParticipants, maxLotteryParticipants, ethLotteryBalances, ethLotteryParticipants, ethLotteryBalances, ethLotteryBalances, ethLotteryBank, ethLotteryBank",True
sendToTokensLottery(uint256),"isTokensLottery, tokensLotteryParticipants, maxLotteryParticipants, tokensLotteryBalances, tokensLotteryParticipants, tokensLotteryBalances, tokensLotteryBalances, tokensLotteryBank, tokensLotteryBank",True
ethLotteryParticipants(),ethLotteryParticipants,False
tokensLotteryParticipants(),tokensLotteryParticipants,False
setInvestTokenAddress(address),investTokenAddress,False
setMaxLotteryParticipants(uint256),maxLotteryParticipants,False
getHolders(),holders,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
constructor(address),"bonusToken, swapTokensLimit, swapTokensLimit, swapTokensLimit",False
function()publicpayable{if(msg.sender!=gameAddress){addressreferrer;if(msg.data.length==20){referrer=bytesToAddress(bytes(msg.data));}buyTokens(referrer);}}(),gameAddress,True
buyTokens(address),"isUser, referrers, isUser, MIN_HOLDERS_BALANCE, holders",True
sellTokens(uint256),,True
swapTokens(uint256),"TOKENS_DIVIDER, swapTokensLimit, bonusToken, bonusToken, swapTokensLimit, swapTokensLimit, priceCoeff, priceCoeff",True
reinvest(uint256),"ethStorage, ethStorage, ethStorage, ethStorage",True
withdraw(uint256),"ethStorage, ethStorage",True
sendDividendsToHolders(uint),"holdersIndex, totalInvestDividends, investDividends, totalCasinoDividends, casinoDividends, holders, holdersIndex, holders, holdersIndex, holders, holdersIndex, MIN_HOLDERS_BALANCE, totalInvestDividends, totalInvestDividends, investDividends, investDividends, holders, holdersIndex, ethStorage, holders, holdersIndex, ethStorage, holders, holdersIndex, totalCasinoDividends, totalCasinoDividends, casinoDividends, casinoDividends, holders, holdersIndex, ethStorage, holders, holdersIndex, ethStorage, holders, holdersIndex, holdersIndex, holdersIndex, holdersIndex, holders, holdersIndex",False
setGameAddress(address),gameAddress,False
"sendToGame(address,uint256)",gameAddress,True
gameDividends(uint256),"casinoDividends, casinoDividends",False
price(),"priceCoeff, a",False
constructor(address),"callbackGas, beneficiar",True
"placeBet(uint,,uint)","MIN_ETH_BET, MIN_TOKENS_BET, investToken, GAME_COIN_FlIP, GAME_DICE, GAME_TWO_DICE, GAME_ETHEROLL, GAME_COIN_FlIP, GAME_DICE, GAME_TWO_DICE, GAME_ETHEROLL, isBet, players, isBet, betsBalances, betsBalances, queries, queries, queries, queries",True
ethLottery(),"lastEthLotteryTime, bonusToken, ethLotterySize, bonusToken, bonusToken, bonusToken, holdersInEthLottery, ethLotteryRound, bonusToken, ethLotteryQueryId",False
tokensLottery(),"lastTokensLotteryTime, bonusToken, tokensLotterySize, bonusToken, bonusToken, bonusToken, holdersInTokensLottery, tokensLotteryRound, bonusToken, tokensLotteryQueryId",False
sendBonusTokens(uint),"lastSendBonusTokensTime, players, playersIndex, players, playersIndex, players, playersIndex, betsBalances, betsBalances, bonusToken, playersIndex, playersIndex, players, playersIndex, lastSendBonusTokensTime",False
refundEthPrize(),"waitingEthPrizes, waitingEthPrizes, waitingEthPrizes, waitingEthPrizes",True
refundTokensPrize(),"waitingTokensPrizes, investToken, waitingTokensPrizes, waitingTokensPrizes, waitingTokensPrizes, investToken",True
setOraclizeGasPrice(uint),,False
setOraclizeGasLimit(uint),callbackGas,True
setBeneficiar(address),beneficiar,False
setInvestToken(address),"investToken, investTokenAddress",False
setBonusToken(address),bonusToken,False
getFund(uint),,True
getBeneficiarFund(),"beneficiar, beneficiarFund, beneficiarFund",True
"__callback(bytes32,string,bytes)","queries, GAME_ETHEROLL, ethLotteryQueryId, bonusToken, ethLotteryStage, ethLotterySize, ethLotteryStage, ethLotterySize, ethLotteryStage, ethLotterySize, ethLotteryStage, ethLotterySize, ethLotterySize, holdersInEthLottery, holdersInEthLottery, minEthRanges, maxEthRanges, bonusToken, ethLotteryRound, ethLotteryStage, bonusToken, bonusToken, ethLotteryStage, holdersInEthLottery, holdersInEthLottery, ethLotterySize, ethLotteryStage, lastEthLotteryTime, bonusToken, ethLotteryQueryId, tokensLotteryQueryId, bonusToken, tokensLotteryStage, tokensLotterySize, tokensLotteryStage, tokensLotterySize, tokensLotteryStage, tokensLotterySize, tokensLotteryStage, tokensLotterySize, tokensLotterySize, holdersInTokensLottery, holdersInTokensLottery, minTokensRanges, maxTokensRanges, bonusToken, tokensLotteryRound, tokensLotteryStage, bonusToken, bonusToken, tokensLotteryStage, holdersInTokensLottery, holdersInTokensLottery, tokensLotterySize, tokensLotteryStage, lastTokensLotteryTime, bonusToken, tokensLotteryQueryId",True
