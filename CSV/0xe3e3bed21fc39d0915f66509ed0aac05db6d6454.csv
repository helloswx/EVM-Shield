Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
requestOwnershipTransfer(address),"newOwnerCandidate, newOwnerCandidate",True
acceptOwnership(),"owner, owner, newOwnerCandidate, newOwnerCandidate, owner",False
balanceOf(address),,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,True
"allowance(address,address)",,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"tokenFallback(address,uint,bytes)",,False
"transferAndCall(address,uint,bytes)",,False
"transferAndCall(address,uint,bytes)",,True
"transferAnyERC20Token(address,uint256)",owner,True
"ColuLocalCurrency(string,string,uint8,uint256,string)","totalSupply, name, symbol, decimals, tokenURI, totalSupply",True
setTokenURI(string),tokenURI,False
"tokenFallback(address,uint,bytes)",,True
supportsToken(address),,False
"EllipseMarketMaker(address,address,address)",,True
supportsToken(address),"token1, token2",False
"function()public{address_mmLib=mmLib;if(msg.data.length>0){assembly{calldatacopy(0xff,0,calldatasize)letretVal:=delegatecall(gas,_mmLib,0xff,calldatasize,0,0x20)switchretValcase0{revert(0,0)}default{return(0,0x20)}}}}()",mmLib,True
getCurrentPrice(),,False
"change(address,uint,address)",,False
"change(address,uint,address,uint)",,False
change(address),,False
"change(address,uint)",,False
"quote(address,uint,address)",,False
openForPublicTrade(),,False
isOpenForPublic(),,False
supportsToken(address),,False
"calcReserve(uint256,uint256,uint256)",,False
validateReserves(),,False
withdrawExcessReserves(),,False
initializeAfterTransfer(),,False
initializeOnTransfer(),,False
"getPrice(uint256,uint256,uint256,uint256)",,False
"CurrencyFactory(address,address)","mmLibAddress, clnAddress",False
"createCurrency(string,string,uint8,uint256,string)","mmLibAddress, clnAddress, currencyMap, tokens",True
"createCurrency(string,string,uint8,uint256)",,False
"insertCLNtoMarketMaker(address,uint256)","clnAddress, clnAddress, clnAddress",True
insertCLNtoMarketMaker(address),"clnAddress, clnAddress",True
"extractCLNfromMarketMaker(address,uint256)","clnAddress, clnAddress",True
extractCLNfromMarketMaker(),"clnAddress, clnAddress",True
openMarket(address),,True
supportsToken(address),"clnAddress, currencyMap",False
"setTokenURI(address,string)",,False
getMarketMakerAddressFromToken(address),currencyMap,False
