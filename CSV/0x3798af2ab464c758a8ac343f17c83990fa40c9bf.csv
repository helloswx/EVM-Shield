Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
constructor(),"fundsWallet, claimPool, foundationWallet, fundsWallet, totalSupply, maxTotalSupply, unitsPerTransaction, name, decimals, symbol, initialFoundationSupply, foundationWallet, foundationWallet, initialFoundationSupply, fundsWallet, fundsWallet, initialFoundationSupply, fundsWallet, foundationWallet, initialFoundationSupply, tokensDistributed, initialFoundationSupply, numDistributionsRemaining, totalSupply, tokensDistributed, unitsPerTransaction, numDistributions",False
totalSupply(),totalSupply,False
maxTotalSupply(),maxTotalSupply,False
balanceOf(address),,False
mint(),"claimPool, claimPool, claimPool, claimPool, foundationWallet, foundationWallet, claimPool, claimPool, foundationWallet",True
"transfer(address,uint)","claimPool, claimPool, claimPool",True
"approve(address,uint)",,True
"transferFrom(address,address,uint)",claimPool,True
"allowance(address,address)",,False
"approveAndCall(address,uint,bytes)",,True
"function()publicpayable{if(numDistributionsRemaining>0&&balances[msg.sender]==0&&balances[fundsWallet]>=unitsPerTransaction){uinttokens=unitsPerTransaction;balances[msg.sender]=safeAdd(balances[msg.sender],tokens);balances[fundsWallet]=safeSub(balances[fundsWallet],tokens);tokensDistributed=safeAdd(tokensDistributed,tokens);numDistributions=safeAdd(numDistributions,1);numDistributionsRemaining=safeSub(numDistributionsRemaining,1);emitTransfer(fundsWallet,msg.sender,tokens);}else{mint();}msg.sender.transfer(msg.value);}()","numDistributionsRemaining, fundsWallet, unitsPerTransaction, unitsPerTransaction, fundsWallet, fundsWallet, tokensDistributed, tokensDistributed, numDistributions, numDistributions, numDistributionsRemaining, numDistributionsRemaining, fundsWallet",True
"transferAnyERC20Token(address,uint)",owner,True
