Function Name,State Variables Modified,Can Transfer Ether
"getAttribute(,bytes32,string)",,False
"setAttribute(,bytes32,string,uint)",,False
isEmpty(),,False
"contains(,uint)",,False
"getNext(,uint)",,False
"getPrev(,uint)",,False
getStart(),,False
getEnd(),,False
"insert(,uint,uint,uint)",,False
"remove(,uint)",,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
init(address),"token, token, pollNonce, INITIAL_POLL_NONCE",False
requestVotingRights(uint),"token, voteTokenBalance, token",True
withdrawVotingRights(uint),"voteTokenBalance, voteTokenBalance, token",True
rescueTokens(uint),pollMap,True
rescueTokensInMultiplePolls(),,False
"commitVote(uint,bytes32,uint,uint)","voteTokenBalance, voteTokenBalance, voteTokenBalance, pollMap",True
"commitVotes(,,,)",,False
"validPosition(uint,uint,address,uint)",,False
"revealVote(uint,uint,uint)","pollMap, pollMap, pollMap, pollMap, pollMap, pollMap, pollMap",True
"revealVotes(,,)",,False
"getNumPassingTokens(address,uint,uint)",pollMap,False
"startPoll(uint,uint,uint)","pollNonce, pollNonce, pollMap, pollNonce, pollNonce, pollNonce",True
isPassed(uint),pollMap,False
getTotalNumberOfTokensForWinningOption(uint),"pollMap, pollMap",False
pollEnded(uint),pollMap,False
commitPeriodActive(uint),pollMap,False
revealPeriodActive(uint),pollMap,False
"didCommit(address,uint)",pollMap,False
"didReveal(address,uint)",pollMap,False
pollExists(uint),pollNonce,False
"getCommitHash(address,uint)",,False
"getNumTokens(address,uint)",,False
getLastNode(address),,False
getLockedTokens(address),,False
"getInsertPointForNumTokens(address,uint,uint)",,False
isExpired(uint),,False
"attrUUID(address,uint)",,False
"init(address,address,)","token, voting, token, voting",False
"proposeReparameterization(string,uint)","proposals, PROCESSBY, token, proposals",True
challengeReparameterization(bytes32),"proposals, voting, challenges, proposals, token, voting",True
processProposal(bytes32),"proposals, proposals, token, proposals, token, PROCESSBY, proposals",True
"claimReward(uint,uint)","challenges, challenges, voting, challenges, challenges, challenges, token",True
"claimRewards(,)",,False
"voterReward(address,uint,uint)","challenges, challenges, voting",False
canBeSet(bytes32),proposals,False
propExists(bytes32),proposals,False
challengeCanBeResolved(bytes32),"proposals, challenges, voting",False
challengeWinnerReward(uint),"voting, challenges, challenges, challenges",False
get(string),params,False
"tokenClaims(uint,address)",challenges,False
"createManyProxies(uint256,address,bytes)",,False
"createProxy(address,bytes)",,False
"EIP20(uint256,string,uint8,string)","totalSupply, name, decimals, symbol",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
balanceOf(address),,False
"approve(address,uint256)",,True
"allowance(address,address)",,False
newPLCRBYOToken(),"proxyFactory, canonizedPLCR",True
"newPLCRWithToken(uint,string,uint8,string)","token, proxyFactory, canonizedPLCR, token, token",True
constructor(),"plcrFactory, proxyFactory, plcrFactory, canonizedParameterizer",False
"newParameterizerBYOToken(,)","plcrFactory, proxyFactory, canonizedParameterizer, parameterizer, parameterizer, parameterizer",True
"newParameterizerWithToken(uint,string,uint8,string,)","plcrFactory, token, proxyFactory, canonizedParameterizer, parameterizer, token, token, parameterizer, parameterizer",True
"init(address,address,address,string)","token, voting, parameterizer, token, voting, parameterizer, name",False
"apply(bytes32,uint,string)","parameterizer, listings, parameterizer, token",True
"deposit(bytes32,uint)","listings, token",True
"withdraw(bytes32,uint)","listings, parameterizer, token",True
exit(bytes32),"listings, challenges",True
"challenge(bytes32,string)","listings, parameterizer, challenges, voting, parameterizer, parameterizer, parameterizer, challenges, parameterizer, token, voting",True
updateStatus(bytes32),,False
updateStatuses(),,False
"claimReward(uint,uint)","challenges, challenges, voting, challenges, challenges, challenges, token",True
"claimRewards(,)",,False
"voterReward(address,uint,uint)","challenges, challenges, voting",False
canBeWhitelisted(bytes32),"listings, listings, challenges",False
isWhitelisted(bytes32),listings,False
appWasMade(bytes32),listings,False
challengeExists(bytes32),"listings, listings, challenges",False
challengeCanBeResolved(bytes32),"listings, voting",False
determineReward(uint),"challenges, voting, voting, challenges, challenges, challenges",False
"tokenClaims(uint,address)",challenges,False
constructor(),"parameterizerFactory, proxyFactory, parameterizerFactory, canonizedRegistry",False
"newRegistryBYOToken(,,string)","parameterizerFactory, parameterizer, proxyFactory, canonizedRegistry, parameterizer, parameterizer",True
"newRegistryWithToken(uint,string,uint8,string,,string)","parameterizerFactory, parameterizer, token, parameterizer, proxyFactory, canonizedRegistry, token, parameterizer, token, parameterizer",True
