Function Name,State Variables Modified,Can Transfer Ether
migrate(),"migrationAgent, totalMigrated, totalMigrated, migrationAgent, migrationAgent",True
setMigrationAgent(address),"migrationAgent, migrationAgent",False
"transfer_coins(address,uint)","owner_1, owner_2, token",True
my_token_balance(),token,False
"function()has_valuepayableexternal{if(my_token_balance()==0)revert();varcan_buy=wdiv(cast(msg.value),cast(price));can_buy=wadd(can_buy,cast(get_bonus(can_buy)));varbuy_amount=cast(min(can_buy,my_token_balance()));if(can_buy>buy_amount)revert();total_raised=add(total_raised,msg.value);dev_multisig.transfer(this.balance);token.transfer(msg.sender,buy_amount);Purchased(msg.sender,msg.value,buy_amount);}()","price, total_raised, total_raised, dev_multisig, token",True
successfully_closed(),"start_time, end_time, total_raised, goal",False
time(),,False
"function()has_valuein_timepayableexternal{if(my_token_balance()==0)revert();varcan_buy=wdiv(cast(msg.value),cast(get_current_price()));can_buy=wadd(can_buy,cast(get_bonus(can_buy)));varbuy_amount=cast(min(can_buy,my_token_balance()));if(can_buy>buy_amount)revert();total_raised=add(total_raised,msg.value);funded[msg.sender]=add(funded[msg.sender],msg.value);token.transfer(msg.sender,buy_amount);Purchased(msg.sender,msg.value,buy_amount);}()","total_raised, total_raised, token",True
