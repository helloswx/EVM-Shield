Function Name,State Variables Modified,Can Transfer Ether
refundPendingBets(),,False
incrementBetCounter(),,False
"calculateWinningReward(uint256,uint256,uint256)",,False
"calculateTokenReward(address,uint256,uint256,uint256)",,False
"generateRandomNumber(address,uint256,uint256,uint256)",,False
"calculateClearBetBlocksReward(address,address)",,False
"calculateLotteryContribution(address,address,uint256)",,False
"calculateExchangeTokenValue(address,uint256)",,False
"claimReward(address,uint256)",,False
calculateLotteryContributionPercentage(),,False
getNumLottery(),,False
isActive(),,False
getCurrentTicketMultiplierHonor(),,False
getCurrentLotteryTargetBalance(),,False
uintSettings(bytes32),,False
boolSettings(bytes32),,False
isActive(),,False
"canBet(uint256,uint256,uint256,uint256)",,False
"isExchangeAllowed(address,uint256)",,False
"spinwinSetUintSetting(bytes32,uint256)",,False
spinwinIncrementUintSetting(bytes32),,False
"spinwinSetBoolSetting(bytes32,bool)",,False
spinwinAddFunds(uint256),,False
spinwinUpdateTokenToWeiExchangeRate(),,False
spinwinRollDice(uint256),,False
spinwinUpdateWinMetric(uint256),,False
"spinwinUpdateLoseMetric(uint256,uint256)",,False
spinwinUpdateLotteryContributionMetric(uint256),,False
spinwinUpdateExchangeMetric(uint256),,False
"spinlotterySetUintSetting(bytes32,uint256)",,False
spinlotteryIncrementUintSetting(bytes32),,False
"spinlotterySetBoolSetting(bytes32,bool)",,False
spinlotteryUpdateTokenToWeiExchangeRate(),,False
spinlotterySetMinBankroll(uint256),,False
getTotalSupply(),,False
getBalanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"approveAndCall(address,uint256,bytes)",,False
burn(uint256),,False
"burnFrom(address,uint256)",,False
"mintTransfer(address,uint)",,False
"burnAt(address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(uint256,string,string)","totalSupply, decimals, balanceOf, totalSupply, name, symbol",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, allowance, balanceOf, allowance, totalSupply",True
constructor(),developer,True
changeDeveloper(address),developer,False
withdrawToken(address),developer,True
"constructor(address,address,address)","tokenAddress, settingAddress, _spintoken, _setting, _lib",False
devSetLotteryAddress(address),"lotteryAddress, _lottery",False
devSetAdvertisingAddress(address),_advertising,False
devGetBetInternalId(bytes32),betIdLookup,False
devGetBet(uint256),bets,False
devRefundBet(bytes32),"betIdLookup, bets, betIdLookup, betIdLookup",False
function()publicpayableisActive{_setting.spinwinAddFunds(msg.value);}(),_setting,False
refundPendingBets(),"settingAddress, _setting, bets, playerPendingWithdrawals, playerPendingWithdrawals",True
"rollDice(uint256,uint256,bytes32,address)","_setting, _advertising",True
clearBets(),"_setting, _setting, bets, betIdLookup, _setting",True
claimLotteryBlocks(),"_lottery, lotteryBlocksAmount, lotteryBlocksAmount, lotteryBlocksAmount, _lottery, lotteryBlocksAmount, _lottery",True
exchangeToken(uint256),"_lib, settingAddress, _setting, _setting, tokenExchanges, _setting, _spintoken, playerPendingWithdrawals, playerPendingWithdrawals, _setting, _setting",True
"calculateWinningReward(uint256,uint256,uint256)",_lib,False
"calculateTokenReward(uint256,uint256,uint256)","_lib, settingAddress",False
playerWithdrawPendingTransactions(),"playerPendingWithdrawals, playerPendingWithdrawals, playerPendingWithdrawals, playerPendingWithdrawals",True
playerWithdrawPendingTokenTransactions(),"playerPendingTokenWithdrawals, playerPendingTokenWithdrawals, playerPendingTokenWithdrawals, _spintoken, playerPendingTokenWithdrawals",True
playerGetBet(bytes32),"betIdLookup, bets, betIdLookup, bets, betIdLookup",False
playerGetPendingBetIds(),"totalPendingBets, totalPendingBets, _setting, bets, totalPendingBets",False
playerGetPendingBet(bytes32),"betIdLookup, bets, betIdLookup, bets, betIdLookup",False
calculateClearBetBlocksReward(),"_lib, settingAddress, lotteryAddress",False
