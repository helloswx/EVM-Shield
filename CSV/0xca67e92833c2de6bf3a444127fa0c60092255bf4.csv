Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
setPresaleCont(address),presaleCont,False
"addHolder(address,uint,uint8,uint)","holderList, holderList, holderList, holderList, holderList, holderIndexes, holderIndex, holderIndex, holderList, holderList, holderList",True
unlockTokens(),"holderList, holderList, holderList, OppToken, holderList, holderList, holderList",True
addAssetsOwner(address),"assetOwnersIndexes, assetOwners, assetOwnersIndexes, assetOwnersIndex, assetOwnersIndexes",False
removeAssetsOwner(address),"assetOwnersIndex, assetOwnersIndex, assetOwners, assetOwnersIndexes",False
getAssetsOwners(uint),assetOwners,False
startPresale(),"state, state",False
endPresale(),"state, state",False
"addToWhitelist(address,uint,uint8,uint8)","state, state, whiteList, whiteList, whiteList, whitelistIndexes, whitelistIndex, whitelistIndex, whiteList, whiteList, whiteList, whiteList, whiteList, endSaleDate, whiteList, whiteList, endSaleDate, whiteList, whiteList, endSaleDate, whiteList, whiteList, endSaleDate, whiteList, whiteList, whiteList",False
"function()whenNotPausedpublicpayable{require(state==SaleState.SALE);require(msg.value>=0.3ether);require(whiteList[msg.sender].isActive);if(now>endDate){state=SaleState.ENDED;msg.sender.transfer(msg.value);return;}WhitelistContributormemorycontrib=whiteList[msg.sender];require(contrib.invAmount<=msg.value||contrib.payed);if(whiteList[msg.sender].payed==false){whiteList[msg.sender].payed=true;}ethRaised+=msg.value;uinttokenAmount=msg.value.div(price);tokenAmount+=tokenAmount.mul(contrib.bonus).div(100);tokenAmount*=10**18;tokenRaised+=tokenAmount;holdContract.addHolder(msg.sender,tokenAmount,contrib.holdPeriod,contrib.holdTimestamp);AddedToHolder(msg.sender,tokenAmount,contrib.holdPeriod,contrib.holdTimestamp);FundTransfered(msg.sender,msg.value);}()","state, whiteList, endDate, state, whiteList, whiteList, whiteList, ethRaised, price, tokenRaised, holdContract",True
sendTokensToHold(),"state, tokenRaised, token, holdContract, tokenRaised, tokensTransferredToHold, holdContract, tokenRaised",True
getTokensBack(),"state, tokensTransferredToHold, token",True
setEndSaleDate(uint),"state, endSaleDate, endSaleDate",False
setEndDate(uint),"state, state, endDate, endDate",False
getEthRaised(),ethRaised,False
