Function Name,State Variables Modified,Can Transfer Ether
name(),name,False
symbol(),symbol,False
decimals(),decimals,False
totalSupply(),totalSupply,False
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",selfAddress,False
"approve(address,uint256)",,True
"approve(address,uint256,uint256)",,True
"transfer(address,uint256)",selfAddress,True
"transfer(address,uint256,bytes)",selfAddress,True
"checkCooldown(address,address)",,False
checkMonthlyLimit(address),,False
claimTokens(address),"selfAddress, selfAddress, admin",True
emergencyFreeze(),isFrozen,False
emergencyThaw(),isFrozen,False
emergencySplitToggle(),"splitInService, splitInService",False
"setPriceOfEther(uint256,string)","pricePerEther, selfAddress",False
getPricePerToken(),"selfAddress, selfAddress, selfAddress",False
splitProfits(),"splitInService, isFrozen, relativeDateSave, selfAddress, relativeDateSave, currentProfits, selfAddress, amountInCirculation, selfAddress, currentIteration, actualProfitSplit, currentIteration, users, users, currentIteration, selfAddress, users, users, selfAddress, users, users, users, currentProfits, amountInCirculation, actualProfitSplit, users, currentProfits, amountInCirculation, selfAddress, users, users, amountInCirculation, currentProfits",False
ICOSplit(),"isFrozen, relativeDateSave, relativeDateSave, selfAddress, currentProfits, selfAddress, amountInCirculation, selfAddress, currentIteration, actualProfitSplit, currentIteration, users, currentIteration, users, users, currentProfits, amountInCirculation, actualProfitSplit, users, currentProfits, amountInCirculation, users, selfAddress, selfAddress, actualProfitSplit, hasICORun, selfAddress, users, users, amountInCirculation, currentProfits",False
assureDAppIsReady(),"devApprovals, devApprovals, devApprovals, devApprovals",True
isDAppReady(),"devApprovals, devApprovals, DAppReady",False
"alterBankBalance(address,uint256,bool)","selfAddress, selfAddress, selfAddress, selfAddress, selfAddress, selfAddress, selfAddress, selfAddress, selfAddress, selfAddress",False
loginUser(address),,False
logoutUser(address),,False
buyTokensForAddress(address),"totalFunds, totalFunds, admin, totalFunds, pricePerEther, selfAddress, selfAddress, selfAddress, selfAddress",True
buyTokensForSelf(),"totalFunds, totalFunds, totalFunds, pricePerEther, selfAddress, selfAddress, selfAddress, selfAddress",True
