Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"constructor(uint256,uint256,address,uint256)","owner, makerFee, takerFee, feeAccount, inactivityReleasePeriod",True
"approveCurrencyTokenAddress(address,bool)",approvedCurrencyTokens,False
"invalidateOrdersBefore(address,uint256)","invalidOrder, invalidOrder",False
setMakerFee(uint256),"makerFee, makerFee, makerFee, makerFee",False
setTakerFee(uint256),"takerFee, takerFee, takerFee, takerFee",False
setInactivityReleasePeriod(uint256),inactivityReleasePeriod,False
"setAdmin(address,bool)",admins,False
"depositToken(address,uint256)",,True
"receiveTokenDeposit(address,address,uint256)","tokens, tokens, lastActiveTransaction, tokens",True
deposit(),"tokens, tokens, lastActiveTransaction, tokens",True
"withdraw(address,uint256)","lastActiveTransaction, inactivityReleasePeriod, tokens, tokens, tokens, tokens",True
"adminWithdraw(address,uint256,address,uint256,uint8,bytes32,bytes32,uint256)","tokens, tokens, tokens, withdrawn, withdrawn, tokens, tokens, tokens, feeAccount, tokens, feeAccount, tokens, tokens, tokens, tokens, tokens, feeAccount, tokens, feeAccount, lastActiveTransaction, tokens",True
"balanceOf(address,address)",tokens,False
"trade(,,,)","invalidOrder, invalidOrder, tokens, tokens, approvedCurrencyTokens, approvedCurrencyTokens, approvedCurrencyTokens, orderFills, orderFills, tokens, tokens, tokens, tokens, tokens, tokens, tokens, tokens, takerFee, tokens, tokens, tokens, tokens, tokens, tokens, makerFee, tokens, feeAccount, tokens, feeAccount, makerFee, tokens, feeAccount, tokens, feeAccount, takerFee, tokens, feeAccount, tokens, feeAccount, orderFills, orderFills, orderFills, orderFills, orderFills, orderFills, tokens, tokens, tokens, tokens, tokens, tokens, tokens, tokens, makerFee, tokens, tokens, tokens, tokens, takerFee, tokens, tokens, tokens, feeAccount, tokens, feeAccount, makerFee, tokens, feeAccount, tokens, feeAccount, takerFee, tokens, feeAccount, tokens, feeAccount, orderFills, orderFills, orderFills, orderFills, lastActiveTransaction, lastActiveTransaction",False
"constructor(address,uint,address)","dexbAddress, dexb, dexbTreshold, exchangeContract",False
"getOptionAddress(uint,address,address,uint,bool,uint8)","firstToken, secondToken, strikePrice, isCall, decimals",False
"createOption(uint,address,address,uint,uint,bool,uint8,string)","firstToken, secondToken, strikePrice, isCall, decimals, firstToken, secondToken, minIssueAmount, strikePrice, isCall, decimals, firstToken, secondToken, strikePrice, isCall, decimals",False
"setAdmin(address,bool)",admins,False
setIssueFee(uint),issueFee,False
setExecuteFee(uint),executeFee,False
setCancelFee(uint),cancelFee,False
setDexbIssueFee(uint),dexbIssueFee,False
setDexbExecuteFee(uint),dexbExecuteFee,False
setDexbCancelFee(uint),dexbCancelFee,False
setDexbTreshold(uint),dexbTreshold,False
"calcIssueFeeAmount(address,uint)","dexbIssueFee, issueFee",False
"calcExecuteFeeAmount(address,uint)","dexbExecuteFee, executeFee",False
"calcCancelFeeAmount(address,uint)","dexbCancelFee, cancelFee",False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"approveAndDeposit(,uint)",allowed,True
"constructor(address,address,address,uint,uint,uint,bool,string,uint8)","factory, firstToken, secondToken, minIssueAmount, expiry, strikePrice, isCall, symbol, decimals",False
setMinIssueAmount(uint),minIssueAmount,False
issueWithToken(uint),"minIssueAmount, factory",True
issueWithWei(),"minIssueAmount, factory, factory, isCall, decimals, strikePrice",True
executeWithToken(uint),,True
executeWithWei(),"isCall, decimals, strikePrice",False
cancel(uint),"issuers, issuers, issuers, issuers",True
refund(),"issuers, issuers, issuers, issuers",True
