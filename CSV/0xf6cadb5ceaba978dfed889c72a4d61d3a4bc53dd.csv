Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
reclaimToken(),"token, token, owner",False
reclaimContract(address),owner,True
"tokenFallback(address,uint256,bytes)",,False
HasNoEther(),,False
function()external{}(),,False
reclaimEther(),owner,True
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"BetexToken(uint256,uint256)","firstUnlockTime, firstUnlockTime, secondUnlockTime, BOUNTY_ADDRESS, BOUNTY_SUPPLY, holders, BOUNTY_ADDRESS, BOUNTY_ADDRESS, BOUNTY_SUPPLY, RESERVE_ADDRESS, RESERVE_SUPPLY, holders, RESERVE_ADDRESS, RESERVE_ADDRESS, RESERVE_SUPPLY, BROKER_RESERVE_ADDRESS, BROKER_RESERVE_SUPPLY, holders, BROKER_RESERVE_ADDRESS, BROKER_RESERVE_ADDRESS, BROKER_RESERVE_SUPPLY, TEAM_ADDRESS, TEAM_SUPPLY, holders, TEAM_ADDRESS, TEAM_ADDRESS, TEAM_SUPPLY, TOTAL_SUPPLY, SALE_SUPPLY",False
setICO(address),"icoAddress, TOTAL_SUPPLY, SALE_SUPPLY, SALE_SUPPLY, SALE_SUPPLY, icoAddress, TOTAL_SUPPLY",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
getHoldersCount(),holders,False
BetexStorage(),"preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances, preICOFunders, preICOBalances",False
addFunder(address),"funded, funders, funded",False
isFunder(address),funded,False
getFundersCount(),funders,False
getPreICOFundersCount(),preICOFunders,False
"addOrder(bytes32,address,uint256,uint256)","orders, orders, orders",False
getOrder(bytes32),"orders, orders, orders",False
"setRateForOrder(bytes32,uint256)",orders,False
addUnsoldAllocationOrder(bytes32),unsoldAllocationOrders,False
addToWhitelist(address),whitelist,False
isWhitelisted(address),whitelist,False
"getBonus(uint256,uint256)","VOLUME_BONUS_CONDITION, VOLUME_EXTRA_BONUS_CONDITION, FIRST_VOLUME_EXTRA_BONUS, FIRST_VOLUME_BONUS, VOLUME_EXTRA_BONUS_CONDITION, SECOND_VOLUME_EXTRA_BONUS, SECOND_VOLUME_BONUS",False
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
"BetexICO(uint256,uint256,uint256,address,address,address)","startTime, bonusChangeTime, endTime, wallet, token, betexStorage",False
"function()publicpayable{address_sender=msg.sender;uint256_funds=msg.value;if(betexStorage.isWhitelisted(_sender)){buyTokens(_sender,_funds);}elseif(!refillers[_sender]&&!(owner==_sender)){revert();}}()","betexStorage, refillers, owner",True
"__callback(bytes32,string)","betexStorage, ethRateURL, unsoldAllocationOraclizeGasLimit, betexStorage, RATE_EXPONENT, betexStorage, RATE_EXPONENT, TOKEN_PRICE, sold, token, token, sold, betexStorage, token, sold, sold",True
scheduleUnsoldAllocation(),"unsoldAllocatonScheduled, endTime, unsoldAllocationDelay, ethRateURL, unsoldAllocationOraclizeGasLimit, betexStorage, unsoldAllocatonScheduled",False
allocateUnsoldTokens(),"endTime, unsoldAllocationDelay, unsoldAllocationCount, unsoldTokensAmount, token, sold, soldBeforeUnsoldAllocation, sold, UNSOLD_ALLOCATION_SIZE, betexStorage, unsoldAllocationCount, token, UNSOLD_ALLOCATION_EXPONENT, soldBeforeUnsoldAllocation, unsoldTokensAmount, UNSOLD_ALLOCATION_EXPONENT, token, sold, sold, unsoldAllocationCount, unsoldAllocationCount, sold, token, token, sold, token, token, sold, sold",True
allocatePreICOTokens(),"preICOTokensAllocated, betexStorage, betexStorage, betexStorage, token, sold, sold, betexStorage, preICOTokensAllocated",True
addToWhitelist(address),betexStorage,False
setOraclizeGasLimit(uint256),oraclizeGasLimit,False
setOraclizeGasPrice(uint256),,False
addRefiller(address),refillers,False
withdrawEther(uint256),owner,True
