Function Name,State Variables Modified,Can Transfer Ether
addOracles(),"oracles, oracles",False
removeOracles(),"oracles, oracles",False
"isTransferAllowed(address,address,address,address,uint)",,False
"deposit(address,address,uint256)",,False
"withdraw(address,address,uint256)",,False
Treasury(address),token,False
init(address),profiterole,False
function()payablepublic{revert();}(),,False
"deposit(bytes32,uint,uint,address,uint)",token,True
"withdraw(bytes32,uint,address,uint,address)",token,True
"getSharesPercentForPeriod(bytes32,uint)",,False
getUserBalance(bytes32),,False
getLockedUserBalance(bytes32),,False
getLockedUserDeposits(bytes32),,False
getTotalBmcDaysAmount(uint),,False
addDistributionPeriod(),,False
"isTransferAllowed(address,address,address,address,uint)",,False
"Profiterole(address,address,address)","bonusToken, treasury, wallet",False
function()payablepublic{revert();}(),,False
updateTreasury(address),treasury,False
updateWallet(address),wallet,False
addDistributionSources(),,False
removeDistributionSources(),,False
"withdrawBonuses(bytes32,uint,address,uint,address)","wallet, bonusToken",False
getTotalBonusesAmountAvailable(bytes32),"treasury, lastDepositDate, distributionDeposits, distributionDeposits",False
"getBonusesAmountAvailable(bytes32,uint)","distributionDeposits, treasury",False
getTotalDepositsAmountLeft(),"lastDepositDate, firstDepositDate, distributionDeposits, distributionDeposits",False
getDepositsAmountLeft(uint),distributionDeposits,False
distributeBonuses(uint),"bonusToken, wallet, firstDepositDate, firstDepositDate, lastDepositDate, distributionDeposits, lastDepositDate, distributionDeposits, treasury",True
"isTransferAllowed(address,address,address,address,uint)",,False
"__transferWithReference(address,uint,string,address)",,False
"__transferFromWithReference(address,address,uint,string,address)",,False
"__approve(address,uint,address)",,False
getLatestVersion(),,False
"init(address,string,string)",,False
proposeUpgrade(address),,False
name(bytes32),,False
"setProxy(address,bytes32)",,False
"isOwner(address,bytes32)",,False
totalSupply(bytes32),,False
"balanceOf(address,bytes32)",,False
"allowance(address,address,bytes32)",,False
baseUnit(bytes32),,False
"proxyTransferWithReference(address,uint,bytes32,string,address)",,False
"proxyTransferFromWithReference(address,address,uint,bytes32,string,address)",,False
"proxyApprove(address,uint,bytes32,address)",,False
"issueAsset(bytes32,uint,string,string,uint8,bool)",,False
"reissueAsset(bytes32,uint)",,False
"revokeAsset(bytes32,uint)",,False
isReissuable(bytes32),,False
"changeOwnership(bytes32,address)",,False
"EmissionProvider(address,address,address,uint,uint,uint,uint)","token, bonusToken, profiterole, startDate, endDate, tokenSoftcap",False
function()publicpayable{revert();}(),,False
init(),"token, token, tokenSoftcap",False
tokenHardcap(),tokenSoftcap,False
tokenHardcapIssued(),tokenSoftcap,False
getState(),"destructed, startDate, endDate, tokenSoftcapIssued, tokenSoftcap",False
addUsers(),whitelist,False
removeUsers(),whitelist,False
"issueHardcapToken(address,address,uint)",token,True
"issueSoftcapToken(address,address,uint)","token, tokenSoftcap, tokenSoftcapIssued, tokenSoftcapIssued",True
finishHardcap(),,False
distributeBonuses(),"bonusToken, profiterole",False
activateDestruction(),destructed,False
"isTransferAllowed(address,address,address,address,uint)","token, oracles, whitelist",False
"tokenFallback(address,uint,bytes)","token, oracles",True
