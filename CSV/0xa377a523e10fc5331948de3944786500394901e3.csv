Function Name,State Variables Modified,Can Transfer Ether
destructor(),,False
disableSelfDestruction(),selfDestructionDisabled,True
triggerSelfDestruction(),selfDestructionDisabled,True
destructor(),deployer,False
setDeployer(address),"deployer, deployer, deployer",False
setOperator(address),"operator, operator, operator",False
setServiceActivationTimeout(uint256),serviceActivationTimeout,False
registerService(address),,False
registerServiceDeferred(address),"serviceActivationTimeout, serviceActivationTimeout",False
deregisterService(address),"registeredServicesMap, registeredServicesMap",False
"enableServiceAction(address,string)","registeredServicesMap, registeredServicesMap, registeredServicesMap, registeredServicesMap",False
"disableServiceAction(address,string)","registeredServicesMap, registeredServicesMap",False
isRegisteredService(address),registeredServicesMap,False
isRegisteredActiveService(address),registeredServicesMap,False
"isEnabledServiceAction(address,string)",registeredServicesMap,False
abs(int256),,False
neg(int256),,False
toNonZeroInt256(uint256),,False
toInt256(uint256),,False
toUInt256(int256),,False
isNonZeroPositiveInt256(int256),,False
isPositiveInt256(int256),,False
isNonZeroNegativeInt256(int256),,False
isNegativeInt256(int256),,False
"clamp(int256,int256,int256)",,False
"clampMin(int256,int256)",,False
"clampMax(int256,int256)",,False
PARTS_PER(),,False
constructor(address),updateDelayBlocksByBlockNumber,False
setOperationalModeExit(),operationalMode,False
isOperationalModeNormal(),operationalMode,False
isOperationalModeExit(),operationalMode,False
updateDelayBlocks(),updateDelayBlocksByBlockNumber,False
updateDelayBlocksCount(),updateDelayBlocksByBlockNumber,False
"setUpdateDelayBlocks(uint256,uint256)",updateDelayBlocksByBlockNumber,False
confirmationBlocks(),confirmationBlocksByBlockNumber,False
confirmationBlocksCount(),confirmationBlocksByBlockNumber,False
"setConfirmationBlocks(uint256,uint256)",confirmationBlocksByBlockNumber,False
tradeMakerFeesCount(),tradeMakerFeeByBlockNumber,False
"tradeMakerFee(uint256,int256)",tradeMakerFeeByBlockNumber,False
"setTradeMakerFee(uint256,int256,,)",tradeMakerFeeByBlockNumber,False
tradeTakerFeesCount(),tradeTakerFeeByBlockNumber,False
"tradeTakerFee(uint256,int256)",tradeTakerFeeByBlockNumber,False
"setTradeTakerFee(uint256,int256,,)",tradeTakerFeeByBlockNumber,False
paymentFeesCount(),paymentFeeByBlockNumber,False
"paymentFee(uint256,int256)",paymentFeeByBlockNumber,False
"setPaymentFee(uint256,int256,,)",paymentFeeByBlockNumber,False
"currencyPaymentFeesCount(address,uint256)",currencyPaymentFeeByBlockNumber,False
"currencyPaymentFee(uint256,address,uint256,int256)","currencyPaymentFeeByBlockNumber, currencyPaymentFeeByBlockNumber",False
"setCurrencyPaymentFee(uint256,address,uint256,int256,,)",currencyPaymentFeeByBlockNumber,False
tradeMakerMinimumFeesCount(),tradeMakerMinimumFeeByBlockNumber,False
tradeMakerMinimumFee(uint256),tradeMakerMinimumFeeByBlockNumber,False
"setTradeMakerMinimumFee(uint256,int256)",tradeMakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFeesCount(),tradeTakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFee(uint256),tradeTakerMinimumFeeByBlockNumber,False
"setTradeTakerMinimumFee(uint256,int256)",tradeTakerMinimumFeeByBlockNumber,False
paymentMinimumFeesCount(),paymentMinimumFeeByBlockNumber,False
paymentMinimumFee(uint256),paymentMinimumFeeByBlockNumber,False
"setPaymentMinimumFee(uint256,int256)",paymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFeesCount(address,uint256)",currencyPaymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFee(uint256,address,uint256)","currencyPaymentMinimumFeeByBlockNumber, currencyPaymentMinimumFeeByBlockNumber",False
"setCurrencyPaymentMinimumFee(uint256,address,uint256,int256)",currencyPaymentMinimumFeeByBlockNumber,False
"feeCurrenciesCount(address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"feeCurrency(uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"setFeeCurrency(uint256,address,uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
walletLockTimeout(),walletLockTimeoutByBlockNumber,False
"setWalletLockTimeout(uint256,uint256)",walletLockTimeoutByBlockNumber,False
cancelOrderChallengeTimeout(),cancelOrderChallengeTimeoutByBlockNumber,False
"setCancelOrderChallengeTimeout(uint256,uint256)",cancelOrderChallengeTimeoutByBlockNumber,False
settlementChallengeTimeout(),settlementChallengeTimeoutByBlockNumber,False
"setSettlementChallengeTimeout(uint256,uint256)",settlementChallengeTimeoutByBlockNumber,False
fraudStakeFraction(),fraudStakeFractionByBlockNumber,False
"setFraudStakeFraction(uint256,uint256)",fraudStakeFractionByBlockNumber,False
walletSettlementStakeFraction(),walletSettlementStakeFractionByBlockNumber,False
"setWalletSettlementStakeFraction(uint256,uint256)",walletSettlementStakeFractionByBlockNumber,False
operatorSettlementStakeFraction(),operatorSettlementStakeFractionByBlockNumber,False
"setOperatorSettlementStakeFraction(uint256,uint256)",operatorSettlementStakeFractionByBlockNumber,False
operatorSettlementStake(),operatorSettlementStakeByBlockNumber,False
"setOperatorSettlementStake(uint256,int256,address,uint256)",operatorSettlementStakeByBlockNumber,False
setEarliestSettlementBlockNumber(uint256),"earliestSettlementBlockNumberUpdateDisabled, earliestSettlementBlockNumber, earliestSettlementBlockNumber",False
disableEarliestSettlementBlockNumberUpdate(),earliestSettlementBlockNumberUpdateDisabled,False
setConfiguration(),"configuration, configuration",False
"clamp(uint256,uint256,uint256)",,False
"clampMin(uint256,uint256)",,False
"clampMax(uint256,uint256)",,False
constructor(address),"depositedBalanceType, DEPOSITED_BALANCE_TYPE, settledBalanceType, SETTLED_BALANCE_TYPE, stagedBalanceType, STAGED_BALANCE_TYPE, _allBalanceTypes, settledBalanceType, _allBalanceTypes, depositedBalanceType, _allBalanceTypes, stagedBalanceType, _activeBalanceTypes, settledBalanceType, _activeBalanceTypes, depositedBalanceType",False
"get(address,bytes32,address,uint256)",walletMap,False
"getByIndices(address,bytes32,address,uint256,uint256,uint256)",walletMap,False
"getAll(address,bytes32,address,uint256)",walletMap,False
"idsCount(address,bytes32,address,uint256)",walletMap,False
"hasId(address,bytes32,int256,address,uint256)",walletMap,False
"set(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"setIds(address,bytes32,,address,uint256)",walletMap,False
"add(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"sub(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"hasInUseCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"hasEverUsedCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"fungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"fungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"fungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastFungibleRecord(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"nonFungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastNonFungibleRecord(address,bytes32,address,uint256)",walletMap,False
trackedBalanceTypesCount(),trackedBalanceTypes,False
trackedWalletsCount(),trackedWallets,False
allBalanceTypes(),_allBalanceTypes,False
activeBalanceTypes(),_activeBalanceTypes,False
"trackedWalletsByIndices(uint256,uint256)","trackedWallets, trackedWallets, trackedWallets",False
setBalanceTracker(),"balanceTrackerFrozen, balanceTracker, balanceTracker",False
freezeBalanceTracker(),balanceTrackerFrozen,False
authorizeInitialService(address),"initialServiceAuthorizationDisabled, registeredServicesMap, initialServiceAuthorizedMap",True
disableInitialServiceAuthorization(),initialServiceAuthorizationDisabled,False
authorizeRegisteredService(address),"registeredServicesMap, initialServiceAuthorizedMap, serviceWalletAuthorizedMap",True
unauthorizeRegisteredService(address),"registeredServicesMap, initialServiceAuthorizedMap, initialServiceWalletUnauthorizedMap, serviceWalletAuthorizedMap, serviceWalletActionList, serviceActionWalletAuthorizedMap, serviceWalletActionList",True
"isAuthorizedRegisteredService(address,address)",serviceWalletAuthorizedMap,False
"authorizeRegisteredServiceAction(address,string)","registeredServicesMap, registeredServicesMap, initialServiceAuthorizedMap, serviceWalletAuthorizedMap, serviceActionWalletAuthorizedMap, serviceActionWalletTouchedMap, serviceActionWalletTouchedMap, serviceWalletActionList",True
"unauthorizeRegisteredServiceAction(address,string)","registeredServicesMap, registeredServicesMap, initialServiceAuthorizedMap, serviceActionWalletAuthorizedMap",True
"isAuthorizedRegisteredServiceAction(address,string,address)","serviceWalletAuthorizedMap, serviceActionWalletAuthorizedMap",False
constructor(address),,False
"lockFungibleByProxy(address,address,int256,address,uint256,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks, walletFungibleLocks, lockedCurrencyLockerFungibleLockIndex, walletCurrencyFungibleLockCount, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, configuration",False
"lockNonFungibleByProxy(address,address,,address,uint256,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks, lockedCurrencyLockerNonFungibleLockIndex, walletCurrencyNonFungibleLockCount, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, configuration",False
"unlockFungible(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks",False
"unlockFungibleByProxy(address,address,address,uint256)",lockedCurrencyLockerFungibleLockIndex,False
"unlockNonFungible(address,address,address,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks",False
"unlockNonFungibleByProxy(address,address,address,uint256)",lockedCurrencyLockerNonFungibleLockIndex,False
fungibleLocksCount(address),walletFungibleLocks,False
nonFungibleLocksCount(address),walletNonFungibleLocks,False
"lockedAmount(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks, walletFungibleLocks",False
"lockedIdsCount(address,address,address,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks",False
"lockedIdsByIndices(address,address,address,uint256,uint256,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks",False
isLocked(address),"walletFungibleLocks, walletNonFungibleLocks",False
"isLocked(address,address,uint256)","walletCurrencyFungibleLockCount, walletCurrencyNonFungibleLockCount",False
"isLocked(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, lockedCurrencyLockerNonFungibleLockIndex",False
setWalletLocker(),"walletLockerFrozen, walletLocker, walletLocker",False
freezeWalletLocker(),walletLockerFrozen,False
PAYMENT_KIND(),,False
constructor(address),,False
hashPaymentAsWallet(),,True
hashPaymentAsOperator(),,True
hashPaymentAmountCurrency(),,False
hashPaymentSenderPartyAsWallet(),,False
hashPaymentSenderPartyAsOperator(),,False
hashPaymentRecipientPartyAsOperator(),,False
hashCurrentPreviousInt256(),,False
hashSingleTotalInt256(),,False
hashFigure(),,False
hashOriginFigures(),,False
hashUint256(uint256),,False
hashString(string),,False
hashAddress(address),,False
hashSignature(),,False
setPaymentHasher(),"paymentHasher, paymentHasher",False
constructor(address),deployer,False
isSigner(address),signerIndicesMap,False
signersCount(),signers,False
signerIndex(address),signerIndicesMap,False
registerSigner(address),"signerIndicesMap, signers, signerIndicesMap, signers",False
"signersByIndices(uint256,uint256)","signers, signers, signers",False
constructor(address),signerManager,False
setSignerManager(address),"signerManager, signerManager, signerManager",False
"ethrecover(bytes32,uint8,bytes32,bytes32)",,False
"isSignedByRegisteredSigner(bytes32,uint8,bytes32,bytes32)",signerManager,False
"isSignedBy(bytes32,uint8,bytes32,bytes32,address)",,False
"constructor(address,address)",,False
"isGenuineOperatorSignature(bytes32,)",,False
"isGenuineWalletSignature(bytes32,,address)",,False
isGenuinePaymentWalletHash(),paymentHasher,False
isGenuinePaymentOperatorHash(),paymentHasher,False
isGenuinePaymentWalletSeal(),,True
isGenuinePaymentOperatorSeal(),,False
isGenuinePaymentSeals(),,False
isGenuinePaymentFeeOfFungible(),configuration,True
isGenuinePaymentFeeOfNonFungible(),configuration,True
isGenuinePaymentSenderOfFungible(),signerManager,True
isGenuinePaymentRecipientOfFungible(),,True
isGenuinePaymentSenderOfNonFungible(),signerManager,True
isGenuinePaymentRecipientOfNonFungible(),,True
"isSuccessivePaymentsPartyNonces(,,,)",,True
"isGenuineSuccessivePaymentsBalances(,,,,int256)",,True
"isGenuineSuccessivePaymentsTotalFees(,)",,True
"isPaymentParty(,address)",,True
"isPaymentSender(,address)",,True
"isPaymentRecipient(,address)",,False
"isPaymentCurrency(,)",,False
isPaymentCurrencyNonFungible(),,True
TRADE_KIND(),,False
ORDER_KIND(),,False
setValidator(),"validator, validator",False
"receiveEthersTo(address,string)",,False
"receiveTokensTo(address,string,int256,address,uint256,string)",,False
closeAccrualPeriod(),,False
isFungible(),,False
standard(),,False
"receive(address,address,uint256,address,uint256)",,False
"approve(address,uint256,address,uint256)",,False
"dispatch(address,address,uint256,address,uint256)",,False
getReceiveSignature(),,False
getApproveSignature(),,False
getDispatchSignature(),,False
constructor(address),,False
"registerTransferController(string,address)",registeredTransferControllers,False
"reassociateTransferController(string,string,address)","registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers",False
"registerCurrency(address,string)","registeredCurrencies, registeredCurrencies",False
deregisterCurrency(address),"registeredCurrencies, registeredCurrencies, registeredCurrencies",False
blacklistCurrency(address),"registeredCurrencies, registeredCurrencies",False
whitelistCurrency(address),"registeredCurrencies, registeredCurrencies",False
"transferController(address,string)","registeredTransferControllers, registeredTransferControllers, registeredCurrencies, registeredCurrencies, registeredTransferControllers, registeredCurrencies",True
setTransferControllerManager(),"transferControllerManager, transferControllerManager",True
constructor(address),,False
"function()externalpayable{receiveEthersTo(msg.sender,"""");}()",,True
"receiveEthersTo(address,string)","deposited, txHistory, inUseCurrencies",False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)","deposited, txHistory, inUseCurrencies",True
depositsCount(),txHistory,False
deposit(uint),txHistory,False
"depositedBalance(address,uint256)",deposited,False
"depositedFractionalBalance(address,uint256,uint256)",deposited,False
"stagedBalance(address,address,uint256)",stagedByWallet,False
inUseCurrenciesCount(),inUseCurrencies,False
"inUseCurrenciesByIndices(uint256,uint256)",inUseCurrencies,False
"rewardFractional(address,uint256,uint256)","fractionalRewardByWallet, fractionalRewardByWallet, nonceByWallet, fractionalRewardByWallet",False
"rewardAbsolute(address,int256,address,uint256,uint256)","absoluteRewardByWallet, absoluteRewardByWallet, nonceByWallet, absoluteRewardByWallet",False
depriveFractional(address),"fractionalRewardByWallet, fractionalRewardByWallet, nonceByWallet, fractionalRewardByWallet",False
"depriveAbsolute(address,address,uint256)","absoluteRewardByWallet, absoluteRewardByWallet, nonceByWallet, absoluteRewardByWallet",False
"claimAndTransferToBeneficiary(,string,address,uint256,string)",deposited,True
"claimAndStage(address,uint256)","deposited, stagedByWallet",True
"withdraw(int256,address,uint256,string)","stagedByWallet, stagedByWallet",True
setSecurityBond(),"securityBond, securityBond",False
constructor(address),,False
isDoubleSpenderWallet(address),doubleSpenderByWallet,False
doubleSpenderWalletsCount(),doubleSpenderWallets,False
addDoubleSpenderWallet(address),"doubleSpenderByWallet, doubleSpenderWallets, doubleSpenderByWallet",False
fraudulentOrderHashesCount(),fraudulentOrderHashes,False
isFraudulentOrderHash(bytes32),fraudulentByOrderHash,False
addFraudulentOrderHash(bytes32),"fraudulentByOrderHash, fraudulentByOrderHash, fraudulentOrderHashes",False
fraudulentTradeHashesCount(),fraudulentTradeHashes,False
isFraudulentTradeHash(bytes32),fraudulentByTradeHash,False
addFraudulentTradeHash(bytes32),"fraudulentByTradeHash, fraudulentByTradeHash, fraudulentTradeHashes",False
fraudulentPaymentHashesCount(),fraudulentPaymentHashes,False
isFraudulentPaymentHash(bytes32),fraudulentByPaymentHash,False
addFraudulentPaymentHash(bytes32),"fraudulentByPaymentHash, fraudulentByPaymentHash, fraudulentPaymentHashes",False
setFraudChallenge(),"fraudChallenge, fraudChallenge",False
constructor(address),,False
proposalsCount(),proposals,False
"initiateProposal(address,uint256,int256,int256,,uint256,bool)",,False
"terminateProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"terminateProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"disqualifyProposal(address,,address,uint256,uint256,bytes32,string)","proposalIndexByWalletCurrency, proposals, proposals, configuration, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"hasProposal(address,)",proposalIndexByWalletCurrency,False
"hasProposalTerminated(address,)","proposalIndexByWalletCurrency, proposals",False
"hasProposalExpired(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalReferenceBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDefinitionBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalExpirationTime(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStatus(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStageAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalTargetBalanceAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalWalletInitiated(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationChallenger(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateKind(address,)","proposalIndexByWalletCurrency, proposals",False
constructor(address),,False
setNullSettlementChallengeState(),"nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",False
"challengeByPayment(address,,address)","fraudChallenge, nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",True
constructor(address),,False
proposalsCount(),proposals,False
"initiateProposal(address,uint256,int256,int256,int256,,uint256,bool,bytes32,string)",,False
"terminateProposal(address,,bool)","proposalIndexByWalletCurrency, proposalIndexByWalletNonceCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"terminateProposal(address,,bool,bool)","proposalIndexByWalletCurrency, proposals, proposalIndexByWalletNonceCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"disqualifyProposal(address,,address,uint256,uint256,bytes32,string)","proposalIndexByWalletCurrency, proposals, proposals, configuration, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"qualifyProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, configuration, proposals",False
"hasProposal(address,uint256,)",proposalIndexByWalletNonceCurrency,False
"hasProposal(address,)",proposalIndexByWalletCurrency,False
"hasProposalTerminated(address,)","proposalIndexByWalletCurrency, proposals",False
"hasProposalExpired(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalReferenceBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDefinitionBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalExpirationTime(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStatus(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalCumulativeTransferAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStageAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalTargetBalanceAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalChallengedHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalChallengedKind(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalWalletInitiated(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationChallenger(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateKind(address,)","proposalIndexByWalletCurrency, proposals",False
constructor(address),,False
setNullSettlementDisputeByPayment(),"nullSettlementDisputeByPayment, nullSettlementDisputeByPayment, nullSettlementDisputeByPayment",False
setNullSettlementChallengeState(),"nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",False
setDriipSettlementChallengeState(),"driipSettlementChallengeState, driipSettlementChallengeState, driipSettlementChallengeState",False
"startChallenge(int256,address,uint256)","walletLocker, nullSettlementChallengeState, nullSettlementChallengeState",True
"startChallengeByProxy(address,int256,address,uint256)","nullSettlementChallengeState, nullSettlementChallengeState",True
"stopChallenge(address,uint256)","nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",True
"stopChallengeByProxy(address,address,uint256)","nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",True
"hasProposal(address,address,uint256)",nullSettlementChallengeState,False
"hasProposalTerminated(address,address,uint256)",nullSettlementChallengeState,False
"hasProposalExpired(address,address,uint256)",nullSettlementChallengeState,False
"proposalNonce(address,address,uint256)",nullSettlementChallengeState,False
"proposalReferenceBlockNumber(address,address,uint256)",nullSettlementChallengeState,False
"proposalExpirationTime(address,address,uint256)",nullSettlementChallengeState,False
"proposalStatus(address,address,uint256)",nullSettlementChallengeState,False
"proposalStageAmount(address,address,uint256)",nullSettlementChallengeState,False
"proposalTargetBalanceAmount(address,address,uint256)",nullSettlementChallengeState,False
"proposalWalletInitiated(address,address,uint256)",nullSettlementChallengeState,False
"proposalDisqualificationChallenger(address,address,uint256)",nullSettlementChallengeState,False
"proposalDisqualificationBlockNumber(address,address,uint256)",nullSettlementChallengeState,False
"proposalDisqualificationCandidateKind(address,address,uint256)",nullSettlementChallengeState,False
"proposalDisqualificationCandidateHash(address,address,uint256)",nullSettlementChallengeState,False
"challengeByPayment(address,)","nullSettlementDisputeByPayment, nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",True
