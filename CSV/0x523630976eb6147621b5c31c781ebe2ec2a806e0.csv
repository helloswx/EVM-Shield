Function Name,State Variables Modified,Can Transfer Ether
LimitedSetup(uint),,False
Owned(address),owner,False
nominateOwner(address),nominatedOwner,False
acceptOwnership(),"nominatedOwner, owner, nominatedOwner, owner, nominatedOwner, nominatedOwner",True
"Proxy(,address)",,False
_setTarget(address),,False
"function()publicpayable{target.setMessageSender(msg.sender);assembly{letfree_ptr:=mload(0x40)calldatacopy(free_ptr,0,calldatasize)letresult:=call(gas,sload(target_slot),callvalue,free_ptr,calldatasize,0,0)returndatacopy(free_ptr,0,returndatasize)ifiszero(result){revert(free_ptr,calldatasize)}return(free_ptr,returndatasize)}}()",,True
Proxyable(address),,False
setProxy(),proxy,False
setMessageSender(address),,True
"Court(,,address)","havven, nomin",False
setMinStandingBalance(uint),minStandingBalance,False
setVotingPeriod(uint),"havven, votingPeriod",False
setConfirmationPeriod(uint),confirmationPeriod,False
setRequiredParticipation(uint),requiredParticipation,False
setRequiredMajority(uint),requiredMajority,False
motionVoting(uint),"motionStartTime, votingPeriod",False
motionConfirming(uint),"motionStartTime, votingPeriod, votingPeriod, confirmationPeriod",False
motionWaiting(uint),"motionStartTime, votingPeriod, confirmationPeriod",False
motionPasses(uint),"votesFor, votesAgainst, havven, requiredParticipation, requiredMajority",False
"hasVoted(address,uint)",vote,False
beginMotion(address),"havven, minStandingBalance, owner, votingPeriod, havven, targetMotionID, nomin, motionTarget, targetMotionID, motionStartTime",True
voteFor(uint),"vote, votesFor, votesFor",True
voteAgainst(uint),"vote, votesAgainst, votesAgainst",True
cancelVote(uint),"vote, votesFor, votesFor, votesAgainst, votesAgainst, vote",True
closeMotion(uint),,False
approveMotion(uint),"motionTarget, nomin",False
vetoMotion(uint),,False
"ExternStateProxyFeeToken(string,string,uint,address,,address)","state, state, name, symbol, feeAuthority, transferFeeRate",True
setTransferFeeRate(uint),transferFeeRate,True
setFeeAuthority(address),feeAuthority,False
setState(),state,False
balanceOf(address),state,False
"allowance(address,address)",state,False
transferFeeIncurred(uint),transferFeeRate,True
transferPlusFee(uint),,True
priceToSpend(uint),"UNIT, transferFeeRate",True
feePool(),state,False
"approve(address,uint)",state,True
"withdrawFee(address,uint)","feeAuthority, state, state, state, state",True
donateToFeePool(uint),"state, state, state, state",True
"EtherNomin(address,address,address,uint,address,)","oracle, beneficiary, etherPrice, lastPriceUpdateTime, frozen",False
function()publicpayable{}(),,False
setOracle(address),oracle,False
setCourt(),court,False
setBeneficiary(address),beneficiary,False
setPoolFeeRate(uint),"UNIT, poolFeeRate",False
setStalePeriod(uint),stalePeriod,False
fiatValue(uint),etherPrice,False
fiatBalance(),,False
etherValue(uint),etherPrice,False
collateralisationRatio(),,False
poolFeeIncurred(uint),poolFeeRate,False
purchaseCostFiat(uint),,False
purchaseCostEther(uint),,False
saleProceedsFiat(uint),,False
saleProceedsEther(uint),,False
priceIsStale(),"lastPriceUpdateTime, stalePeriod",False
isLiquidating(),liquidationTimestamp,False
canSelfDestruct(),"liquidationTimestamp, liquidationPeriod, liquidationTimestamp, totalSupply",False
"transfer(address,uint)",frozen,True
"transferFrom(address,address,uint)",frozen,True
"updatePrice(uint,uint)","oracle, lastPriceUpdateTime, etherPrice, lastPriceUpdateTime",True
replenishPool(uint),"nominPool, nominPool",False
diminishPool(uint),"nominPool, nominPool, nominPool",False
buy(uint),"nominPool, nominPool, state, state, totalSupply, totalSupply",True
sell(uint),"state, state, nominPool, nominPool, totalSupply, totalSupply",True
forceLiquidation(),,False
extendLiquidationPeriod(uint),"liquidationPeriod, liquidationPeriod",False
terminateLiquidation(),"liquidationTimestamp, liquidationPeriod",False
selfDestruct(),"beneficiary, beneficiary",False
confiscateBalance(address),"court, court, court, court, frozen, state, state, state, state, frozen",True
unfreezeAccount(address),"frozen, frozen",False
"ExternStateProxyToken(string,string,uint,address,,address)","name, symbol, totalSupply, state, state, totalSupply, state",False
"allowance(address,address)",state,False
balanceOf(address),state,False
setState(),state,False
"approve(address,uint)",state,True
"HavvenEscrow(address,)",havven,False
setHavven(),havven,False
balanceOf(address),totalVestedAccountBalance,False
numVestingEntries(address),vestingSchedules,False
"getVestingScheduleEntry(address,uint)",vestingSchedules,False
"getVestingTime(address,uint)",vestingSchedules,False
"getVestingQuantity(address,uint)",vestingSchedules,False
getNextVestingIndex(address),,False
getNextVestingEntry(address),,False
getNextVestingTime(address),,False
getNextVestingQuantity(address),,False
withdrawHavvens(uint),"havven, havven",True
purgeAccount(address),"vestingSchedules, totalVestedBalance, totalVestedBalance, totalVestedAccountBalance, totalVestedAccountBalance",False
"appendVestingEntry(address,uint,uint)","totalVestedBalance, totalVestedBalance, totalVestedBalance, havven, vestingSchedules, totalVestedAccountBalance, totalVestedAccountBalance, totalVestedAccountBalance, vestingSchedules",False
"addVestingSchedule(address,,)",,False
vest(),"vestingSchedules, totalVestedAccountBalance, totalVestedAccountBalance, totalVestedBalance, totalVestedBalance, havven",True
"SelfDestructible(address,address)",beneficiary,False
setBeneficiary(address),beneficiary,False
initiateSelfDestruct(),initiationTime,False
terminateSelfDestruct(),initiationTime,False
selfDestruct(),"initiationTime, beneficiary, beneficiary",False
"Havven(,address)","lastTransferTimestamp, feePeriodStartTime, lastFeePeriodStartTime, targetFeePeriodDurationSeconds, penultimateFeePeriodStartTime, targetFeePeriodDurationSeconds",False
setNomin(),nomin,False
setEscrow(),escrow,False
setTargetFeePeriodDuration(uint),targetFeePeriodDurationSeconds,False
"endow(address,uint)",,True
"emitTransferEvents(address,,)",,True
"transfer(address,uint)",,True
"transferFrom(address,address,uint)","state, state",True
withdrawFeeEntitlement(),"nomin, lastTransferTimestamp, state, hasWithdrawnLastPeriodFees, escrow, escrow, lastAverageBalance, lastFeesCollected, totalSupply, hasWithdrawnLastPeriodFees, nomin",True
recomputeLastAverageBalance(),,False
recomputeAccountLastAverageBalance(address),,False
rolloverFeePeriod(),,False
"TokenState(address,address)",associatedContract,False
setAssociatedContract(address),associatedContract,False
"setAllowance(address,address,uint)",allowance,False
"setBalanceOf(address,uint)",balanceOf,False
