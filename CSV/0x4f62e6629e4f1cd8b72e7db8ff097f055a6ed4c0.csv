Function Name,State Variables Modified,Can Transfer Ether
isPlatformModerator(address),,False
isCommunityModerator(address),,False
getProjectController(),,False
getRefundController(),,False
getDisputeController(),,False
getUtilityController(),,False
getAffiliateEscrow(),,False
getRefundPool(),,False
getdAppState(bytes32),,False
getInsuranceControllerState(uint256),,False
oldProjectCtrl(bytes32),,False
oldRefundCtrl(bytes32),,False
oldDisputeCtrl(bytes32),,False
oldUtilityCtrl(bytes32),,False
getIsNetworkDeployed(),,False
getCurrentControllersHash(),,False
getProjectCurrentState(uint256),,False
setEventLogger(address),,False
setModerationResources(address),,False
setMainContract(address),,False
setProjectController(address),,False
setRefundController(address),,False
setDisputeController(address),,False
setUtilityController(address),,False
addNewContract(address),,False
setPlatformModerator(address),,False
setMinInvestorContribution(uint256),,False
setMaxInvestorContribution(uint256),,False
setMinProtectionPercentage(uint256),,False
setMaxProtectionPercentage(uint256),,False
setMinOwnerContribution(uint256),,False
setDefaultBasePolicyDuration(uint256),,False
setDefaultPolicyDuration(uint256),,False
setRegularContributionPercentage(uint256),,False
getDisputeProjectId(uint256),,False
"setValidationToken(address,uint256)",,False
getDisputeControllerOfProject(uint256),,False
getRefundControllerOfProject(uint256),,False
getDisputeControllerOfProject(uint256),,False
getUitilityControllerOfProject(uint256),,False
getProjectControllerOfProject(uint256),,False
getProjectCurrentState(uint256),,False
getVoteEnd(uint256),,False
getProjectControllerState(uint256),,False
getUtilityControllerOfProject(uint256),,False
"newProject(bytes,address,uint256,uint256,uint8)",,False
"newInsurance(address,uint256,address)",,False
"newOwnerContribution(uint256,address)",,False
close(uint256),,False
"setNewProjectTokenPrice(uint256,uint256,uint256)",,False
isOpen(uint256),,False
upgrade(uint256),,False
"cancel(uint256,uint256,address)",,False
"voteForRefundState(address,uint256,uint256)",,False
"withdraw(address,uint256,uint256)",,False
"forceRefundState(address,uint256)",,False
finalizeVote(uint256),,False
"createNewDispute(address,uint256,bytes)",,False
"addPublicVote(address,uint256,bytes32)",,False
"decryptVote(address,uint256,bool,uint64)",,False
finalizeDispute(uint256),,False
"withdraw(uint256,address,uint256)",,False
"withdrawInsuranceFee(uint256,address,uint256)",,False
"ownerWithdraw(address,address,uint256)",,False
"withdrawDisputePayment(address,uint256)",,False
"cancelInvalid(uint256,)",,False
cancelProjectCovarage(uint256),,False
"managePolicies(uint256,uint256)",,False
"voteMaintenance(uint256,uint256)",,False
affiliatePayment(address),,False
"removeCanceled(uint256,)",,False
deposit(address),,False
getAffiliatePayment(address),,False
withdraw(address),,False
"updateControllerState(address,address,address,address)",,False
cleanIfNoProjects(),,False
"constructor(address,address,address,address)","masterStorage, secondStorage, refundPool, affiliate",False
"function()externalpayable{emitCommunityAidReceived(msg.sender,msg.value);}()",,True
"addCoveredProject(bytes,address,uint256,uint256,uint8)",projectController,False
"newInvestmentProtection(uint256,address)",,True
projectOwnerContribution(uint256),,True
closeProject(uint256),,False
"setProjectTokenPrice(uint256,uint256,uint256)",,False
"cancelInsurance(uint256,uint256)",,True
"voteForRefundState(uint256,uint256)",,True
"requestRefundWithdraw(uint256,uint256)",,True
finishInternalVote(uint256),"secondStorage, secondStorage",False
forceRefundState(uint256),,True
"createPublicDispute(uint256,bytes)",,True
"newPublicVote(uint256,bytes32)",,True
"revealPublicVote(uint256,bool,uint64)",,True
finishPublicDispute(uint256),,False
withdrawDisputePayment(uint256),masterStorage,True
"setValidationToken(address,uint256)",masterStorage,False
"withdraw(uint256,uint256)",,True
"withdrawFee(uint256,uint256)",,True
affiliatePayment(),affiliate,True
"cancelInvalidInsurances(uint256,)",,False
"removeCanceledInsurances(uint256,)",,False
"withdrawOwnerFunds(uint256,address)",,True
cancelProjectCovarage(uint256),,False
"policyMaintenance(uint256,uint256)",utilityController,False
"voteMaintenance(uint256,uint256)",utilityController,False
updateControllerState(),"projectController, masterStorage, refundController, masterStorage, disputeController, masterStorage, utilityController, masterStorage, controllersHash, masterStorage",False
transferAidToRefundPool(),refundPool,True
changeModerationResourcesAddress(address),masterStorage,False
upgradeEventLogger(address),masterStorage,False
upgradeMain(address),masterStorage,False
upgradeUtilityController(address),masterStorage,False
upgradeDisputeController(address),masterStorage,False
upgradeRefundController(address),masterStorage,False
upgradeProjectController(address),masterStorage,False
addNetworkContract(address),masterStorage,False
setPlatformModerator(address),masterStorage,False
setMinInvestorContribution(uint256),masterStorage,False
setMaxInvestorContribution(uint256),masterStorage,False
setMinProtectionPercentage(uint256),masterStorage,False
setMaxProtectionPercentage(uint256),masterStorage,False
setMinOwnerContribution(uint256),masterStorage,False
setDefaultBasePolicy(uint256),masterStorage,False
setDefaultPolicy(uint256),masterStorage,False
setRegularContributionPercentage(uint256),masterStorage,False
cleanIfNoProjects(),pool,False
