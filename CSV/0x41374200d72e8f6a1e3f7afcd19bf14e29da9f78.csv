Function Name,State Variables Modified,Can Transfer Ether
isPauser(address),_pausers,False
addPauser(address),,False
renouncePauser(),,True
paused(),_paused,False
pause(),_paused,True
unpause(),_paused,True
constructor(),foundation,True
transferFoundation(address),"foundation, foundation, foundation",False
constructor(),teleport,True
transferTeleport(address),"teleport, teleport",False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
"constructor(string,string,uint8)",,False
"mint(address,uint256)",,False
"burn(address,uint256)",,False
constructor(address),beneficiary,False
destruct(),"registeredMainTokens, registeredMainTokens, beneficiary, registeredClonedTokens, registeredClonedTokens, beneficiary, beneficiary",True
isProofUsed(bytes),,False
"depositNative(uint256,bytes)",breakoutTokens,False
function()payableexternal{revert('not allowed to send value');}(),,True
"depositToken(address,uint256,bytes,uint256)",breakoutTokens,True
"withdrawNative(uint256,bytes,address,uint256)",breakoutTokens,True
"withdrawToken(uint256,bytes,address,address,uint256)",breakoutTokens,True
"registerBreakout(address,uint256,bytes,bytes,uint256)","breakoutTokens, breakoutTokens, minPortValue, registeredMainTokens",False
"registerBreakin(address,uint256,bytes,bytes,uint256)","breakinTokens, breakinTokens, minPortValue, registeredClonedTokens",False
"mint(uint256,bytes,address,address,uint256)",breakinTokens,False
"burn(uint256,address,bytes,uint256)",breakinTokens,True
