Function Name,State Variables Modified,Can Transfer Ether
isOwner(address),owners,False
authoriseNextAction(),"requireAuthorisation, nextActionIsAuthorised, nextActionIsAuthorised, actionAuthorisedBy",True
checkActionIsAuthorisedAndReset(),"nextActionIsAuthorised, actionAuthorisedBy, nextActionIsAuthorised",True
setRequireAuthorisation(bool),requireAuthorisation,False
setIcoParametersSet(bool),icoParametersSet,False
setIcoBeginDate(uint256),icoBeginDate,False
setIcoEndDate(uint256),icoEndDate,False
setSoftCap(uint256),softCap,False
setRunTimeAfterSoftCapReached(uint256),runTimeAfterSoftCapReached,False
setImmediateAllowancePercentage(uint8),,False
setFirstYearAllowancePercentage(uint8),,False
setSecondYearAllowancePercentage(uint8),,False
initialiseToken(),"tokenInitialised, name, symbol, totalSupply, decimals, balanceOf, totalSupply, currentSeller, owners, owners, tokenInitialised",True
function()payablepublic{buyTokens();}(),,False
updateContract(),"dateSoftCapWasReached, dateSoftCapWasReached, dateSoftCapWasReached, runTimeAfterSoftCapReached, icoEndDate, icoEndDate, dateSoftCapWasReached, runTimeAfterSoftCapReached",False
buyTokens(),"allowBuying, frozenAccounts, sellPrice, currentSeller, tokensSoldAtIco, etherSpent, investorCount, investorCount, etherSpent",True
setTokenName(string),name,False
setTokenSymbol(string),symbol,False
setAllowTransfers(bool),allowTransfers,False
setAllowBurns(bool),allowBurns,False
setAllowBuying(bool),allowBuying,False
setSellPrice(uint256),sellPrice,False
setCurrentSeller(address),currentSeller,False
"ownersTransfer(address,uint256)",,True
"transfer(address,uint256)",allowTransfers,True
"mintToken(address,uint256)","balanceOf, totalSupply",False
burn(uint256),"allowBurns, balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, balanceOf, totalSupply",False
"freezeAccount(address,bool)",frozenAccounts,False
addOwner(address),owners,False
removeOwner(address),owners,False
"sendContractFundsToAddress(uint256,address)","icoParametersSet, tokensSoldAtIco, minimumTokenThreshold",True
returnEtherToInvestors(),"etherHasBeenReturnedToInvestors, tokensSoldAtIco, minimumTokenThreshold, investorCount, etherSpent, etherHasBeenReturnedToInvestors",True
getContractBalance(),,False
