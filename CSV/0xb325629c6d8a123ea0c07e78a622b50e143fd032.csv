Function Name,State Variables Modified,Can Transfer Ether
getHash(),,False
getPrefixedHash(),,False
"getExpectedRate(address,address,uint)",,False
"trade(address,uint,address,address,uint,uint,address)",,False
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
allowOrRestrictMigrations(),,False
migrateFunds(),,False
importEthers(address),,False
"importTokens(address,uint256,address)",,False
getCrowdsaleStatus(),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
decimals(),,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"getBalance(address,address)",balances,False
"getBalances(address,)",balances,False
getFill(bytes32),filled,False
getFills(),filled,False
getCancel(bytes32),cancelled,False
getCancels(),cancelled,False
getReferral(address),referrals,False
setMakerFeeRate(uint256),"minMakerFeeRate, maxMakerFeeRate, makerFeeRate",False
setTakerFeeRate(uint256),"minTakerFeeRate, maxTakerFeeRate, takerFeeRate",False
setFeeAccount(address),feeAccount,False
"getOrderInfo(uint256,)","filled, balances, balances, cancelled",False
"trade(,bytes)",,False
"cancelSingleOrder(,bytes)","cancelled, cancelled",True
"kyberSwap(uint256,address,address,bytes32)","kyberNetworkContract, feeAccount, kyberNetworkContract",True
"kyberTrade(uint256,address,address,bytes32)","balances, balances, kyberNetworkContract, feeAccount, balances, balances, kyberNetworkContract",True
"getExpectedRateBatch(,,)",kyberNetworkContract,False
"cancelMultipleOrders(,)",,False
"takeAllOrRevert(,)",,False
"takeAllPossible(,)",,False
"deposit(address,uint256,address,address)","balances, balances, referrals, referrals, referrals, balances",True
"withdraw(address,uint)","balances, balances, balances, balances",True
"transfer(address,address,uint256)","balances, balances, balances, balances, balances, balances, balances",True
setNewExchangeAddress(address),newExchange,False
allowOrRestrictMigrations(),"migrationAllowed, migrationAllowed",False
migrateFunds(),"migrationAllowed, newExchange, VERSION, newExchange",True
importEthers(address),"migrationAllowed, VERSION, balances, balances",True
"importTokens(address,uint256,address)","migrationAllowed, VERSION, balances, balances",True
"registerCrowdsale(,address)","crowdsales, crowdsales",False
buyTokens(address),"crowdsales, balances, ETH_ADDRESS, balances, ETH_ADDRESS, balances, balances, contributions, contributions, crowdsales",True
burnTokensWhenFinished(address),"crowdsales, crowdsales, crowdsales, BURN_ADDRESS",False
"validContribution(uint256,,address,address)",contributions,False
"swapFill(,,uint256,address,address,address)","balances, balances, balances, balances",True
function()externalpayable{}(),,False
