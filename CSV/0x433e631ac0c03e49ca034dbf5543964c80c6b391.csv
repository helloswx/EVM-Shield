Function Name,State Variables Modified,Can Transfer Ether
AcceptsOmniDex(address),tokenContract,False
"tokenFallback(address,uint256,bytes)",,False
OmniDex(),"administrators, ambassadors_, ambassadors_, ambassadors_, ambassadors_, ambassadors_, ambassadors_",False
buy(address),,False
"function()payablepublic{purchaseInternal(msg.value,0x0);}()",,False
payBankroll(),"totalEthBankrollCollected, totalEthBankrollRecieved, totalEthBankrollRecieved, totalEthBankrollRecieved, giveEthBankrollAddress, totalEthBankrollRecieved, totalEthBankrollRecieved",True
reinvest(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
exit(),tokenBalanceLedger_,True
withdraw(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
sell(uint256),"tokenBalanceLedger_, dividendFee_, bankrollFee_, totalEthBankrollCollected, totalEthBankrollCollected, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
"transfer(address,uint256)","tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, tokenBalanceLedger_, payoutsTo_, profitPerShare_, payoutsTo_, profitPerShare_",True
"transferAndCall(address,uint256,bytes)",canAcceptTokens_,True
disableInitialStage(),onlyAmbassadors,False
"setAdministrator(address,bool)",administrators,False
setStakingRequirement(uint256),stakingRequirement,False
"setCanAcceptTokens(address,bool)",canAcceptTokens_,False
setName(string),name,False
setSymbol(string),symbol,False
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(bool),referralBalance_,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, dividendFee_, bankrollFee_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, dividendFee_, bankrollFee_",False
calculateTokensReceived(uint256),"dividendFee_, bankrollFee_",False
calculateEthereumReceived(uint256),"tokenSupply_, dividendFee_, bankrollFee_",False
etherToSendBankroll(),"totalEthBankrollCollected, totalEthBankrollRecieved",False
