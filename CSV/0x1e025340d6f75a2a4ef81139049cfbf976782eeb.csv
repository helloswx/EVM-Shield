Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
"Crowdsale(uint256,uint256,uint256,address)","token, startTime, endTime, rate, wallet",False
function()externalpayable{buyTokens(msg.sender);}(),,True
buyTokens(address),"beneficiary, weiRaised, weiRaised, token, beneficiary, beneficiary",True
hasEnded(),endTime,False
pause(),paused,False
unpause(),paused,False
"TokenVesting(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
"increaseApproval(address,uint)",,False
"decreaseApproval(address,uint)",,False
DividendToken(),"isTreasurer, owner",False
claimDividend(),"dividendEndTime, dividendEndTime, claimTimeout",True
getClaimableDividend(address),"lastUpdate, lastDividendIncreaseDate",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"setTreasurer(address,bool)",isTreasurer,False
requestUnclaimed(),"dividendEndTime, claimTimeout, dividendEndTime",True
"function()publicpayable{require(isTreasurer[msg.sender]);require(dividendEndTime<now);if(this.balance>msg.value){uint256payout=this.balance.sub(msg.value);owner.transfer(payout);Reclaimed(payout,dividendEndTime,now);}currentDividend=this.balance;dividendEndTime=now.add(dividendCycleTime);Payin(msg.sender,msg.value,dividendEndTime);lastDividendIncreaseDate=now;}()","isTreasurer, dividendEndTime, owner, dividendEndTime, currentDividend, dividendEndTime, dividendCycleTime, dividendEndTime, lastDividendIncreaseDate",True
"calcDividend(address,uint256)",currentDividend,False
IcoToken(),paused,False
"IcoCrowdsale(uint256,uint256,uint256,address,uint256,address)","MAX_TOKEN_CAP, ICO_ENABLERS_CAP, ICO_TOKEN_CAP, DEVELOPMENT_TEAM_CAP, tokenPerWei, CHF_CENT_PER_TOKEN, minContributionInWei, MIN_CONTRIBUTION_CHF, confirmationPeriod, underwriter",True
"setManager(address,bool)",isManager,False
"blackListInvestor(address,bool)",isBlacklisted,False
buyTokens(address),"isBlacklisted, tokenPerWei, totalTokensPurchased, tier1Reached, DISCOUNT_TOKEN_AMOUNT_T1, tier1Reached, DISCOUNT_TOKEN_AMOUNT_T1, tier1Reached, tier2Reached, DISCOUNT_TOKEN_AMOUNT_T2, tier2Reached, DISCOUNT_TOKEN_AMOUNT_T2, tier2Reached, tier1Reached, totalTokensPurchased, totalTokensPurchased, tokensToMint, tokensToMint, weiRaised, weiRaised, investments",True
confirmPayment(uint256),"investments, investments",False
batchConfirmPayments(),,False
unConfirmPayment(uint256),"investments, investments",False
"batchMintTokenDirect(,)",,False
"mintTokenDirect(address,uint256)","tokensToMint, ICO_TOKEN_CAP, tokensToMint, tokensToMint, investments",True
"mintIcoEnablersTokens(address,uint256)","icoEnablersTokensMinted, ICO_ENABLERS_CAP, token, icoEnablersTokensMinted, icoEnablersTokensMinted",False
"mintDevelopmentTeamTokens(address,uint256)","developmentTeamTokensMinted, DEVELOPMENT_TEAM_CAP, developmentTeamTokensMinted, developmentTeamTokensMinted, VESTING_CLIFF, VESTING_DURATION, vestingWallets, token",False
getVestingWalletLength(),vestingWallets,False
finalizeConfirmationPeriod(),confirmationPeriodOver,False
settleInvestment(uint256),"investments, investments, investmentIdLastAttemptedToSettle, capReached, tokensMinted, ICO_TOKEN_CAP, capReached, tokensToMint, tokensToMint, tokensMinted, tokensMinted, token, wallet",True
batchSettleInvestments(),,False
finalize(),"token, token, token, token, owner",True
