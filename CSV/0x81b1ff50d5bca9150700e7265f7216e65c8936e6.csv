Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
currentRound(),"_round, _counter",False
roundStats(uint),"_winners, _positions, _blocks",False
userRounds(address),_history,False
"userRound(address,uint)",_history,False
"function()publicpayablewhenNotPaused{require(msg.value>=PRICE_WEI,'Insufficient Ether');if(_counter==QMAX){uintr=DMAX;uintwinpos=0;_blocks.push(block.number);bytes32_a=blockhash(block.number-1);for(uinti=31;i>=1;i--){if(uint8(_a[i])>=48&&uint8(_a[i])<=57){winpos=10*winpos+(uint8(_a[i])-48);if(--r==0)break;}}_positions.push(winpos);uint_reward=(QMAX*PRICE_WEI*90)/100;address_winner=_queue[winpos];_winners.push(_winner);_winner.transfer(_reward);historystorageh=_history[_winner];h.prices[h.size-1]=_reward;_wincomma.push(0x0);_wincommb.push(0x0);emitNewWinner(_winner,_round,winpos,h.values[h.size-1],_reward);_collectibles+=address(this).balance-_reward;_counter=0;_round++;}h=_history[msg.sender];require(h.size==0||h.rounds[h.size-1]!=_round,'Already In Round');h.size++;h.rounds.push(_round);h.places.push(_counter);h.values.push(msg.value);h.prices.push(0);if(_round==0){_queue.push(msg.sender);}else{_queue[_counter]=msg.sender;}emitNewDropIn(msg.sender,_round,_counter,msg.value);_counter++;}()","_counter, _blocks, _positions, _queue, _winners, _history, _wincomma, _wincommb, _round, _collectibles, _counter, _round, _history, _round, _round, _counter, _round, _queue, _queue, _counter, _round, _counter, _counter",True
"comment(uint,bytes32,bytes32)","_winners, _history, _wincomma, _wincommb",True
blackList(address),_history,False
userComment(uint),"_history, _winners, _winners, _wincomma, _wincommb",False
collect(),"owner, _collectibles",True
