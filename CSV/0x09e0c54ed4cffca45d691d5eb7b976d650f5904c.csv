Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
pause(),paused,False
unpause(),paused,False
"schedule(address,bytes,)",,False
"computeEndowment(uint,uint,uint,uint,uint)",,False
execute(),,False
cancel(),,False
claim(),,False
"proxy(address,bytes)",,False
requestData(),,False
callData(),,False
refundClaimDeposit(),,False
sendFee(),,False
sendBounty(),,False
sendOwnerEther(),,False
sendOwnerEther(address),,False
"initialize(,,bytes)","initialized, initialized",True
function()publicpayable{}(),,False
execute(),,False
cancel(),,False
claim(),,False
requestData(),,False
callData(),,True
"proxy(address,bytes)",,True
refundClaimDeposit(),,False
sendFee(),,True
sendBounty(),,True
sendOwnerEther(),,True
sendOwnerEther(address),,True
"createRequest(,,bytes)",,False
"createValidatedRequest(,,bytes)",,False
"validateRequestParams(,,uint)",,False
isKnownRequest(address),,False
TransactionRecorder(),owner,True
function()payablepublic{lastCallGas=gasleft();lastCallData=msg.data;lastCaller=msg.sender;lastCallValue=msg.value;wasCalled=true;}(),"lastCallGas, lastCallData, lastCaller, lastCallValue, wasCalled",True
__reset__(),"lastCallGas, lastCallData, lastCaller, lastCallValue, wasCalled",False
kill(),"owner, owner",True
"Proxy(address,address,uint,uint,uint)","scheduler, receipient, owner, scheduledTransaction, scheduler",True
function()publicpayable{if(msg.value>0){receipient.transfer(msg.value);}}(),receipient,True
sendOwnerEther(address),"owner, scheduledTransaction",True
SimpleToken(uint),"owner, owner",True
"transfer(address,uint)",,True
buyTokens(),rate,True
balanceOf(address),,False
function()publicpayable{}(),,False
"schedule(address,bytes,)","factoryAddress, temporalUnit, feeRecipient, temporalUnit, temporalUnit, feeRecipient, temporalUnit",True
"computeEndowment(uint,uint,uint,uint,uint)",,True
"constructor(address,address)","temporalUnit, factoryAddress, feeRecipient",False
"constructor(address,address)","temporalUnit, factoryAddress, feeRecipient",False
Migrations(),owner,True
setCompleted(uint),last_completed_migration,False
upgrade(address),last_completed_migration,False
"max(uint,uint)",,False
"min(uint,uint)",,False
safeCastSigned(uint),,False
"validate(,,uint)","EXECUTION_GAS_OVERHEAD, EXECUTION_GAS_OVERHEAD",False
"initialize(,,,bytes)",,True
getEXECUTION_GAS_OVERHEAD(),EXECUTION_GAS_OVERHEAD,False
requiredExecutionGas(),EXECUTION_GAS_OVERHEAD,True
isCancellable(),,True
cancel(),CANCEL_EXTRA_GAS,True
refundClaimDeposit(),,False
sendFee(),,True
sendBounty(),,True
canSendOwnerEther(),,False
"sendOwnerEther(,address)",,True
sendOwnerEther(),,True
getNow(),,False
"validateReservedWindowSize(uint,uint)",,False
"validateWindowStart(,uint,uint)",,False
validateTemporalUnit(uint),,False
"computeEndowment(uint,uint,uint,uint,uint,uint)",,True
"validateEndowment(uint,uint,uint,uint,uint,uint,uint)",,True
all(),,False
"constructor(address,uint,address,uint)","scheduler, owner, scheduler, payment, scheduler",True
function()publicpayable{if(msg.value>0){return;}elseif(address(this).balance>0){payout();}else{revert();}}(),,False
payout(),,True
collectRemaining(),owner,True
"RecurringPayment(address,uint,uint,address)",scheduler,False
function()publicpayable{if(msg.value>0){return;}process();}(),,False
process(),,False
constructor(address),transactionRequestCore,False
"createRequest(,,bytes)",transactionRequestCore,True
"createValidatedRequest(,,bytes)",,True
"validateRequestParams(,,uint)",,True
isKnownRequest(address),,False
"getBucket(uint,)","BLOCKS_BUCKET_SIZE, TIMESTAMP_BUCKET_SIZE",False
