Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
constructor(),"owner, ownerAPI",True
transferOwnership(address),newOwner,False
transferAPIOwnership(address),newOwnerAPI,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
acceptOwnershipAPI(),"newOwnerAPI, ownerAPI, newOwnerAPI, ownerAPI, newOwnerAPI, newOwnerAPI",True
paused(),isPaused,False
pause(),isPaused,False
unpause(),isPaused,False
constructor(),"maxSupply, maxSellable, maxSupply, currentRunningAddress, soldSupply, startDate, bonusEnd20, bonusEnd10, bonusEnd05, endDate, tradingDate, minAmountETH, maxAmountETH, maxSupply, teamWOVestingPercentage, owner, teamWOVestingPercentage, owner, owner, owner, maxSupply, maxSupply, maxSupply, maxSupply, maxSupply, _totalSupply, maxSupply",False
"function()publicpayablewhenNotPaused{if(now>endDate&&isMintingFinished==false){finishMinting();msg.sender.transfer(msg.value);}else{require(now>=startDate&&now<=endDate&&isMintingFinished==false);require(msg.value>=minAmountETH&&msg.value<=maxAmountETH);require(msg.value+ethDeposits[msg.sender]<=maxAmountETH);require(kycAddressState[msg.sender]==true);uinttokens=getAmountToIssue(msg.value);require(safeAdd(soldSupply,tokens)<=maxSellable);soldSupply=safeAdd(soldSupply,tokens);_totalSupply=safeAdd(_totalSupply,tokens);balances[msg.sender]=safeAdd(balances[msg.sender],tokens);ethDeposits[msg.sender]=safeAdd(ethDeposits[msg.sender],msg.value);emitTransfer(address(0),msg.sender,tokens);ownerAPI.transfer(msg.value*15/100);}}()","endDate, startDate, endDate, minAmountETH, maxAmountETH, maxAmountETH, soldSupply, maxSellable, soldSupply, soldSupply, _totalSupply, _totalSupply, ownerAPI",True
BurnMyTokensAndSetAmountForNewBlockchain(),,True
BurnTokensAndSetAmountForNewBlockchain(address),,False
SetNewBlockchainEnabled(),,False
finishMinting(),"endDate, _totalSupply, maxSupply, endDate, owner",True
getAmountToIssue(uint256),"bonusEnd20, bonusEnd10, bonusEnd05, decimals",False
transferVestingMonthlyAmount(address),"tradingDate, maxSupply, teamWOVestingPercentage, tradingDate",True
"setAddressKYC(address,bool)",,False
getAddressKYCState(address),,False
name(),name,False
symbol(),symbol,False
decimals(),decimals,False
totalSupply(),_totalSupply,False
circulatingSupply(),_totalSupply,False
balanceOf(address),,False
depositsOf(address),,False
burnedBalanceOf(address),,False
"transfer(address,uint)","endDate, tradingDate",True
"approve(address,uint)",,True
"transferFrom(address,address,uint)","endDate, tradingDate",True
"allowance(address,address)",,False
"approveAndCall(address,uint,bytes)",,True
"transferAllERC20Token(address,uint)",owner,True
transferAnyERC20Token(address),owner,True
updateExchangeRate(uint),exchangeRate,False
getExchangeRate(),exchangeRate,False
updateEndDate(uint256),endDate,False
"updateTokenNameSymbolAddress(string,string,address)","name, symbol, currentRunningAddress",False
