Function Name,State Variables Modified,Can Transfer Ether
"receiveApproval(address,uint256,address,bytes)",,False
pushGametRefIncome(address),,False
"pushGametRefIncomeToken(address,uint256)",,False
"addGameWinIncome(address,uint256,bool)",,False
"addGameEthSpendWin(address,uint256,uint256,bool)",,False
constructor(),"totalSupply, unitRate, decimals, HARD_TOTAL_SUPPLY, HARD_TOTAL_SUPPLY, unitRate, HARD_TOTAL_SUPPLY_BY_LEVEL, HARD_TOTAL_SUPPLY_BY_LEVEL, unitRate, unitRate, ETH_WIN, ETH_WIN, ETH_WIN, ETH_LOSE, ETH_LOSE, balanceOf, totalSupply, name, symbol, clockDevidend",True
joinNetwork(),"isCoreContract, coreContracts, coreContractSum",False
changeDev4(address),,False
addCoreContract(address),"isCoreContract, coreContracts, coreContractSum",False
balanceOf(address),"balanceOf, citizen, currentRoundDividend",True
getBalanceOf(address),"balanceOf, citizen, currentRoundDividend",True
citizenFreeze(uint),"balanceOf, citizen, currentRoundDividend, citizen, currentRoundDividend, citizen, currentRoundDividend, dividendRound, currentRoundDividend",True
citizenUnfreeze(),"citizen, currentRoundDividend, dividendRound, currentRoundDividend, citizen, currentRoundDividend, citizen, currentRoundDividend",True
getCitizenFreezing(address),"citizen, currentRoundDividend",True
"getCitizenFreezingBuyRound(address,uint256)",citizen,True
"getCitizenDevidendBuyRound(address,uint256)","dividendRound, dividendRound, dividendRound, citizen, dividendRound",True
getDividendView(address),"citizen, currentRoundDividend, currentRoundDividend, currentRoundDividend, dividendRound, dividendRound, dividendRound, citizen, dividendRound",True
"getDividendPull(address,uint256)","citizen, currentRoundDividend, currentRoundDividend, currentRoundDividend, dividendRound, dividendRound, dividendRound, citizen, dividendRound, dividendRound, currentRoundDividend, citizen, dividendRound, currentRoundDividend, citizen, citizen, citizen, currentRoundDividend",True
endDividendRound(),"clockDevidend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, DIVIDEND_KEEP_NEXT_PERCENT, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, DIVIDEND_FOR_CURRENT_PERCENT, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, BURN_TOKEN_PERCENT, dividendRound, currentRoundDividend, currentRoundDividend, clockDevidend, clockDevidend, NEXT_DEVIDEND_ROUND",True
nextDividendRound(),"dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, currentRoundDividend",False
citizenDeposit(uint),,True
"citizenUseDeposit(address,uint)","citizen, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, citizen",False
pushDividend(),"dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend",False
"payOut(address,uint256,uint256,uint256)","dividendRound, currentRoundDividend, citizen, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, dividendRound, currentRoundDividend, citizen, dividendRound, currentRoundDividend, citizen",True
"pushGameRefIncome(address,uint256,uint256)","dividendRound, currentRoundDividend, dividendRound, currentRoundDividend",True
citizenWithdrawDeposit(uint),"citizen, citizen",True
"citizenMintToken(address,uint256,int8)","totalSupplyByLevel, currentRound, currentLevel, HARD_TOTAL_SUPPLY_BY_LEVEL, HARD_TOTAL_SUPPLY_BY_LEVEL, totalSupplyByLevel, currentRound, currentLevel, balanceOf, balanceOf, totalSupplyByAddress, totalSupplyByAddress, balanceOf, balanceOf, totalSupply, totalSupply, totalSupplyByLevel, currentRound, currentLevel, HARD_TOTAL_SUPPLY_BY_LEVEL, currentLevel, MAX_LEVEL, currentRound, MAX_ROUND, currentRound, currentLevel, currentLevel, balanceOf, balanceOf, totalSupplyByAddress, totalSupplyByAddress, balanceOf, balanceOf, totalSupply, totalSupply, totalSupplyByLevel, currentRound, currentLevel, totalSupplyByLevel, currentRound, currentLevel",False
getCitizenBalanceEth(address),citizen,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, balanceOf, totalSupply, totalSupplyBurned",False
