Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"recoverTokens(,address,uint256)","token, token",False
getManager(address),,False
"setManager(address,address)",,False
"getInterfaceImplementer(address,bytes32)",,False
"setInterfaceImplementer(address,bytes32,address)",,False
name(),,False
symbol(),,False
totalSupply(),,False
balanceOf(address),,False
granularity(),,False
defaultOperators(),,False
"isOperatorFor(address,address)",,False
authorizeOperator(address),,False
revokeOperator(address),,False
"send(address,uint256,bytes)",,False
"operatorSend(address,address,uint256,bytes,bytes)",,False
"burn(uint256,bytes)",,False
"operatorBurn(address,uint256,bytes,bytes)",,False
"tokensReceived(address,address,address,uint,bytes,bytes)",,False
constructor(address),token,False
burn(uint256),token,False
"tokensReceived(address,address,address,uint256,bytes,bytes)",token,True
constructor(address),token,False
"scheduleTimelock(address,uint256,uint256)","token, totalVested, totalVested, totalVested, schedule",False
release(address),"schedule, timelock, timelock, timelock, timelock, totalVested, totalVested, token",True
releaseBatch(),,False
"tokensReceived(address,address,address,uint256,bytes,bytes)",,False
getScheduledTimelockCount(address),schedule,False
setExchangeRateOracle(address),exchangeRateOracle,False
setExchangeRate(uint256),"exchangeRateOracle, owner, exchangeRate",True
"mint(address,uint256,bytes)",,False
"burn(uint256,bytes)",,False
finishMinting(),,False
"constructor(address,address)","stages, icoTokensLeft, icoTokensLeft, token, whitelist, timelock",False
initialize(),"initialized, token, timelock, TEAM_TOKENS, timelock, TEAM_WALLET, TEAM_TOKENS, TEAM_TOKEN_LOCK_DATE, token, ADVISORS_WALLET, ADVISORS_TOKENS, token, PARTNER_WALLET, PARTNER_TOKENS, communityLock, token, token, communityLock, COMMUNITY_TOKENS, initialized",False
function()externalpayable{buyTokens(msg.sender);}(),,True
"mintPreSaleTokens(,,)","tokenMinter, owner, isFinalized, preSaleTokens, preSaleTokens, preSaleTokens, token, timelock, timelock",True
"mintToken(address,uint256)","tokenMinter, owner, isFinalized, token",True
"mintTokens(,)","tokenMinter, owner, isFinalized, token",True
"mintBounty(,)","tokenMinter, owner, isFinalized, bountyTokensLeft, bountyTokensLeft, bountyBalances, bountyBalances, bountyTokensLeft",True
buyTokens(address),"currentStage, token, WALLET, exchangeRate",True
finalize(),"isFinalized, preSaleTokens, stages, stages, icoTokensLeft, token, token, owner, communityLock, owner, isFinalized",True
setTokenMinter(address),tokenMinter,False
claimBounty(address),"bountyBalances, bountyBalances, token",False
"addStage(uint256,uint256,uint256,uint64,uint64,uint256)","isFinalized, stages, stages, icoTokensLeft, stages",False
setPreSaleTokens(uint256),"isPreSaleTokenSet, preSaleTokens, isPreSaleTokenSet",False
getStageCount(),stages,False
