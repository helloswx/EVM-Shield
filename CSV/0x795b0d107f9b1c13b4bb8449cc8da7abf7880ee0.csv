Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
"constructor(bytes32,address,address,address,address,uint256,uint32,bool)","deskFee, deskFee, desk, dataHashes, seller, buyer, sellerPartner, buyerPartner, price, paymentDeadline",True
transferCloseoutCredit(),"desk, closeoutCredit, closeoutCredit, buyer, closeoutCredit",True
"prolong(uint32,bytes32)","status, seller, paymentDeadline, dataHashes, paymentDeadline",True
terminate(),"buyer, status, status, seller, status, paymentDeadline, status, statusTime, sellerAsset, sellerAssetSent, seller, sellerAsset",True
closeOut(uint256),"status, status, deskFee, seller, isRefundBySellerSet, refundBySeller, isRefundBySellerSet, refundBySeller, buyer, isRefundByBuyerSet, refundByBuyer, isRefundByBuyerSet, refundByBuyer, buyer, status, status, statusTime, isRefundBySellerSet, isRefundByBuyerSet, refundBySeller, refundByBuyer, seller, status, statusTime",True
escalate(bytes32),"seller, buyer, status, status, paymentDeadline, claimHash, status, statusTime, desk",True
"resolveDispute(bytes32,uint256)","status, desk, deskFee, status, statusTime, dataHashes",True
withdrawSellerAsset(),"status, status, status, seller, sellerAsset, sellerAssetSent, sellerAssetSent, seller, sellerAsset, sellerAssetSent",True
withdrawBuyerAsset(),"status, status, buyer, buyerAsset, buyerAssetSent, buyerAssetSent, buyer, buyerAsset, buyerAssetSent",True
function()external{revert();}(),,False
"newDeal(bytes32,address,address,address,uint256,uint32,bool)","closeoutCredit, closeoutCredit, confidealFund, confidealFund, confidealFund",True
setBeneficiary(address),beneficiary,False
setArbitrationManager(address),arbitrationManager,False
setCloseoutCredit(uint256),closeoutCredit,False
collectFee(uint256),"confidealFund, confidealFund, confidealFund, confidealFund",True
arbitratorsPoolSize(),arbitratorsPool,False
addArbitratorToPool(address),"arbitrationManager, arbitratorsPool",True
removeArbitratorFromPool(uint),"arbitrationManager, arbitratorsPool, arbitratorsPool, arbitratorsPool, arbitratorsPool, arbitratorsPool",True
assignArbitratorFromPool(),"arbitratorsPool, arbitratorsPool, arbitratorsPool, arbitrators",True
"assignArbitrator(address,address)","arbitrationManager, arbitrators",True
"resolveDispute(address,bytes32,uint256)",arbitrators,True
withdraw(uint256),"beneficiary, confidealFund, confidealFund, confidealFund, beneficiary",True
contribute(),"confidealFund, confidealFund",False
function()external{revert();}(),,False
