Function Name,State Variables Modified,Can Transfer Ether
owner(),,False
addressOf(bytes32),,False
constructor(address),registry,False
getOwner(),registry,False
getRegistry(),registry,False
constructor(address),,False
getAdmin(),,False
refreshGames(),,False
startDefinedGame(uint),,False
getFirstStartableIndex(),,False
getNumEndableGames(),,False
getAvailableFees(),,False
getInitialPrize(uint),,False
getIsStartable(uint),,False
constructor(address),,False
getMonarchyController(),,False
issueDividend(),,False
profitsSendable(),,False
constructor(address),,False
getTreasury(),,False
constructor(uint),,False
getDailyLimit(),vars,False
getDailyLimitUsed(),"vars, vars",False
getDailyLimitRemaining(),"vars, vars",False
constructor(address),owner,False
add(address),"entries, entries, entries",False
remove(address),"entries, entries, entries, entries",False
size(),"entries, entries",False
has(address),entries,False
addresses(),"entries, entries",False
constructor(address),owner,False
"add(address,uint)","entries, entries, entries, entries, entries, total",False
"subtract(address,uint)","entries, total, entries, entries, entries, total",False
size(),"entries, entries",False
balanceOf(address),entries,False
balances(),"entries, entries, entries",False
constructor(address),"ledger, whitelist",False
addToWhitelist(address),whitelist,True
removeFromWhitelist(address),whitelist,True
function()publicpayable{}(),,False
addBankroll(),"whitelist, whitelist, ledger, bankroll, ledger, bankroll",True
"removeBankroll(uint,string)","ledger, bankroll, ledger, bankroll",True
sendProfits(),profitsSent,True
getCollateral(),,False
getWhitelistOwner(),,False
profits(),bankroll,False
profitsTotal(),profitsSent,False
bankrollAvailable(),bankroll,False
bankrolledBy(address),ledger,False
bankrollerTable(),ledger,False
sendProfits(),,False
profits(),,False
constructor(address),,False
setDailyLimit(uint),,True
setIssueDividendReward(uint),issueDividendRewardBips,True
setSendProfitsReward(uint),sendProfitsRewardBips,True
"setMonarchyRewards(uint,uint)","monarchyStartReward, monarchyEndReward",True
doIssueDividend(),issueDividendRewardBips,True
issueDividendReward(),issueDividendRewardBips,False
doSendProfits(address),sendProfitsRewardBips,True
sendProfitsReward(address),sendProfitsRewardBips,True
startMonarchyGame(uint),monarchyStartReward,True
startMonarchyGameReward(),monarchyStartReward,False
refreshMonarchyGames(),monarchyEndReward,True
refreshMonarchyGamesReward(),monarchyEndReward,False
getCollateral(),,False
getWhitelistOwner(),,False
