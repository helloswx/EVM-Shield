Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
constructor(),,True
"transferOwnership(address,string)",,False
"addOwner(address,string)",,True
removeOwner(address),,True
isOwner(address),,False
getOwnerName(address),,False
constructor(),,False
setExchangeAddr(address),,False
setExchangeTimeOut(uint32),,False
start2YearLock(),,True
isLockAddr(address),,False
addLockAddress(address),,False
unlockAllAddress(),,False
checkAllowControl(address),,False
setDisableLock(),,False
getKYCData(uint256),"kycDatas, kycDatas",False
getKYCDataByAddr(address),kycDatas,False
getKYCData(),kycDatas,True
"changePassword(bytes8,bytes8)","kycDatas, kycDatas, kycDatas",True
"createKYCData(bytes32,bytes32,bytes32,bytes8,bytes8,bytes16,uint16,bytes32,address)","kycDatas, kycSOSToOwner",False
maxKYCData(),kycDatas,False
haveKYCData(address),,False
totalSupply(),totalSupply_,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,True
"approve(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
getMaxHolders(),holders,False
getHolder(uint256),holders,False
"addFounder(address,string)",closeICO,False
"addAdvisor(address,string)",closeICO,False
"changeAdvisorAddr(address,address)",closeICO,False
"changeFounderAddr(address,address)",closeICO,False
isAdvisor(address),,False
isFounder(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"sosTransfer(bytes32,bytes32,bytes32,bytes8,address)","kycSOSToOwner, kycDatas, kycDatas, kycDatas, kycDatas, kycSOSToOwner",False
"inTransfer(address,address,uint256)",,False
balanceOfPrivate(address),,False
"redeemToken(address,uint256)",,False
getMaxHolder(),,False
getAddressByID(uint256),,False
balancePrivate(address),,False
balanceOf(address),,False
"intTransfer(address,address,uint256)",,False
"transferWallet(address,address)",,False
getUserControl(address),,False
"useSGDS(address,uint256)",,False
"transfer(address,uint256)",,False
balanceOf(address),,False
"redeemWarrant(address,uint256)",,False
getWarrantInfo(),,False
getUserControl(address),,False
"sendWarrant(address,uint256)",,False
expireDate(),,False
"addReferal(address,uint8,uint8)",,False
getReferByAddr(address),,False
checkHaveRefer(address),,False
getCommission(address),,False
constructor(),"pauseICO, icoEndTime",False
pauseSellICO(),"pauseICO, pauseICO",False
resumeSellICO(),"pauseICO, pauseICO, icoEndTime, icoEndTime, icoEndTime, pauseICO",False
refund(),"pauseICO, icoEndTime, sgds",True
userSetAllowControl(bool),closeICO,True
"buyNateeToken(address,uint256,bool)","closeICO, pauseICO, icoEndTime, sgds, sgds, totalSupply_",False
"redeemCommision(address,uint256)",sgds,True
getTotalSell(),,False
getTotalBuyICO(address),,False
"addCOPartner(address,uint256,uint256)",,False
"redeemFund(address,uint256)",sgds,True
checkRedeemFund(address),,False
setCloseICO(),"closeICO, icoEndTime, closeICO, TOKEN_PER_ADVISOR, TOKEN_PER_ADVISOR, TOKEN_PER_ADVISOR, TOKEN_PER_ADVISOR, TOKEN_PER_FOUNDER, TOKEN_PER_ADVISOR, totalSupply_, TOKEN_PER_ADVISOR, TOKEN_PER_ADVISOR, TOKEN_PER_ADVISOR, TOKEN_PER_FOUNDER, totalSupply_, TOKEN_PER_FOUNDER, TOKEN_PER_FOUNDER, TOKEN_PER_FOUNDER",False
constructor(),"AGC_ADDR, AGC_ADDR, RM_PRIVATE_INVESTOR_ADDR, ICZ_ADDR, ICZ_ADDR, SEITEE_INTERNAL_USE, RM_PRIVATE_INVESTOR_ADDR, totalSupply_, RM_PRIVATE_INVESTOR_ADDR, RM_PRIVATE_INVESTOR_ADDR, RM_PRIVATE_INVESTOR_ADDR, RM_PRIVATE_INVESTOR_ADDR, SEITEE_INTERNAL_USE, totalSupply_, SEITEE_INTERNAL_USE, SEITEE_INTERNAL_USE, SEITEE_INTERNAL_USE, sgds, warrant, nateePrivate",False
setSGDSContractAddress(address),sgds,False
setNateePrivate(address),nateePrivate,False
setNateeWarrant(address),warrant,False
"changeWarrantPrice(uint256,uint256)","warrant, nateeWExcRate, nateeWExcRateExp",False
"redeemWarrant(address,uint256)","closeICO, sgds, warrant, warrant, nateeWExcRate, nateeWExcRateExp, sgds, sgds, warrant, totalSupply_, warrant",True
reddemAllPrivate(),"nateePrivate, nateePrivate, nateePrivate, nateePrivate, totalSupply_",False
