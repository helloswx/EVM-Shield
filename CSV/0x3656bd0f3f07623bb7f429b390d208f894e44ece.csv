Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"transfer(address,uint)",,False
INFLIV(),"IFVOwner, IFVOwner, stage, IFVOwner, IFVOwner",True
"function()publicpayable{require(stage!=CurrentStages.ENDED);require(!stopped&&msg.sender!=IFVOwner);if(stage==CurrentStages.PRE&&now<=PreEndTimeStamp){require(ETHReceived<=1500ether);ETHReceived=(ETHReceived).add(msg.value);input_token=((msg.value).mul(PricePre));bonus_token=((input_token).mul(50)).div(100);total_token=input_token+bonus_token;transferTokens(msg.sender,total_token);}elseif(now<=ICO2){if(now<ICO1){input_token=(msg.value).mul(PriceICO1);bonus_token=((input_token).mul(25)).div(100);total_token=input_token+bonus_token;transferTokens(msg.sender,total_token);}elseif(now>=ICO1&&now<ICO2){input_token=(msg.value).mul(PriceICO2);bonus_token=((input_token).mul(10)).div(100);total_token=input_token+bonus_token;transferTokens(msg.sender,total_token);}}else{input_token=(msg.value).mul(PublicPrice);transferTokens(msg.sender,input_token);}}()","stage, IFVOwner, stage, PreEndTimeStamp, ETHReceived, ETHReceived, ETHReceived, PricePre, PriceICO1, PriceICO2, PublicPrice",True
start_ICO(),"stage, PreStartTimeStamp, PreEndTimeStamp, PreEndTimeStamp",False
PauseICO(),,False
ResumeICO(),,False
end_ICO(),"stage, _totalsupply, _totalsupply",False
"transferFrom(address,address,uint256)",,True
"transfer(address,uint256)",,True
withdrawETH(),IFVOwner,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
totalSupply(),_totalsupply,False
balanceOf(address),,False
