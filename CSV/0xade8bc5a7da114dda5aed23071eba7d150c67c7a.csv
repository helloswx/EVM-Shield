Function Name,State Variables Modified,Can Transfer Ether
constructor(address),"owner, balances, owner, totalSupply, owner, totalSupply",False
balanceOf(address),balances,False
"transfer(address,uint256)","balances, balances, balances, balances, balances, balances, balances",True
"transferFrom(address,address,uint256)","balances, balances, balances, allowance, balances, balances, balances, balances, allowance, allowance",True
"approve(address,uint256)","balances, allowance, allowance",True
"setStage(uint256,uint256,uint256,uint256,uint256)","ico, ico, balances, decimals, ico, ico, ico, ico, ico, ico",True
setWithdrawalWallet(address),"wallet, wallet",False
"function()payablepublicisRunningvalidAddress{require(msg.value>=minEth);require(now>=ico.icoStartDate&&now<=ico.icoEndDate);uinttokens=msg.value*tokenPerEth;uintbonus=(tokens.mul(ico.icoBonus)).div(100);uinttotal=tokens+bonus;require(ico.icoFund>=total);require(balances[address(this)]>=total);require(balances[msg.sender].add(total)>=balances[msg.sender]);ico.icoFund=ico.icoFund.sub(total);ico.icoSold=ico.icoSold.add(total);_sendTokens(address(this),msg.sender,total);wallet.transfer(msg.value);}()","minEth, ico, ico, tokenPerEth, ico, ico, balances, balances, balances, ico, ico, ico, ico, wallet",True
"withdrawTokens(address,uint256)","decimals, balances, balances, balances",True
