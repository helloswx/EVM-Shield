Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
"changeMultisigs(address,address)","multisig, multisigPreICO, multisig, multisigPreICO",False
"transfer(address,uint256)",,True
balanceOf(address),,False
"approve(address,uint256)",,True
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,True
"increaseApproval(address,uint)",,True
"decreaseApproval(address,uint)",,True
startPrivatePreICO(),"startTimeICO, startTimePreICO, startTimePreICO, startTimePrivatePreICO, startTimePreICO, startTimePreICO",False
startPreICO(),"startTimeICO, startTimePreICO, startTimePreICO, startTimePreICO",False
startICO(),"startTimeICO, startTimePreICO, startTimeICO, startTimePreICO",False
stopSale(),"startTimeICO, startTimePreICO, startTimeICO, multisigPreICO, capPreICO, capPreICOTrasferred, capPreICOTrasferred, capPreICO, capPreICO, startTimeICO, startTimePreICO, startTimePrivatePreICO",True
currentBonusPercent(),"startTimeICO, startTimePreICO, startTimeICO, startTimeICO, startTimeICO, ICOBonusPercent1week, startTimeICO, startTimeICO, ICOBonusPercent2week, startTimeICO, startTimeICO, ICOBonusPercent3week, startTimePrivatePreICO, privatePreICOBonusPercent, preICOBonusPercent",False
"function()payablepublic{require(startTimeICO>0||startTimePreICO>0);require(msg.sender!=address(0));require(msg.value>0);require(cap<hardCap);uint256bonusPercent=currentBonusPercent();uint256currentPrice=price.mul(100-bonusPercent).div(100);addressdepositor=msg.sender;uint256deposit=msg.value;uint256tokens=deposit/currentPrice;if(startTimeICO>0){require(soldTokenCount.add(tokens)<=maxPreICOandICOSupply);}else{if(startTimePrivatePreICO>0){tokens=(tokens*(100+privatePreICOFreeBonusPercent))/100;}else{tokens=(tokens*(100+preICOFreeBonusPercent))/100;}require(soldTokenCount.add(tokens)<=maxPreICOSupply);}balances[owner]=balances[owner].sub(tokens);balances[depositor]=balances[depositor].add(tokens);soldTokenCount=soldTokenCount.add(tokens);if(startTimeICO>0){ICObalances[depositor]=ICObalances[depositor].add(tokens);}if(startTimeICO>0){ICOdepositors[depositor]=ICOdepositors[depositor].add(deposit);}else{if(startTimePrivatePreICO>0){privatePreICOdepositors[depositor]=privatePreICOdepositors[depositor].add(deposit);}else{preICOdepositors[depositor]=preICOdepositors[depositor].add(deposit);}}cap=cap.add(deposit);if(startTimePreICO>0){capPreICO=capPreICO.add(deposit);}capFiatAndETH=capFiat.add(cap);if(capFiatAndETH>=softCap){capReached=true;}TokenPurchase(owner,depositor,deposit,tokens);}()","startTimeICO, startTimePreICO, cap, hardCap, price, startTimeICO, soldTokenCount, maxPreICOandICOSupply, startTimePrivatePreICO, privatePreICOFreeBonusPercent, preICOFreeBonusPercent, soldTokenCount, maxPreICOSupply, owner, owner, soldTokenCount, soldTokenCount, startTimeICO, ICObalances, ICObalances, startTimeICO, ICOdepositors, ICOdepositors, startTimePrivatePreICO, privatePreICOdepositors, privatePreICOdepositors, preICOdepositors, preICOdepositors, cap, cap, startTimePreICO, capPreICO, capPreICO, capFiatAndETH, capFiat, cap, capFiatAndETH, softCap, capReached, owner",True
"extBuyTokens(address,uint256,uint256)","startTimeICO, startTimePreICO, extOwner, owner, owner, soldTokenCount, soldTokenCount, capFiat, capFiat, capFiatAndETH, capFiat, cap, capFiatAndETH, softCap, capReached, owner",True
transferExtOwnership(address),extOwner,False
startRefund(),"startTimeICO, startTimePreICO, startTimeRefund, startTimeRefund",False
stopRefund(),"startTimeRefund, startTimeRefund, refundCompleted",False
refund(),"capFiatAndETH, softCap, startTimeRefund, ICOdepositors, ICObalances, ICOdepositors, ICObalances, owner, owner, cap, cap, capFiatAndETH, capFiatAndETH, soldTokenCount, soldTokenCount",True
fixSale(),"refundCompleted, startTimeICO, startTimePreICO, startTimeRefund, multisig, soldTokenCount, totalSupply, maxPreICOandICOSupply, maxPreICOandICOSupply, multisig, multisig, cap, capPreICOTrasferred, soldTokenCount, fixSaleCompleted",True
burn(uint),"fixSaleCompleted, totalSupply, totalSupply, refundCompleted, fixSaleCompleted",True
FueldToken(),"owner, owner, totalSupply",True
