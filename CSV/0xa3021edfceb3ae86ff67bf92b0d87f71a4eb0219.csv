Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
constructor(),owner,True
transferOwnership(address),"newOwner, owner, newOwner, owner, newOwner",False
renounceOwnership(),"owner, owner",False
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
constructor(),"owner, newOwner, totalTokens, crowdSaleCap, owner, owner",False
getBonuses(uint256),"preIcoStartDate, preIcoEndDate, bonusLimit1, bonusLimit2, bonusLimit3, bonusLimit4, bonusLimit5, icoStartDate, icoEndDate, icoStartDate, bonusPeriod, icoStartDate, bonusPeriod, icoStartDate, bonusPeriod, icoStartDate, bonusPeriod",False
"mint(address,uint256)",totalTokens,False
"function()publicpayable{require(now>=preIcoStartDate);uint256tokens=msg.value.mul(1e4).div(basePrice);uint256bonuses=getBonuses(tokens);uint256extraTokens=tokens.mul(bonuses).div(100);tokens=tokens.add(extraTokens);require(totalSupply_.add(tokens)<=totalTokens);balances[msg.sender]=balances[msg.sender].add(tokens);totalSupply_=totalSupply_.add(tokens);contribution[msg.sender]=contribution[msg.sender].add(msg.value);weiRaised=weiRaised.add(msg.value);require(weiRaised<=hardCap);if(now>icoEndDate||weiRaised>hardCap){wallet.transfer(msg.value);}elseif(weiRaised>=softCap){owner.transfer(msg.value);}emitTransfer(address(this),msg.sender,tokens);}()","preIcoStartDate, basePrice, totalTokens, weiRaised, weiRaised, weiRaised, hardCap, icoEndDate, weiRaised, hardCap, wallet, weiRaised, softCap, owner",True
getEther(),"refundEndDate, weiRaised, softCap, owner",True
setRefundPercent(uint256),refundPercent,False
getRefund(),"icoEndDate, refundEndDate, weiRaised, softCap, refundPercent",True
