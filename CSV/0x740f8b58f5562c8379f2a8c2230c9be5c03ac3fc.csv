Function Name,State Variables Modified,Can Transfer Ether
"canCall(address,address,bytes4)",,False
constructor(),owner,True
setOwner(address),"owner, owner",False
setAuthority(),"authority, authority",False
constructor(address),,False
"function()externalpayable{assembly{letmasterCopy:=and(sload(0),0xffffffffffffffffffffffffffffffffffffffff)calldatacopy(0,0,calldatasize())letsuccess:=delegatecall(gas,masterCopy,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())ifeq(success,0){revert(0,returndatasize())}return(0,returndatasize())}}()",,True
implementation(),,False
proxyType(),,False
function()publicpayable{deposit();}(),,False
deposit(),balanceOf,True
withdraw(uint),"balanceOf, balanceOf",True
totalSupply(),,False
"approve(address,uint)",allowance,True
"transfer(address,uint)",,True
"transferFrom(address,address,uint)","balanceOf, allowance, allowance, allowance, balanceOf, balanceOf",True
isLeapYear(uint16),,False
leapYearsBefore(uint),,False
"getDaysInMonth(uint8,uint16)",,False
getYear(uint),,False
getMonth(uint),,False
getDay(uint),,False
getHour(uint),,False
getMinute(uint),,False
getSecond(uint),,False
getWeekday(uint),,False
"toTimestamp(uint16,uint8,uint8)",,False
"toTimestamp(uint16,uint8,uint8,uint8)",,False
"toTimestamp(uint16,uint8,uint8,uint8,uint8)",,False
"toTimestamp(uint16,uint8,uint8,uint8,uint8,uint8)",,False
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
changeMasterCopy(address),,False
constructor(),"admins, isAdmin",True
setWETH9(address),weth9,False
"setAccountHandler(address,bool)",isAccountHandler,False
toggleAdminsControl(),"disableAdminControl, disableAdminControl",False
isAdminValid(address),"disableAdminControl, isAdmin",False
getAllAdmins(),admins,False
addAdmin(address),"isAdmin, admins, isAdmin",True
removeAdmin(address),"isAdmin, isAdmin, admins, admins, admins, admins, admins, admins",True
stop(),stopped,False
start(),stopped,False
"init(address,address)","users, isUser, config, weth9, config, isInitialized",False
getAllUsers(),users,False
balanceFor(address),,False
"transferBySystem(address,address,uint)",,True
"transferByUser(address,address,uint,uint,bytes)","actionCompleted, isUser, actionCompleted, weth9, weth9",True
"addUser(address,uint,bytes)","actionCompleted, isUser, actionCompleted, users, isUser",False
"removeUser(address,uint,bytes)","actionCompleted, users, isUser, actionCompleted, isUser, users, users, users, users, users, users",False
"function()externalpayable{require(msg.data.length==0&&msg.value>0,""Account::fallback INVALID_ETHER_TRANSFER"");if(msg.sender!=address(weth9)){weth9.deposit.value(msg.value)();}}()","weth9, weth9",True
"changeImpl(address,uint,bytes)","actionCompleted, isUser, actionCompleted",False
"constructor(,address)","config, accountMaster",False
setConfig(),config,False
setAccountMaster(address),accountMaster,False
newAccount(address),"accountMaster, config, accounts, userToAccounts, isAccount",True
batchNewAccount(),,False
getAllAccounts(),accounts,False
getAccountsForUser(address),userToAccounts,False
"transfer(address,address,uint)",,True
"transferFromAccount(address,address,address,uint)",,True
"constructor(,,,)","escrow, accountFactory, dateTime, config, deployTimestamp, TIME_INTERVAL",False
setEscrow(),escrow,False
setAccountFactory(),accountFactory,False
setDateTime(),dateTime,False
setConfig(),config,False
"createOrder(,,bytes)","isOrder, accountFactory, escrow, escrow, orders, hashToOrder, isOrder, accountToOrders, deposits, deposits, orderToCumulative, orderToCumulative",True
"cancelOrder(bytes32,bytes)","isOrder, cancelledOrders, hashToOrder",False
processOrder(bytes32),"isOrder, cancelledOrders, hashToOrder",False
"release(address,address,uint)","escrow, escrow",True
"lock(address,address,uint,uint,uint)","accountFactory, escrow, escrow, escrow, profits, profits, losses, losses",True
"lockSurplus(address,address,address,uint)","escrow, surplus, surplus",True
"transferSurplus(address,address,address,uint)","escrow, surplus, surplus, surplus, escrow",True
"updateReserveValues(address,uint)","lastReserveRuns, deployTimestamp, TIME_INTERVAL, TIME_INTERVAL, TIME_INTERVAL, reserves, TIME_INTERVAL, reserves, deposits, TIME_INTERVAL, profits, TIME_INTERVAL, losses, TIME_INTERVAL, withdrawals, TIME_INTERVAL, lastReserveRuns, TIME_INTERVAL, lastReserveRuns, reserves, profits, losses",False
"updateOrderCumulativeValueBatch(,)",,False
"updateOrderCumulativeValue(bytes32,uint)","isOrder, cancelledOrders, hashToOrder, orderToCumulative, TIME_INTERVAL, TIME_INTERVAL, lastReserveRuns, profits, TIME_INTERVAL, reserves, losses, TIME_INTERVAL, reserves, TIME_INTERVAL",False
getAllOrders(),orders,False
getOrdersForAccount(address),accountToOrders,False
getOrder(bytes32),hashToOrder,False
"tradeWithInputFixed(,address,address,uint)",,False
"tradeWithOutputFixed(,address,address,uint,uint)",,False
"getExpectedRate(address,address,uint)",,False
"isTradeFeasible(address,address,uint)",,False
"constructor(,,,address,)","escrow, accountFactory, reserve, feeWallet, config",False
setEscrow(),escrow,False
setAccountFactory(),accountFactory,False
setReserve(),reserve,False
setConfig(),config,False
setFeeWallet(address),feeWallet,False
"createOrder(,,address,bytes)","isOrder, accountFactory, reserve, orders, hashToOrder, isOrder, accountToOrders, escrow, escrow, reserve, escrow, initialTradeAmount, initialTradeAmount",True
"liquidateOrder(bytes32,address,bytes)","isOrder, isLiquidated, isDefaulted, hashToOrder, escrow, initialTradeAmount, escrow, isLiquidated",False
"processTradeForExpiry(bytes32,address)","isOrder, isLiquidated, isDefaulted, hashToOrder, escrow, initialTradeAmount, escrow, isDefaulted",False
"processTradeForStopLoss(bytes32,address,,uint)","isOrder, isLiquidated, isDefaulted, hashToOrder, escrow, initialTradeAmount, escrow, isDefaulted",False
"processTradeForStopProfit(bytes32,address,,uint)","isOrder, isLiquidated, isDefaulted, hashToOrder, escrow, initialTradeAmount, escrow, isLiquidated",False
getAllOrders(),orders,False
getOrder(bytes32),hashToOrder,False
getTrade(bytes32),hashToOrder,False
getOrdersForAccount(address),accountToOrders,False
