Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,True
"allowance(address,address)",,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"transferAndCall(address,uint,bytes)",,False
"transferAndCall(address,uint,bytes)",,True
Ownable(),owner,True
requestOwnershipTransfer(address),"newOwnerCandidate, newOwnerCandidate",True
acceptOwnership(),"owner, owner, newOwnerCandidate, newOwnerCandidate, owner",False
"transferAnyERC20Token(address,uint256)",owner,True
"ColuLocalCurrency(string,string,uint8,uint256)","totalSupply, name, symbol, decimals, totalSupply",True
"tokenFallback(address,uint,bytes)",,False
"tokenFallback(address,uint,bytes)",,True
supportsToken(address),,False
getCurrentPrice(),,False
"change(address,uint,address)",,False
"change(address,uint,address,uint)",,False
change(address),,False
"change(address,uint)",,False
"quote(address,uint,address)",,False
openForPublicTrade(),,False
isOpenForPublic(),,False
"EllipseMarketMaker(address,address,address)",,True
supportsToken(address),"token1, token2",False
"function()public{address_mmLib=mmLib;if(msg.data.length>0){assembly{calldatacopy(0xff,0,calldatasize)letretVal:=delegatecall(gas,_mmLib,0xff,calldatasize,0,0x20)switchretValcase0{revert(0,0)}default{return(0,0x20)}}}}()",mmLib,True
supportsToken(address),,False
"calcReserve(uint256,uint256,uint256)",,False
validateReserves(),,False
withdrawExcessReserves(),,False
initializeAfterTransfer(),,False
initializeOnTransfer(),,False
"getPrice(uint256,uint256,uint256,uint256)",,False
"CurrencyFactory(address,address)","mmLibAddress, clnAddress",False
"createCurrency(string,string,uint8,uint256)","mmLibAddress, clnAddress, currencyMap, tokens",True
"insertCLNtoMarketMaker(address,uint256)","clnAddress, clnAddress, clnAddress",True
insertCLNtoMarketMaker(address),"clnAddress, clnAddress",True
"extractCLNfromMarketMaker(address,uint256)","clnAddress, clnAddress",True
extractCLNfromMarketMaker(),"clnAddress, clnAddress",True
openMarket(address),,True
supportsToken(address),"clnAddress, currencyMap",False
getMarketMakerAddressFromToken(address),currencyMap,False
"IssuanceFactory(address,address)","CLNTotalSupply, PRECISION",False
"createIssuance(uint256,uint256,uint256,uint256,string,string,uint8,uint256)","mmLibAddress, CLNTotalSupply, mmLibAddress, R2, CLNTotalSupply, R2",False
"participate(address,uint256)","clnAddress, clnAddress, issueMap, PRECISION, issueMap, issueMap, totalCLNcustodian, totalCLNcustodian",True
participate(address),"clnAddress, clnAddress, issueMap, PRECISION, issueMap, issueMap, totalCLNcustodian, totalCLNcustodian, clnAddress",True
finalize(address),"issueMap, issueMap, totalCLNcustodian, totalCLNcustodian, clnAddress, issueMap",True
"refund(address,uint256)","clnAddress, PRECISION, issueMap, issueMap, issueMap, totalCLNcustodian, totalCLNcustodian, clnAddress",True
refund(),"clnAddress, PRECISION, issueMap, issueMap, issueMap, totalCLNcustodian, totalCLNcustodian, clnAddress",True
"insertCLNtoMarketMaker(address,uint256)",,False
insertCLNtoMarketMaker(address),,False
"extractCLNfromMarketMaker(address,uint256)",,False
extractCLNfromMarketMaker(),,False
openMarket(address),,False
"isValidIssuance(uint256,uint256,uint256,uint256)",PRECISION,False
getMarketMakerAddressFromToken(address),currencyMap,False
"getIssuanceCount(bool,bool,bool,bool)","tokens, issueMap, tokens",False
"getIssuanceIds(bool,bool,bool,bool,uint,uint)","tokens, issueMap, tokens, tokens",False
"transferAnyERC20Token(address,uint256)","clnAddress, clnAddress, totalCLNcustodian, issueMap, currencyMap, owner",True
