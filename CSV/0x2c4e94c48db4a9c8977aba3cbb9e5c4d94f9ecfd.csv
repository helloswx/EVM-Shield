Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,False
"StandardToken(string,string,uint8)","name, symbol, decimals",False
balanceOf(address),balances,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
"multiTransfer(,)",,True
"transferFrom(address,address,uint256)","balances, allowed, balances, balances, balances, balances, allowed, allowed",True
"allowance(address,address)",allowed,False
"approve(address,uint256)",allowed,True
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)","totalSupply, totalSupply, balances, balances",False
finishMinting(),mintingFinished,False
CappedToken(uint256),cap,False
"mint(address,uint256)","totalSupply, cap",False
burn(uint256),"balances, balances, balances, totalSupply, totalSupply",True
repayment(),repayments,False
reward(),,True
"transfer(address,uint256)",,True
"multiTransfer(,)",,True
"transferFrom(address,address,uint256)",,True
Token(),,False
pause(),"pausestatus, paused",False
JullarCrowdsale(),"token, BeneficiaryA, oSbA, BenefB, oSbB, JullarBountyAdr, JULLARbounty, JullarPartnersAdr, JULLARpartner, token, BeneficiaryA, oSbA, token, BenefB, oSbB, token, JullarBountyAdr, JULLARbounty, token, JullarPartnersAdr, JULLARpartner",False
function()payablepublic{if(crowdsaleClosed==false){purchase();}}(),crowdsaleClosed,False
purchase(),"pausestatus, crowdsaleClosed, tokensSold, tokensForSale, priceTokenWei, tokensSold, tokensForSale, tokensSold, tokensForSale, priceTokenWei, tokensSold, tokensSold, collectedWei, collectedWei, token",True
StartNextStage(),"crowdsaleClosed, pausestatus, pausestatus, paused",False
"NewStage(uint,string,string,uint)","crowdsaleClosed, pausestatus, tokensForSale, ActiveSalesPhase, priceTokenWei, TokenPriceETH",False
AddAdrJullarTeam(address),"JullarTeamAdr, JullarTeamAdr",False
WithdrawalofFunds(uint),JullarTeamAdr,True
closeCrowdsale(),"crowdsaleClosed, BeneficiaryA, BenefB, token, BeneficiaryA, token, token, token, BeneficiaryA, crowdsaleClosed",True
