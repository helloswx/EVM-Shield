Function Name,State Variables Modified,Can Transfer Ether
constructor(address),owner,False
"constructor(address,address,address,address,address,address,address,uint256,uint256,uint256)","contractBLK, contractBiLinkExchange, contractBiLinkLoan, contractLoanLogic, contractMarketData, accountCost, ratioProfit2Cost, ratioProfit2BuyBLK, priceBLK",False
setThisContractAsLegacy(),isLegacy,False
setRatioProfit2Cost(uint256),ratioProfit2Cost,False
setRatioProfit2BuyBLK(uint256),ratioProfit2BuyBLK,False
"setTokenAssuranceAccount(address,address)","token2AssuranceAccount, token2AssuranceAccount",False
getTokenAssuranceAccount(address),token2AssuranceAccount,False
getTokenAssuranceAmount(address),"account2Token2Balance, token2AssuranceAccount",False
depositEther(),"isLegacy, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
withdrawEther(uint256),"account2Token2Balance, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
"depositToken(address,uint256)","isLegacy, depositingTokenFlag, depositingTokenFlag, token2AssuranceAccount, assuranceAccount2LastDepositTime, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
"withdrawToken(address,uint256)","account2Token2Balance, token2AssuranceAccount, account2Token2Balance, contractLoanLogic, assuranceAccount2LastDepositTime, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
"tokenFallback(address,uint256,bytes)",depositingTokenFlag,False
"getBalance(address,address)",account2Token2Balance,False
"getAvailableBalance(address,address)","account2Token2Balance, contractLoanLogic",False
"modifyBalance(address,address,uint256,bool)","contractBiLinkLoan, contractBiLinkExchange, account2Token2Balance, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
"distributeEthProfit(address,uint256)","ratioProfit2Cost, account2Token2Balance, accountCost, account2Token2Balance, accountCost, ratioProfit2BuyBLK, amountEthToBuyBLK, amountEthToBuyBLK, token2ProfitShare, token2ProfitShare, contractBLK, ETH_BLK_MULTIPLIER",False
"distributeTokenProfit(address,address,uint256)","token2ProfitShare, token2ProfitShare, contractMarketData, contractBLK, ETH_BLK_MULTIPLIER",False
shareProfit(address),"token2ProfitShare, contractBLK, token2ProfitShare, token2ProfitShare, contractBLK, contractBLK, account2Token2Balance, account2Token2Balance",False
"migrateFund(address,)","contractLoanLogic, account2Token2Balance, account2Token2Balance, account2Token2Balance, account2Token2Balance",True
depositFromUserMigration(address),"account2Token2Balance, account2Token2Balance",False
"depositTokenFromUserMigration(address,uint,address)","depositingTokenFlag, depositingTokenFlag, account2Token2Balance, account2Token2Balance",True
getRemainBuyBLKAmount(),amountEthToBuyBLK,False
sellBLK(uint256),"account2Token2Balance, contractBLK, account2Token2Balance, contractBLK, priceBLK, amountEthToBuyBLK, amountEthToBuyBLK, account2Token2Balance, account2Token2Balance, contractBLK",True
"getTotalPledgeAmount(address,address)",,False
hasUnpaidLoan(address),,False
getTotalBorrowAmount(address),,False
"getTokenExchangeRatio(address,address)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
getCanShareProfitAccounts(),,False
totalSupply(),,False
balanceOf(address),,False
"mint(address,uint256)",,False
burn(uint256),,False
