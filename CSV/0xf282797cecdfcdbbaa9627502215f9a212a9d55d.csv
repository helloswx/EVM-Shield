Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner",True
transferTechSupport(address),"owner, techSupport, newTechSupport",True
acceptSupport(),"newTechSupport, techSupport, newTechSupport",True
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
setCrowdsaleContract(address),,False
"sendCrowdsaleTokens(address,uint256)",,False
getOwner(),,False
icoSucceed(),,False
endIco(),,False
"constructor(address,address)","token, techSupport, token, owner, token, distributionAddress, oraclizeBalance, tokenPrice, startingExchangePrice",False
getCurrentPhase(uint),"PRE_ICO_START, PRE_ICO_FINISH, ICO_START, ICO_FINISH",False
getTimeBasedBonus(uint),"ICO_START, ICO_START, ICO_START",False
"function()publicpayable{require(msg.value>=minDeposit);require(buy(msg.sender,msg.value,now));}()",minDeposit,True
calculateTokensWithoutBonus(uint),"decimals, tokenPrice",False
calculateTokensWithBonus(uint),"decimals, tokenPrice",False
isIcoTrue(),"tokensSold, ICO_MIN_CAP",False
refund(),ICO_FINISH,True
"manualSendEther(address,uint)","ethCollected, ethCollected, tokensSold, tokensSold, token",True
"manualSendTokens(address,uint)","tokensSold, tokensSold, token",True
endIco(),"ICO_FINISH, token",False
startOraclize(uint),"updateFlag, updateFlag, oraclizeBalance, oraclizeBalance",False
addEtherForOraclize(),"oraclizeBalance, oraclizeBalance",False
requestOraclizeBalance(),"updateFlag, oraclizeBalance, owner, oraclizeBalance, owner, oraclizeBalance",True
stopOraclize(),updateFlag,False
"__callback(bytes32,string,bytes)","tokenPrice, priceUpdateAt, updateFlag",True
