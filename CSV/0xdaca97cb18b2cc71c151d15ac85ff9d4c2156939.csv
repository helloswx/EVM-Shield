Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, newOwner",True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, owner, newOwner",True
balanceOf(address),,False
"transfer(address,uint256)",,False
burn(uint256),,False
readRate(string),,False
"constructor(address,uint256,uint256,uint256,uint256,uint256)","tokenSaleContract, soldTokens, remainingTokens, oneTokenInFiatWei, etherMinimum",False
"setTime(uint256,uint256)","startTime, endTime",False
changeMinimum(uint256),etherMinimum,False
started(),"startTime, remainingTokens",False
ended(),"endTime, remainingTokens",False
startTime(),startTime,False
endTime(),endTime,False
totalTokens(),"remainingTokens, soldTokens",False
remainingTokens(),remainingTokens,False
price(),"tokenSaleContract, oneTokenInFiatWei",False
"function()publicpayable{require(now>startTime,""now > startTime"");require(now<endTime,""now < endTime"");require(msg.value>=etherMinimum,""msg.value >= etherMinimum"");require(remainingTokens>0,""remainingTokens > 0"");uint256tokenAmount=tokenSaleContract.buyFromRC.value(msg.value)(msg.sender,oneTokenInFiatWei,remainingTokens);remainingTokens=remainingTokens.sub(tokenAmount);soldTokens=soldTokens.add(tokenAmount);emitBuyRC(msg.sender,msg.data,msg.value,tokenAmount,oneTokenInFiatWei);}()","startTime, endTime, etherMinimum, remainingTokens, tokenSaleContract, oneTokenInFiatWei, remainingTokens, remainingTokens, remainingTokens, soldTokens, soldTokens, oneTokenInFiatWei",True
"constructor(address,address,uint256,uint256,,,uint256,uint256)","tokenContract, rateContract, decimals, tokenContract, oneTokenInEur, wallet",False
tokenValueInEther(uint256),"rateContract, decimals",False
"buyFromRC(address,uint256,uint256)","decimals, tokenContract, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, tokenContract",True
addRC(address),rc,False
"setTime(uint256,uint256)","startTime, endTime",False
"withdrawTokens(address,uint256)",tokenContract,True
setTokenContract(address),tokenContract,False
setRateContract(address),rateContract,False
"claim(address,uint256)",tokenContract,True
function()publicpayable{revert();}(),,False
"constructor(address,,,uint256,uint256)","tokenContract, tokenSaleContract, time, funds, activeSupply, oneTokenInEur",True
"distrust(address,uint,bytes)","tokenContract, locked, time, step, timeframeMilestone, time, step, time, step, timeframeDeath, funds, step, locked, endTimeToReturnTokens, balance, step, balance, step, tokenDistrusted, step, tokenDistrusted, step, tokenDistrusted, step, activeSupply, locked, locked, endTimeToReturnTokens, timeframeDeath",True
"tokenFallback(address,uint,bytes)",,False
"receiveApproval(address,uint,bytes)",tokenContract,True
trust(uint8),"balance, balance, balance, tokenDistrusted, tokenDistrusted, tokenContract, tokenDistrusted, step, activeSupply, locked, locked, endTimeToReturnTokens",True
refundMe(),"locked, endTimeToReturnTokens, balance, step, balance, step, tokenContract, tokenDistrusted, step, tokenSaleContract, oneTokenInEur",True
OwnerWithdraw(),"locked, time, step, funds, step, funds, step, funds, step, step, step, time, step",True
"OwnerWithdrawTokens(address,address,uint256)",tokenContract,True
"function()publicpayable{require(msg.sender==address(tokenSaleContract),""msg.sender == address(tokenSaleContract)"");}()",tokenSaleContract,True
