Function Name,State Variables Modified,Can Transfer Ether
constructor(uint256),initialBonuslistTokens,False
"authorize(string,address)",,False
"addContract(string,address)",,False
getContract(string),,False
removeContract(string),,False
"updateContract(string,address)",,False
"setAuthorizedContract(string,address,bool)",,False
mintTokens(uint256),,False
"sendBoughtTokens(address,uint256)",,False
changeDepositAddress(address),,False
"constructor(string,address,address,address)","contractName, bountyAddress, mintableFida, contractManager",False
setBountyWalletAddress(address),"contractManager, contractName, bountyAddress, bountyAddress, bountyAddress",True
"giveBounty(uint256,address)","bountyAddress, mintableFida",True
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
constructor(address),,False
updatePrice(),,True
"__callback(bytes32,string)","ids, ETHEUR, fidaPerEther",True
changeGasLimit(uint256),,True
removeMember(address),,False
"addAmountBoughtAsMember(address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"constructor(string,address,address,address,address,address,address,string,string)","contractName, wallet, btcTokenBoughtAddress, whitelistingAddress, contractManager, contractManager, earlybird, contractManager",False
setWalletAddress(address),"contractManager, contractName, wallet, wallet, wallet",True
setBtcTokenBoughtAddress(address),"contractManager, contractName, btcTokenBoughtAddress, btcTokenBoughtAddress, btcTokenBoughtAddress",True
setWhitelistingAddress(address),"contractManager, contractName, whitelistingAddress, whitelistingAddress, whitelistingAddress",True
"setWhitelistStatus(address,bool)","whitelistingAddress, whitelist, whitelist",True
getWhitelistStatus(address),"whitelistingAddress, whitelist",True
getAmountFida(uint256),fidaPerEther,False
buyTokens(address),"started, finished, whitelist, whitelist, fidaToken, DECIMALS, DECIMALS, earlybirdEnded, wallet",True
"tokensBoughtWithBTC(address,uint256)","btcTokenBoughtAddress, started, finished, whitelist, fidaToken, DECIMALS, DECIMALS, earlybirdEnded",True
function()publicpayable{buyTokens(msg.sender);}(),,True
startSale(),"contractManager, contractName, started, finished, started",True
finishedSale(),"contractManager, contractName, started, finished, finished",True
