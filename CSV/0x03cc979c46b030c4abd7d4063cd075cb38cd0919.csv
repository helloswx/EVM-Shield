Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"canCall(address,address,bytes4)",,False
constructor(),owner,True
setOwner(address),"owner, owner",False
setAuthority(),"authority, authority",False
constructor(address),daiToken,False
function()publicpayable{revert();}(),,False
deposit(),,True
depositDai(uint),daiToken,True
"withdraw(uint,address)",,True
"withdrawDai(uint,address)",daiToken,True
"depositDaiFor(uint,address)",daiToken,True
"setFeeSchedule(uint,uint,uint,uint)","flatFee, contractFee, exerciseFee, settlementFee, contractFee, flatFee, exerciseFee, settlementFee",False
withdrawFees(address),"feesCollected, feesWithdrawn, feesWithdrawn, feesCollected, daiToken",True
cancelOrder(bytes32),cancelled,True
"callBtoWithSto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callBtoWithStc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callBtcWithSto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callBtcWithStc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callStoWithBto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callStoWithBtc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callStcWithBto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"callStcWithBtc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"exerciseCall(uint,uint,uint)","callsOwned, callsOwned, callsOwned, callsExercised, callsExercised, exerciseFee",True
"settleCall(uint,uint,address)","callsSold, callsAssigned, callsExercised, callsSold, callsExercised, callsAssigned, totalEth, totalEth, callsAssigned, callsAssigned, callsSold, callsSold, settlementFee, eth, eth, callsSold, callsSold",True
"putBtoWithSto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putBtoWithStc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putBtcWithSto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putBtcWithStc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putStoWithBto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putStoWithBtc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putStcWithBto(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"putStcWithBtc(uint,uint,bytes32,uint,uint,uint,uint,bytes32,bytes32,uint8)",,True
"exercisePut(uint,uint,uint)","putsOwned, putsOwned, putsOwned, putsExercised, putsExercised, exerciseFee",True
"settlePut(uint,uint,address)","putsSold, putsAssigned, putsExercised, putsSold, putsExercised, putsAssigned, totalDai, totalDai, putsSold, putsSold, putsAssigned, putsAssigned, putsSold, settlementFee, dai, dai, putsSold",True
calculateFee(uint),"contractFee, flatFee",False
"claimFeeRebate(uint,bytes32,bytes32,bytes32,uint8)","claimedFeeRebate, feeRebates, feeRebates, claimedFeeRebate",True
"_getMaker(bytes32,uint8,bytes32,bytes32)",,False
