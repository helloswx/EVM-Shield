Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"constructor(string,string,uint8)","name, symbol, decimals",False
constructor(),owner,True
transferOwnership(address),"owner, owner",False
"function()publicpayable{if(msg.value>0)emitDeposit(msg.sender,msg.value);}()",,True
constructor(),"isOwner, owners, required",True
addOwner(address),"isOwner, owner, owners, owner, owner",False
removeOwner(address),"isOwner, owner, owners, owners, owner, owners, owners, owners, owners, required, owners, owners, owner",False
"replaceOwner(address,address)","owners, owners, owner, owners, isOwner, owner, isOwner, owner",False
changeRequirement(uint),required,False
"submitTransaction(address,uint,bytes)",,False
confirmTransaction(uint),confirmations,True
revokeConfirmation(uint),confirmations,True
executeTransaction(uint),transactions,True
isConfirmed(uint),"owners, confirmations, owners, required",False
getConfirmationCount(uint),"owners, confirmations, owners",False
"getTransactionCount(bool,bool)","transactionCount, transactions, transactions",False
getOwners(),owners,False
getConfirmations(uint),"owners, owners, confirmations, owners, owners",False
"getTransactionIds(uint,uint,bool,bool)","transactionCount, transactionCount, transactions, transactions",False
getTimestamp(),,False
setExchangeRate(uint256),"StartDate, ExchangeRate, hardCap, ExchangeRate, softCap, ExchangeRate",False
getSenders(),,True
getSendersCalcTokens(address),,True
getSendersEth(address),,True
function()payablepublic{require(msg.value>0);require(getTimestamp()>=StartDate);require(getTimestamp()<=EndDate);require(Eth2USD(address(this).balance)<=hardCap);sendersEth[msg.sender]=sendersEth[msg.sender].add(msg.value);sendersCalcTokens[msg.sender]=sendersCalcTokens[msg.sender].add(Eth2preNSP(msg.value));for(uinti=0;i<senders.length;i++)if(senders[i]==msg.sender)return;senders.push(msg.sender);}(),"StartDate, EndDate, hardCap",True
setMvpExists(bool),mvpExists,False
checkSoftCapOk(),"softCapOk, softCap, softCapOk",False
setWithdrawalAddress(address),,False
release(),,False
releaseETH(),"softCapOk, mvpExists",True
releaseTokens(),"softCapOk, mvpExists",True
releaseTokens4Sender(uint),,True
returnEth(),"EndDate, softCapOk, mvpExists",True
returnEth4Sender(uint),"EndDate, softCapOk, mvpExists",True
GetTokenPriceCents(),"StartDate, EndDate",False
Eth2USD(uint256),ExchangeRate,False
Eth2preNSP(uint256),,False
