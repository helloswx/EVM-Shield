Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint,bytes)","balances, _totalSupply, _totalSupply, balances, balances, balances, balances",True
"transfer(address,uint)","balances, _totalSupply, _totalSupply, balances, balances, balances, balances",True
"function()payablepublic{require((msg.value>0)&&(_receiveEth));uint256_tokens=div(mul(msg.value,_tokePerEth),1ether);require(_totalSupply>=_tokens);_totalSupply=sub(_totalSupply,_tokens);balances[msg.sender]=add(balances[msg.sender],_tokens);_circulatingSupply=add(_circulatingSupply,_tokens);Transfer(this,msg.sender,_tokens);_lifeVal=add(_lifeVal,msg.value);if(_feesEnabled){if(!_payFees){if(_lifeVal>=_feeLimit)_payFees=true;}if(_payFees){_devFees=add(_devFees,((msg.value*_fees)/10000));}}}()","_receiveEth, _tokePerEth, _totalSupply, _totalSupply, _totalSupply, balances, balances, _circulatingSupply, _circulatingSupply",True
changePayRate(uint256),"_owner, _dev, _tokePerEth",True
"safeWithdrawal(address,uint256)","_owner, _devFeesAddr",True
balanceOf(address),balances,False
changeOwner(address),"_owner, _dev",True
changeDev(address),"_dev, _owner",True
changeDevFeesAddr(address),"_dev, _devFeesAddr",True
toggleReceiveEth(),"_dev, _owner, _receiveEth, _receiveEth, _receiveEth",True
toggleFreezeTokensFlag(),"_dev, _owner, _coldStorage, _coldStorage, _coldStorage",True
defrostFrozenTokens(),"_dev, _owner, _totalSupply, _totalSupply, _frozenTokens, _frozenTokens",True
addExchangePartnerTargetAddress(address),"_dev, _owner, exchangePartners",True
removeExchangePartnerTargetAddress(address),"_dev, _owner, exchangePartners",True
canExchange(address),exchangePartners,False
contractExchangeRate(address),exchangeRates,False
totalSupply(),_totalSupply,False
getBalance(),,False
getLifeVal(),"_owner, _dev",True
getCirculatingSupply(),_circulatingSupply,False
updateFeeAmount(uint),"_dev, _owner",True
withdrawDevFees(),_devFeesAddr,True
