Function Name,State Variables Modified,Can Transfer Ether
initialize(address),,False
"hasPermission(address,address,bytes32,bytes)",,False
acl(),,False
"hasPermission(address,address,bytes32,bytes)",,False
"setApp(bytes32,bytes32,address)",,False
getApp(bytes32),,False
getInitializationBlock(),initializationBlock,False
"execScript(bytes,bytes,)",,False
addScriptExecutor(address),,False
disableScriptExecutor(uint256),,False
getScriptExecutor(bytes),,False
"abiEncode(bytes,bytes,)",,False
"memcpy(uint,uint,uint)",,False
getExecutor(bytes),,False
"canPerform(address,bytes32,)","kernel, kernel",True
"initialize(,bytes32)","ens, rootNode",False
"createName(bytes32,address)",,False
"createNameAndPoint(bytes32,address)",,False
deleteName(bytes32),"rootNode, ens, ens, rootNode, ens, ens",False
pointRootNode(address),rootNode,False
isUpgradeable(),,False
getCode(),,False
"AppProxyBase(,bytes32,bytes)","kernel, appId, appId",True
"function()payablepublic{addresstarget=getCode();require(target!=0);delegatedFwd(target,msg.data);}()",,False
"AppProxyUpgradeable(,bytes32,bytes)",,False
getCode(),appId,False
isUpgradeable(),,False
"AppProxyPinned(,bytes32,bytes)","pinnedCode, appId, pinnedCode",False
getCode(),pinnedCode,False
isUpgradeable(),,False
"function()payablepublic{delegatedFwd(getCode(),msg.data);}()",,False
"newAppProxy(,bytes32)",,False
"newAppProxy(,bytes32,bytes)",,False
"newAppProxyPinned(,bytes32)",,False
"newAppProxyPinned(,bytes32,bytes)",,False
"canPerform(address,address,bytes32)",,False
initialize(address),"kernel, CREATE_PERMISSIONS_ROLE",True
"createPermission(address,address,bytes32,address)",CREATE_PERMISSIONS_ROLE,True
"grantPermission(address,address,bytes32)",,False
"grantPermissionP(address,address,bytes32,)",EMPTY_PARAM_HASH,False
"revokePermission(address,address,bytes32)",,False
"setPermissionManager(address,address,bytes32)",,False
"getPermissionManager(address,bytes32)",,False
"hasPermission(address,address,bytes32,bytes)",,False
"hasPermission(address,address,bytes32,)",,False
"hasPermission(address,address,bytes32)",,False
"newVersion(,address,bytes)",,False
getLatest(),,False
getLatestForContractAddress(address),,False
getBySemanticVersion(),,False
getByVersionId(uint),,False
getVersionsCount(),,False
"isValidBump(,)",,False
initialize(),"registrar, ens, registrar, registrar, kernel, registrar, registrar",False
"newRepo(string,address)",,False
"newRepoWithVersion(string,address,,address,bytes)",kernel,False
"initialize(address,address)","ACL_APP_ID, APP_BASES_NAMESPACE, ACL_APP_ID, APP_ADDR_NAMESPACE, ACL_APP_ID",False
"newAppInstance(bytes32,address)",APP_BASES_NAMESPACE,False
"newPinnedAppInstance(bytes32,address)",APP_BASES_NAMESPACE,False
"setApp(bytes32,bytes32,address)",,False
getApp(bytes32),apps,False
acl(),ACL_APP,False
"hasPermission(address,address,bytes32,bytes)",,False
KernelProxy(address),"apps, CORE_NAMESPACE, KERNEL_APP_ID",False
"function()payablepublic{delegatedFwd(apps[KERNEL_APP],msg.data);}()","apps, KERNEL_APP",False
initialize(),executors,False
addScriptExecutor(address),executors,False
disableScriptExecutor(uint256),executors,False
getScriptExecutor(bytes),"executors, executors",False
"execScript(bytes,bytes,)",SCRIPT_START_LOCATION,True
exec(),,False
"execScript(bytes,bytes,)","SCRIPT_START_LOCATION, SCRIPT_START_LOCATION",False
"execScript(bytes,bytes,)",,False
EVMScriptRegistryFactory(),"baseReg, baseCalls, baseDel, baseDeployDel",False
"newEVMScriptRegistry(,address)","EVMSCRIPT_REGISTRY_APP_ID, baseReg, EVMSCRIPT_REGISTRY_APP_ID, baseCalls, baseDel, baseDeployDel",False
"DAOFactory(address,address,address)","regFactory, baseKernel, baseACL",False
newDAO(address),"baseKernel, regFactory, baseACL, regFactory, regFactory, regFactory, regFactory, regFactory",False
newENS(address),"ens, ens, ENS_ROOT, ETH_TLD_LABEL, ens, ens, ETH_TLD_NODE, PUBLIC_RESOLVER_LABEL, ens, PUBLIC_RESOLVER_NODE, PUBLIC_RESOLVER_NODE, ens, ETH_TLD_NODE, ens, ENS_ROOT, ens",False
"APMRegistryFactory(,,,,,)","daoFactory, registryBase, repoBase, ensSubdomainRegistrarBase, ens",False
"newAPM(bytes32,bytes32,address)","ens, ens, daoFactory, ENS_SUB_APP_NAME, ensSubdomainRegistrarBase, APM_APP_NAME, registryBase, REPO_APP_NAME, repoBase, ens, ens, APM_APP_NAME, registryBase, ENS_SUB_APP_NAME, ensSubdomainRegistrarBase, REPO_APP_NAME, repoBase",False
