Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approveAndCall(address,uint,bytes)",,False
"signedTransferHash(address,address,uint,uint,uint)",,False
"signedTransferCheck(address,address,uint,uint,uint,bytes,address)",,False
"signedTransfer(address,address,uint,uint,uint,bytes,address)",,False
"signedApproveHash(address,address,uint,uint,uint)",,False
"signedApproveCheck(address,address,uint,uint,uint,bytes,address)",,False
"signedApprove(address,address,uint,uint,uint,bytes,address)",,False
"signedTransferFromHash(address,address,address,uint,uint,uint)",,False
"signedTransferFromCheck(address,address,address,uint,uint,uint,bytes,address)",,False
"signedTransferFrom(address,address,address,uint,uint,uint,bytes,address)",,False
"signedApproveAndCallHash(address,address,uint,bytes,uint,uint)",,False
"signedApproveAndCallCheck(address,address,uint,bytes,uint,uint,bytes,address)",,False
"signedApproveAndCall(address,address,uint,bytes,uint,uint,bytes,address)",,False
"mint(address,uint,bool)",,False
unlockAccount(address),,False
disableMinting(),,False
enableTransfers(),,False
"safeAdd(uint,uint)",,False
"safeSub(uint,uint)",,False
"safeMul(uint,uint)",,False
"safeDiv(uint,uint)",,False
Owned(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
GazeCoinCrowdsale(),,False
setBTTSToken(address),"START_DATE, bttsToken, bttsToken",False
setWallet(address),"wallet, wallet",False
setTeamWallet(address),"teamWallet, teamWallet",False
setBonusList(address),"START_DATE, bonusList, bonusList",False
setEndDate(uint),"endDate, endDate",False
setUsdPerKEther(uint),"START_DATE, usdPerKEther, usdPerKEther",False
setLockedAccountThresholdUsd(uint),"START_DATE, lockedAccountThresholdUsd, lockedAccountThresholdUsd",False
capEth(),"CAP_USD, usdPerKEther",False
"gzeFromEth(uint,uint)","usdPerKEther, USD_CENT_PER_GZE",False
gzePerEth(),,False
lockedAccountThresholdEth(),"lockedAccountThresholdUsd, usdPerKEther",False
getBonusPercent(address),"bonusList, TIER1_BONUS, TIER2_BONUS, TIER3_BONUS",False
"function()publicpayable{require((now>=START_DATE&&now<=endDate)||(msg.sender==owner&&msg.value==MIN_CONTRIBUTION_ETH));require(contributedEth<capEth());require(msg.value>=MIN_CONTRIBUTION_ETH);uintbonusPercent=getBonusPercent(msg.sender);uintethAmount=msg.value;uintethRefund=0;if(safeAdd(contributedEth,ethAmount)>capEth()){ethAmount=safeSub(capEth(),contributedEth);ethRefund=safeSub(msg.value,ethAmount);}uintusdAmount=safeDiv(safeMul(ethAmount,usdPerKEther),10**uint(3+18));uintgzeAmount=gzeFromEth(ethAmount,bonusPercent);generatedGze=safeAdd(generatedGze,gzeAmount);contributedEth=safeAdd(contributedEth,ethAmount);contributedUsd=safeAdd(contributedUsd,usdAmount);accountEthAmount[msg.sender]=safeAdd(accountEthAmount[msg.sender],ethAmount);boollockAccount=accountEthAmount[msg.sender]>lockedAccountThresholdEth();bttsToken.mint(msg.sender,gzeAmount,lockAccount);if(ethAmount>0){wallet.transfer(ethAmount);}Contributed(msg.sender,ethAmount,ethRefund,accountEthAmount[msg.sender],usdAmount,gzeAmount,contributedEth,contributedUsd,generatedGze,lockAccount);if(ethRefund>0){msg.sender.transfer(ethRefund);}}()","START_DATE, endDate, owner, MIN_CONTRIBUTION_ETH, contributedEth, MIN_CONTRIBUTION_ETH, contributedEth, contributedEth, usdPerKEther, generatedGze, generatedGze, contributedEth, contributedEth, contributedUsd, contributedUsd, accountEthAmount, accountEthAmount, accountEthAmount, bttsToken, wallet, accountEthAmount, contributedEth, contributedUsd, generatedGze",True
"addPrecommitment(address,uint,uint)","finalised, usdPerKEther, generatedGze, generatedGze, contributedEth, contributedEth, contributedUsd, contributedUsd, accountEthAmount, accountEthAmount, accountEthAmount, bttsToken, accountEthAmount, contributedEth, contributedUsd, generatedGze",False
"addPrecommitmentAdjustment(address,uint)","endDate, contributedEth, finalised, generatedGze, generatedGze, accountEthAmount, bttsToken, precommitmentAdjusted, accountEthAmount, contributedEth, contributedUsd, generatedGze",False
roundUp(uint),TOKEN_DECIMALS,False
finalise(),"finalised, precommitmentAdjusted, endDate, contributedEth, generatedGze, TEAM_PERCENT_GZE, TEAM_PERCENT_GZE, generatedGze, generatedGze, generatedGze, generatedGze, generatedGze, generatedGze, generatedGze, bttsToken, teamWallet, bttsToken, finalised",False
