Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
ownerHistoryCount(),ownerHistory,False
addOwner(address),"isOwner, ownerHistory, isOwner",False
removeOwner(address),"isOwner, isOwner",False
pause(),paused,False
resume(),paused,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
"constructor(address,address,address,address,address)","totalSupply, saleLimit, teamTokens, partnersTokens, reservaTokens, advisorsTokens, seller, teamWallet, partnersWallet, advisorsWallet, reservaWallet, totalSupply, teamTokens, partnersTokens, advisorsTokens, reservaTokens, seller, seller, teamWallet, teamTokens, teamWallet, teamTokens, partnersWallet, partnersTokens, partnersWallet, partnersTokens, reservaWallet, reservaTokens, reservaWallet, reservaTokens, advisorsWallet, advisorsTokens, advisorsWallet, advisorsTokens",False
unlock(),"locked, locked",False
walletLocked(address),walletsNotLocked,False
walletNotLocked(address),walletsNotLocked,False
changeSeller(address),"seller, seller, seller",False
"sellNoDecimals(address,uint256)",,False
"sell(address,uint256)","seller, seller, seller, seller, seller, totalSales, tokensSold, tokensSold, seller",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
burn(uint256),"totalSupply, totalSupply",True
"constructor(address,address,uint,uint)","token, beneficiary, startTime, endTime, minCapUSD, maxCapUSD",False
setRatio(uint),"rateUSDETH, rateUSDETH",False
burn(uint),token,False
"newInversor(address,address)","inversors, inversorsList, inversorToSponsor, inversors",False
"setComisionInvesorInTokens(address,bool)",comisionInTokens,False
setComisionInTokens(),comisionInTokens,True
setComisionInETH(),comisionInTokens,True
inversorIsKyc(address),validateKYC,False
unVerifyKyc(address),"isSoftCapComplete, validateKYC, inversorToSponsor, sponsorToComisionFromInversor, balanceComision, balanceComision, balanceComisionHold, balanceComisionHold, sponsorToComision, sponsorToComision, sponsorToComisionHold, sponsorToComisionHold",False
verifyKyc(address),"validateKYC, inversorToSponsor, sponsorToComisionFromInversor, balanceComision, balanceComision, balanceComisionHold, balanceComisionHold, sponsorToComision, sponsorToComision, sponsorToComisionHold, sponsorToComisionHold",False
buyerToSentWeiOf(address),buyerToSentWei,False
balanceOf(address),token,False
balanceOfComision(address),sponsorToComision,False
balanceOfComisionHold(address),sponsorToComisionHold,False
balanceOfComisionDone(address),sponsorToComisionDone,False
isInversor(address),inversors,False
payComision(),,True
isSoftCapCompleted(),isSoftCapComplete,False
softCapCompleted(),"balance, minCapUSD, isSoftCapComplete",False
balanceComisionOf(address),sponsorToComision,False
getNow(),,False
"function()publicpayable{uint256_amountWei=msg.value;address_buyer=msg.sender;uintvalueUSD=weiToUSD(_amountWei);require(now<=endTime,'endtime');require(inversors[_buyer]!=false,'No invest');require(valueUSD>=minPaymentUSD,'Min in USD not allowed');emitReceiveEthEvent(_buyer,_amountWei);uinttokensE18SinBono=weiToTokens(msg.value);uinttokensE18Bono=weiToTokensBono(msg.value);emitconversionETHToTMSYEvent(_buyer,msg.value,tokensE18SinBono,tokensE18Bono);uinttokensE18=tokensE18SinBono.add(tokensE18Bono);require(token.sell(_buyer,tokensE18SinBono),""Falla la venta"");if(tokensE18Bono>0)assert(token.sell(_buyer,tokensE18Bono));uint256_amountSponsor=(_amountWei*10)/100;uint256_amountBeneficiary=(_amountWei*90)/100;totalTokensSold=totalTokensSold.add(tokensE18);totalWeiReceived=totalWeiReceived.add(_amountWei);buyerToSentWei[_buyer]=buyerToSentWei[_buyer].add(_amountWei);if(!isSoftCapComplete){uint256totalBalanceUSD=weiToUSD(balance);if(totalBalanceUSD>=minCapUSD){softCapCompleted();}}addresssponsor=inversorToSponsor[_buyer];sponsorToComisionList.push(sponsor);if(validateKYC[_buyer]){balanceComision=balanceComision.add(_amountSponsor);sponsorToComision[sponsor]=sponsorToComision[sponsor].add(_amountSponsor);}else{balanceComisionHold=balanceComisionHold.add(_amountSponsor);sponsorToComisionHold[sponsor]=sponsorToComisionHold[sponsor].add(_amountSponsor);sponsorToComisionFromInversor[_buyer]=sponsorToComisionFromInversor[_buyer].add(_amountSponsor);}payComisionSponsor(sponsor);balance=balance.add(_amountBeneficiary);}()","endTime, inversors, minPaymentUSD, token, token, totalTokensSold, totalTokensSold, totalWeiReceived, totalWeiReceived, buyerToSentWei, buyerToSentWei, isSoftCapComplete, balance, minCapUSD, inversorToSponsor, sponsorToComisionList, validateKYC, balanceComision, balanceComision, sponsorToComision, sponsorToComision, balanceComisionHold, balanceComisionHold, sponsorToComisionHold, sponsorToComisionHold, sponsorToComisionFromInversor, sponsorToComisionFromInversor, balance, balance",True
weiToUSD(uint),"rateUSDETH, rateUSDETH",False
weiToTokensBono(uint),,False
weiToTokens(uint),,False
tokensPerUSD(),,False
canWithdraw(),,False
"withdraw(address,uint)","beneficiary, balance, balance, balance, balance, balance",True
changeEndTime(uint),"endTime, refundDeadlineTime, endTime, endTime",True
"constructor(address,address,uint,uint)",refundDeadlineTime,False
canWithdraw(),isSoftCapComplete,False
canRefund(),"isSoftCapComplete, endTime, refundDeadlineTime",False
refund(),"buyerToSentWei, balance, balance, buyerToSentWei, totalWeiRefunded, totalWeiRefunded",True
