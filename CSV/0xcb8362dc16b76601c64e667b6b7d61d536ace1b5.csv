Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
renounceOwnership(),"owner, owner",False
pause(),paused,False
unpause(),paused,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"transferFrom(address,address,uint256)",,False
constructor(),,False
setStables(address),token,False
setMarketFees(uint256),marketMakerFee,False
getTokensOnSale(address),,False
getTokenPrice(uint256),marketMakerFee,False
"depositToExchange(uint256,uint256)","token, token",True
cancelSale(uint256),token,True
purchaseToken(uint256),token,True
withdraw(),owner,True
"getCoinIndex(bytes32,address)",,False
getall_horsesCount(),all_horses,False
getOwnedTokens(address),,False
"storeName(uint256,string)",,False
"storeCarrotsCredit(address,uint32)",,False
"storeHorsey(address,uint256,address,bytes32,uint8,uint8)",,False
"modifyHorsey(uint256,address,bytes32,uint8,uint8)",,False
"modifyHorseyDna(uint256,bytes32)",,False
"modifyHorseyFeedingCounter(uint256,uint8)",,False
"modifyHorseyTier(uint256,uint8)",,False
unstoreHorsey(uint256),,False
ownerOf(uint256),,False
constructor(address),stables,False
setRarityMultiplier(uint8),rarityMultiplier,False
setCarrotsMultiplier(uint8),carrotsMultiplier,False
setRenamingCosts(uint256),renamingCostsPerChar,False
setClaimingCosts(uint256),claimingFee,False
addLegitRaceAddress(address),,False
withdraw(),owner,True
addHorseIndex(bytes32),,False
getOwnedTokens(address),stables,False
"can_claim(address,address)",,False
claim(address),,True
"renameHorsey(uint256,string)","renamingCostsPerChar, stables",True
freeForCarrots(uint256),"pendingFeedings, stables, stables, stables, carrotsMultiplier, stables",True
getCarrotCredits(),stables,True
getHorsey(uint256),"stables, stables",False
feed(uint256),"pendingFeedings, stables, stables, stables",True
stopFeeding(),"pendingFeedings, pendingFeedings, pendingFeedings, stables, stables",True
"function()externalpayable{revert(""Not accepting donations"");}()",,False
"constructor(address,address,address,)","jokerAddress, knightAddress, paladinAddress, voters",False
deployChildren(address),"exchangeAddress, tokenAddress, exchangeAddress",False
transferJokerOwnership(address),"jokerAddress, jokerAddress",True
transferKnightOwnership(address),"knightAddress, knightAddress",True
transferPaladinOwnership(address),"paladinAddress, paladinAddress",True
withdrawCeo(address),"toBeDistributed, _cBalance, _cBalance",True
syncFunds(),"tokenAddress, exchangeAddress, toBeDistributed, toBeDistributed",False
getNobleBalance(),_cBalance,True
"makeProposal(uint8,uint256)","currentProposal, currentProposal, currentProposal, currentProposal, currentProposal, currentProposal, proposalInProgress",True
voteOnProposal(bool),"currentProposal, currentProposal, currentProposal, proposalInProgress, currentProposal, currentProposal, proposalInProgress",True
