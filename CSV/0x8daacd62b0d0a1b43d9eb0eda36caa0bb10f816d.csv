Function Name,State Variables Modified,Can Transfer Ether
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
maximumSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
constructor(),"name, symbol, decimals, totalSupply, maximumSupply, preSaleSupply, mainSaleSupply, preSaleRate, mainSaleRateP1, mainSaleRateP2, mainSaleRateP3, mainSaleRateP4, preSaleEnd, mainSaleStart, mainSaleEnd, contractOwner, balances, balances, balances, balances, balances, balances, balances, balances, totalSupply, totalSupply",True
name(),name,False
symbol(),symbol,False
decimals(),decimals,False
totalSupply(),totalSupply,False
maximumSupply(),maximumSupply,False
balanceOf(address),balances,False
"allowance(address,address)",allowed,False
"transfer(address,uint)","balances, balances, balances, balances",True
"approve(address,uint)",allowed,True
"transferFrom(address,address,uint)","balances, balances, allowed, allowed, balances, balances",True
"setDates(uint,uint,uint)","contractOwner, preSaleEnd, mainSaleStart, mainSaleEnd",True
setPreSaleRate(uint),"contractOwner, preSaleRate",True
"function()publicpayable{require((now<=preSaleEnd)||(now>=mainSaleStart&&now<=mainSaleEnd));if(now<=preSaleEnd){require((msg.value>=0.01ether&&msg.value<=15ether)&&(preSaleSupply>=(msg.value/preSaleRate)*100));preSaleSupply=preSaleSupply.sub((msg.value/preSaleRate)*100);totalSupply=totalSupply.add((msg.value/preSaleRate)*100);balances[msg.sender]=balances[msg.sender].add((msg.value/preSaleRate)*100);emitTransfer(0,msg.sender,(msg.value/preSaleRate)*100);}if(now>=mainSaleStart&&now<=mainSaleEnd){require((msg.value>=0.01ether&&msg.value<=15ether)&&(mainSaleSupply>=(msg.value/mainSaleRateP1)*100));if(mainSaleSupply<=4000000000&&mainSaleSupply>3000000000){mainSaleSupply=mainSaleSupply.sub((msg.value/mainSaleRateP1)*100);totalSupply=totalSupply.add((msg.value/mainSaleRateP1)*100);balances[msg.sender]=balances[msg.sender].add((msg.value/mainSaleRateP1)*100);emitTransfer(0,msg.sender,(msg.value/mainSaleRateP1)*100);}if(mainSaleSupply<=3000000000&&mainSaleSupply>2000000000){mainSaleSupply=mainSaleSupply.sub((msg.value/mainSaleRateP2)*100);totalSupply=totalSupply.add((msg.value/mainSaleRateP2)*100);balances[msg.sender]=balances[msg.sender].add((msg.value/mainSaleRateP2)*100);emitTransfer(0,msg.sender,(msg.value/mainSaleRateP2)*100);}if(mainSaleSupply<=2000000000&&mainSaleSupply>1000000000){mainSaleSupply=mainSaleSupply.sub((msg.value/mainSaleRateP3)*100);totalSupply=totalSupply.add((msg.value/mainSaleRateP3)*100);balances[msg.sender]=balances[msg.sender].add((msg.value/mainSaleRateP3)*100);emitTransfer(0,msg.sender,(msg.value/mainSaleRateP3)*100);}if(mainSaleSupply<=1000000000){mainSaleSupply=mainSaleSupply.sub((msg.value/mainSaleRateP4)*100);totalSupply=totalSupply.add((msg.value/mainSaleRateP4)*100);balances[msg.sender]=balances[msg.sender].add((msg.value/mainSaleRateP4)*100);emitTransfer(0,msg.sender,(msg.value/mainSaleRateP4)*100);}}contractOwner.transfer(msg.value);}()","preSaleEnd, mainSaleStart, mainSaleEnd, preSaleEnd, preSaleSupply, preSaleRate, preSaleSupply, preSaleSupply, preSaleRate, totalSupply, totalSupply, preSaleRate, balances, balances, preSaleRate, preSaleRate, mainSaleStart, mainSaleEnd, mainSaleSupply, mainSaleRateP1, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleRateP1, totalSupply, totalSupply, mainSaleRateP1, balances, balances, mainSaleRateP1, mainSaleRateP1, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleRateP2, totalSupply, totalSupply, mainSaleRateP2, balances, balances, mainSaleRateP2, mainSaleRateP2, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleRateP3, totalSupply, totalSupply, mainSaleRateP3, balances, balances, mainSaleRateP3, mainSaleRateP3, mainSaleSupply, mainSaleSupply, mainSaleSupply, mainSaleRateP4, totalSupply, totalSupply, mainSaleRateP4, balances, balances, mainSaleRateP4, mainSaleRateP4, contractOwner",True
