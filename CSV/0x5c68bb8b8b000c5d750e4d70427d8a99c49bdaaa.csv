Function Name,State Variables Modified,Can Transfer Ether
constructor(),"PoEIFContract, PlayerBook",False
updateFundAddress(address),FundEIF,False
payFund(),"FundEIF, fundEIF, totalEIF, totalEIF, fundEIF, fundEIF",True
viewMult(),"multLastChange, multStart, round_, rID_, multLinear, multLinear, multCurrent, multDecayPerMinute, multDecayPerMinute, multCurrent, multDecayPerMinute",False
viewPot(),"round_, rID_, seedingPot, potSeedRate, potNextSeedTime, potNextSeedTime",False
"setStore(string,uint256)","admin, round_, rID_, activated_, rndGap_, rndInit_, rndInc_, rndIncDivisor_, potSeedRate, potNextSeedTime, seedingThreshold, seedingDivisor, seedRoundEnd, linearPrice, multPurchase, multAllowLast, maxMult, multInc_, multIncFactor_, multLastChange, multDecayPerMinute, multStart, multCurrent, rndMax_, earlyRoundLimit, earlyRoundLimitUntil, divPercentage, divPercentage, divPercentage, divPotPercentage, divPotPercentage, divPotPercentage, nextRoundPercentage, nextRoundPercentage, nextRoundPercentage, affFee, affFee, affFee, winnerPercentage, divPotPercentage, nextRoundPercentage, potPercentage, divPercentage, affFee, multCurrent, fees_, divPercentage, potSplit_, divPotPercentage",True
"function()isActivated()isHuman()isWithinLimits(msg.value)publicpayable{FFEIFDatasets.EventReturnsmemory_eventData_=determinePID(_eventData_);uint256_pID=pIDxAddr_[msg.sender];buyCore(_pID,plyr_[_pID].laff,_eventData_);}()","pIDxAddr_, plyr_",True
seedDeposit(),"seedingPot, seedingPot, seedDonated, seedDonated",False
buyXid(uint256),"pIDxAddr_, plyr_, plyr_, plyr_",True
buyXaddr(address),"pIDxAddr_, plyr_, pIDxAddr_, plyr_, plyr_",True
buyXname(bytes32),"pIDxAddr_, plyr_, plyr_, pIDxName_, plyr_, plyr_",True
"reLoadXid(uint256,uint256)","pIDxAddr_, plyr_, plyr_, plyr_",True
"reLoadXaddr(address,uint256)","pIDxAddr_, plyr_, pIDxAddr_, plyr_, plyr_",True
"reLoadXname(bytes32,uint256)","pIDxAddr_, plyr_, plyr_, pIDxName_, plyr_, plyr_",True
withdraw(),"rID_, pIDxAddr_, round_, round_, round_, round_, plyr_, plyr_, plyr_, plyr_",True
"registerNameXID(string,uint256,bool)","PlayerBook, pIDxAddr_, plyr_, plyr_",True
"registerNameXaddr(string,address,bool)","PlayerBook, pIDxAddr_, plyr_, plyr_",True
"registerNameXname(string,bytes32,bool)","PlayerBook, pIDxAddr_, plyr_, plyr_",True
getBuyPrice(),"linearPrice, linearPrice, rID_, round_, rndGap_, round_, round_, round_, round_",False
getTimeLeft(),"rID_, round_, round_, rndGap_, round_, round_, rndGap_",False
getPlayerVaults(uint256),"rID_, round_, round_, round_, round_, plyr_, round_, winnerPercentage, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyr_, plyr_",False
getCurrentRoundInfo(),"rID_, round_, round_, round_, round_, round_, round_, round_, plyr_, round_, plyr_, round_, rndTmEth_",False
getPlayerInfoByAddress(address),"rID_, pIDxAddr_, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyr_, plyrRnds_",True
"calcKeysReceived(uint256,uint256)","round_, rndGap_, round_, round_, round_, round_",False
iWantXKeys(uint256),"rID_, round_, rndGap_, round_, round_, round_, round_",False
"receivePlayerInfo(uint256,address,bytes32,uint256)","PlayerBook, pIDxAddr_, pIDxAddr_, pIDxName_, pIDxName_, plyr_, plyr_, plyr_, plyr_, plyr_, plyr_, plyrNames_, plyrNames_",True
"receivePlayerNameList(uint256,bytes32)","PlayerBook, plyrNames_, plyrNames_",True
activate(),"admin, activated_, activated_, rID_, round_, rndExtra_, rndGap_, round_, rndInit_, rndExtra_, potNextSeedTime",True
removeAdmin(),"admin, admin",True
donateDivs(),,False
getPlayerID(address),,False
getPlayerName(uint256),,False
getPlayerLAff(uint256),,False
getPlayerAddr(uint256),,False
getNameFee(),,False
"registerNameXIDFromDapp(address,bytes32,uint256,bool)",,False
"registerNameXaddrFromDapp(address,bytes32,address,bool)",,False
"registerNameXnameFromDapp(address,bytes32,bytes32,bool)",,False
