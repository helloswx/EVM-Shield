Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint)",,False
"transfer(address,uint)",,False
balanceOf(address),,False
"Crowdsale(uint,address,address,address,address)","startTime, owner, operations, index, softCap, softCapLimit, discountPrice, fullPrice, tokenReward",False
"function()publicpayable{uint256amount=msg.value;require(now>startTime);if(now<startTime.add(24hours)&&amountRaised<softCapLimit){require(amount.add(contributionByAddress[msg.sender])>1ether&&amount.add(contributionByAddress[msg.sender])<=5ether);require(amount.mul(10**18).div(discountPrice)<=softCap.sub(tokensSold));contributionByAddress[msg.sender]=contributionByAddress[msg.sender].add(amount);amountRaised=amountRaised.add(amount);amountRaisedPhase=amountRaisedPhase.add(amount);tokensSold=tokensSold.add(amount.mul(10**18).div(discountPrice));tokenReward.transfer(msg.sender,amount.mul(10**18).div(discountPrice));FundTransfer(msg.sender,amount,true);}else{require(amount<=1000ether);contributionByAddress[msg.sender]=contributionByAddress[msg.sender].add(amount);amountRaised=amountRaised.add(amount);amountRaisedPhase=amountRaisedPhase.add(amount);tokensSold=tokensSold.add(amount.mul(10**18).div(fullPrice));tokenReward.transfer(msg.sender,amount.mul(10**18).div(fullPrice));FundTransfer(msg.sender,amount,true);}}()","startTime, startTime, amountRaised, softCapLimit, contributionByAddress, contributionByAddress, discountPrice, softCap, tokensSold, contributionByAddress, contributionByAddress, amountRaised, amountRaised, amountRaisedPhase, amountRaisedPhase, tokensSold, tokensSold, discountPrice, tokenReward, discountPrice, contributionByAddress, contributionByAddress, amountRaised, amountRaised, amountRaisedPhase, amountRaisedPhase, tokensSold, tokensSold, fullPrice, tokenReward, fullPrice",True
withdrawTokens(address),owner,True
withdrawEther(),"operations, index",True
