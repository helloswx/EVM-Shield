Function Name,State Variables Modified,Can Transfer Ether
getOwner(),,False
changeOwner(address),,False
Owned(),contractOwner,True
getOwner(),contractOwner,False
changeOwner(address),"contractOwner, contractOwner",False
isRunning(),,False
setRunSwitch(bool),,False
TimeLimitedStoppable(),"running, finalBlock, finalBlock",True
isRunning(),"running, finalBlock",False
getLastBlock(),finalBlock,False
setRunSwitch(bool),running,True
SetFinalBlock(uint),"finalBlock, finalBlock",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
reclaimToken(),owner,False
isCMCT(),,False
CMCT(),"INITIAL_SUPPLY, INITIAL_SUPPLY",True
isCMCT(),,False
isUser(address),,False
isApproved(address),,False
registerSelf(bytes32),,False
"registerUser(address,bytes32)",,False
"approveUser(address,bytes32)",,False
"disapproveUser(address,bytes32)",,False
"withdrawEth(uint,address,bytes32)",,False
"relayCMCT(address,uint,bytes32)",,False
"bulkRelayCMCT(,,bytes32)",,False
CmctSale(address),,True
setTokenAddress(address),,True
getTokenAddress(),,False
isUser(address),funderStructs,False
isApproved(address),funderStructs,False
registerSelf(bytes32),funderStructs,True
"registerUser(address,bytes32)",funderStructs,True
"approveUser(address,bytes32)",funderStructs,True
"disapproveUser(address,bytes32)",funderStructs,True
"withdrawEth(uint,address,bytes32)",,True
"relayCMCT(address,uint,bytes32)",,True
"bulkRelayCMCT(,,bytes32)",,True
"function()publiconlyIfRunningpayable{require(isApproved(msg.sender));LogEthReceived(msg.sender,msg.value);}()",,True
