Function Name,State Variables Modified,Can Transfer Ether
"getSingleSubjectByAddress(address,uint)",,False
"getSubjectClaimSetSize(address,uint,uint)",,False
"getSubjectClaimSetEntryAt(address,uint,uint,uint)",,False
getSubjectCountByAddress(address),,False
"NotakeyVerifierForICOP(address,address)","claimRegistryAddr, trustedIssuerAddr",False
sanityCheck(),,False
"isVerified(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"SecondPriceAuction(address,address,address,address,address,uint,uint)","verifier, tokenContract, treasury, admin, beginTime, tokenCap, endTime, beginTime, DEFAULT_AUCTION_LENGTH",False
function()publicpayable{buyin();}(),,False
moveStartDate(uint),"beginTime, endTime",False
buyin(),"currentBonus, beginTime, BONUS_MIN_DURATION, lastNewInterest, BONUS_LATCH, currentBonus, beginTime, BONUS_MAX_DURATION, currentBonus, buyins, lastNewInterest, buyins, buyins, totalAccounted, totalReceived, endTime, treasury",True
"inject(address,uint128)","currentBonus, buyins, buyins, totalAccounted, totalReceived, endTime",False
finalise(address),"endPrice, endPrice, totalAccounted, tokenCap, endPrice, buyins, endPrice, totalFinalised, buyins, tokenContract, treasury, totalFinalised, totalAccounted",True
setHalted(bool),halted,False
drain(),treasury,True
calculateEndTime(),"tokenCap, DIVISOR, EURWEI, beginTime, totalAccounted",False
currentPrice(),"EURWEI, beginTime, EURWEI, DIVISOR",False
tokensAvailable(),"totalAccounted, tokenCap, tokenCap",False
maxPurchase(),"tokenCap, totalAccounted",False
theDeal(uint),,False
bonus(uint),currentBonus,False
isActive(),"beginTime, endTime",False
allFinalised(),"endTime, totalAccounted, totalFinalised",False
