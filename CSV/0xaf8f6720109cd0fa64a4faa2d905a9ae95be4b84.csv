Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
burn(uint256),"totalSupply, totalSupply",True
"burnFrom(address,uint256)","totalSupply, totalSupply",False
pause(),paused,False
unpause(),paused,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"transferFromIco(address,uint256)",,True
setApiAddress(address),addressApi,False
"addWallet(address,string)","whitelist, whitelist, whitelistLength",False
"updateWallet(address,string)",whitelist,False
removeWallet(address),"whitelist, whitelistLength",False
isWhitelisted(address),whitelist,False
walletData(address),whitelist,False
Whitelistable(),"whitelist, whitelist",True
"GiftCrowdsale(uint256,uint256,uint256,uint256)","startTimestamp, endTimestamp, exchangeRate, endFirstPeriodTimestamp, endSecondPeriodTimestamp, endThirdPeriodTimestamp, minCap",False
discount(),"endThirdPeriodTimestamp, endSecondPeriodTimestamp, endFirstPeriodTimestamp",False
bonus(),"endSecondPeriodTimestamp, endFirstPeriodTimestamp",False
sellTokens(),"minimumInvestment, exchangeRate, token, tokensSold, tokensSold",True
function()publicpayable{sellTokens();}(),,False
withdrawal(address),token,True
"assignTokens(address,uint256)",token,True
refundPayment(),"tokensSold, minCap, investments, token, token, investments, investments",True
transferTokenOwnership(address),token,True
updateIcoEnding(uint256),endTimestamp,False
"createCrowdsale(uint256,uint256,uint256,uint256)","crowdsale, crowdsale, crowdsale, whitelist",True
