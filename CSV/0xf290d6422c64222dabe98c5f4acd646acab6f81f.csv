Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
supportsInterface(bytes4),,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"setApprovalForAll(address,bool)",,False
"isApprovedForAll(address,address)",,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
totalSupply(),,False
"tokenOfOwnerByIndex(address,uint256)",,False
tokenByIndex(uint256),,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
"onERC721Received(address,address,uint256,bytes)",,False
constructor(),InterfaceId_ERC165,False
supportsInterface(bytes4),supportedInterfaces,False
constructor(),"InterfaceId_ERC721, InterfaceId_ERC721Exists",False
balanceOf(address),ownedTokensCount,False
ownerOf(uint256),"tokenOwner, owner, owner",False
exists(uint256),"tokenOwner, owner",False
"approve(address,uint256)","owner, owner, owner, tokenApprovals, owner",True
getApproved(uint256),tokenApprovals,False
"setApprovalForAll(address,bool)",operatorApprovals,True
"isApprovedForAll(address,address)",operatorApprovals,False
"transferFrom(address,address,uint256)",,True
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,True
"constructor(string,string)","name_, symbol_, InterfaceId_ERC721Enumerable, InterfaceId_ERC721Metadata",False
name(),name_,False
symbol(),symbol_,False
tokenURI(uint256),tokenURIs,False
"tokenOfOwnerByIndex(address,uint256)",ownedTokens,False
totalSupply(),allTokens,False
tokenByIndex(uint256),allTokens,False
tokenURI(uint),,False
Deed(address),"owner, registrar, creationDate, value",True
setOwner(address),"previousOwner, owner, owner",False
setRegistrar(address),registrar,False
"setBalance(uint,bool)","value, value, owner",True
closeDeed(uint),,True
destroyDeed(),owner,True
"setSubnodeOwner(bytes32,bytes32,address)",,False
"setResolver(bytes32,address)",,False
"setOwner(bytes32,address)",,False
"setTTL(bytes32,uint64)",,False
owner(bytes32),,False
resolver(bytes32),,False
ttl(bytes32),,False
"Registrar(,bytes32,uint)","ens, rootNode, registryStarted",False
startAuction(bytes32),,False
startAuctions(),,False
newBid(bytes32),"sealedBids, sealedBids",True
"startAuctionsAndBid(,bytes32)",,False
"unsealBid(bytes32,uint,bytes32)","sealedBids, sealedBids, value, value, value, value, value, value, value, value, value, value, value",True
"cancelBid(address,bytes32)","sealedBids, sealedBids",True
finalizeAuction(bytes32),,False
"transfer(bytes32,address)",,False
releaseDeed(bytes32),"ens, rootNode",False
invalidateName(string),,True
eraseNode(),rootNode,False
transferRegistrars(bytes32),"ens, rootNode, registrar, registrar, registrar",False
"acceptRegistrarTransfer(bytes32,,uint)",,False
state(bytes32),,False
entries(bytes32),,False
"isAllowed(bytes32,uint)",,False
getAllowedTime(bytes32),"registryStarted, launchLength",False
"shaBid(bytes32,address,uint,bytes32)","owner, value",False
"constructor(string,string,,)",registrar,False
getMetadata(),,False
tokenURI(uint),,True
updateMetadata(),,False
mint(bytes32),registrar,True
