Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
readRate(string),,False
started(),,False
ended(),,False
startTime(),,False
endTime(),,False
totalTokens(),,False
remainingTokens(),,False
price(),,False
"buyTokensFor(address,uint64,uint,uint8,bytes32,bytes32)",,True
"buyTokens(uint64,uint,uint8,bytes32,bytes32)",,True
"RC(address,uint256,uint256,uint256,uint256,uint256,,,)","bonusThreshold, tokenThreshold, soldTokens, remainingTokens, oneTokenInUsdWei, etherMinimum",False
"setTime(uint256,uint256)","startTime, endTime",False
changeMinimum(uint256),etherMinimum,False
started(),"startTime, remainingTokens",False
ended(),"endTime, remainingTokens",False
startTime(),startTime,False
endTime(),endTime,False
totalTokens(),"remainingTokens, soldTokens",False
remainingTokens(),remainingTokens,False
price(),oneTokenInUsdWei,False
function()publicpayable{require(now>startTime);if(now<endTime){takeEther(msg.sender);}else{claimTokenBonus(msg.sender);}}(),"startTime, endTime",True
refundEther(address),"etherUser, etherUser, pendingTokenUser",True
"withdraw(address,uint256)",,True
userBalance(address),"pendingTokenUser, tokenUser, etherUser",False
"TokenSale(address,address,uint256,uint256)","tokenContract, rateContract, wallet, advisor, advisorFee",True
tokenValueInEther(uint256),"rateContract, decimals",False
"buyFromRC(address,uint256,uint256)","decimals, tokenContract, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, remainingTokens, tokenContract",True
addMeByRC(),"owner, rc",True
"setTime(uint256,uint256)","startTime, endTime",False
"withdraw(address,uint256)",,True
"withdrawTokens(address,uint256)",tokenContract,True
setTokenContract(address),tokenContract,False
setWalletAddress(address),wallet,False
setAdvisorAddress(address),advisor,False
setAdvisorFee(uint256),advisorFee,False
setRateContract(address),rateContract,False
"claim(address,uint256)",tokenContract,True
function()publicpayable{revert();}(),,False
