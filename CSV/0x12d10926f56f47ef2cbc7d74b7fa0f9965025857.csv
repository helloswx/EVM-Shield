Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),,False
acceptOwnership(),,False
transferOwnershipNow(address),,False
constructor(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
transferOwnershipNow(address),"owner, owner, owner",False
addNewLoggerPermission(address),,False
"emitTaskCreated(uint,uint)",,False
"emitProjectCreated(uint,uint,address)",,False
emitNewSmartToken(address),,False
emitIssuance(uint256),,False
emitDestruction(uint256),,False
"emitTransfer(address,address,uint256)",,False
"emitApproval(address,address,uint256)",,False
"emitGenericLog(string,string)",,False
addNewLoggerPermission(address),permissionedAddresses,False
"emitTaskCreated(uint,uint)",,True
"emitProjectCreated(uint,uint,address)",,True
emitNewSmartToken(address),,True
emitIssuance(uint256),,True
emitDestruction(uint256),,True
"emitTransfer(address,address,uint256)",,True
"emitApproval(address,address,uint256)",owner,True
"emitGenericLog(string,string)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"setStakedBalances(uint,address)",,False
setTotalStaked(uint),,False
"setTimeStaked(uint,address)",,False
"setEscrowedTaskBalances(uint,uint)",,False
"setEscrowedProjectBalances(uint,uint)",,False
"setEscrowedProjectPayees(uint,address)",,False
setTotalTaskEscrow(uint),,False
setTotalProjectEscrow(uint),,False
"transferTokensOut(address,address,uint)",,True
"setStakedBalances(uint,address)",stakedBalances,False
setTotalStaked(uint),totalStaked,False
"setTimeStaked(uint,address)",timeStaked,False
"setEscrowedTaskBalances(uint,uint)",escrowedTaskBalances,False
"setEscrowedProjectBalances(uint,uint)",escrowedProjectBalances,False
"setEscrowedProjectPayees(uint,address)",escrowedProjectPayees,False
setTotalTaskEscrow(uint),totalTaskEscrow,False
setTotalProjectEscrow(uint),totalProjectEscrow,False
disableTransfers(bool),,False
"issue(address,uint256)",,False
"destroy(address,uint256)",,False
transferCurator(address),,False
transferVoteController(address),,False
setMinimumStakingRequirement(uint),,False
setLockupPeriodSeconds(uint),,False
setLogger(address),,False
"setTokenAddresses(address,address)",,False
setCommunityAccount(address),,False
setCommunityAccountOwner(address),,False
getAvailableDevFund(),,False
getLockedDevFundAmount(),,False
"createNewTask(uint,uint)",,False
cancelTask(uint),,False
"rewardTaskCompletion(uint,address)",,False
"createNewProject(uint,uint,address)",,False
cancelProject(uint),,False
rewardProjectCompletion(uint),,False
stakeCommunityTokens(),,False
unstakeCommunityTokens(),,False
isMember(address),,False
"constructor(uint,uint,address,address,address,address,address,address)","communityAccount, curator, minimumStakingRequirement, lockupPeriodSeconds, logger, voteController, nativeTokenInstance, communityTokenInstance",False
transferCurator(address),"curator, logger",True
transferVoteController(address),"voteController, logger",True
setMinimumStakingRequirement(uint),"minimumStakingRequirement, logger",False
setLockupPeriodSeconds(uint),"lockupPeriodSeconds, logger",False
setLogger(address),"logger, logger",False
"setTokenAddresses(address,address)","nativeTokenInstance, communityTokenInstance, logger",False
setCommunityAccount(address),"communityAccount, logger",False
setCommunityAccountOwner(address),"communityAccount, newOwner, logger",True
getAvailableDevFund(),"nativeTokenInstance, communityAccount",False
getLockedDevFundAmount(),"communityAccount, communityAccount",False
"createNewTask(uint,uint)","communityAccount, communityAccount, communityAccount, logger, logger",False
cancelTask(uint),"communityAccount, communityAccount, communityAccount, communityAccount, logger",False
"rewardTaskCompletion(uint,address)","communityAccount, nativeTokenInstance, communityAccount, communityAccount, communityAccount, communityAccount, communityAccount, logger",True
"createNewProject(uint,uint,address)","communityAccount, communityAccount, communityAccount, communityAccount, logger, logger",False
cancelProject(uint),"communityAccount, communityAccount, communityAccount, communityAccount, logger",False
rewardProjectCompletion(uint),"communityAccount, nativeTokenInstance, communityAccount, communityAccount, communityAccount, communityAccount, communityAccount, communityAccount, logger",True
stakeCommunityTokens(),"minimumStakingRequirement, communityAccount, minimumStakingRequirement, communityAccount, communityTokenInstance, communityAccount, communityAccount, communityAccount, communityAccount, communityAccount, communityAccount, logger",True
unstakeCommunityTokens(),"communityAccount, communityAccount, lockupPeriodSeconds, communityAccount, communityAccount, communityAccount, communityAccount, communityTokenInstance, logger",True
isMember(address),"communityAccount, minimumStakingRequirement",False
