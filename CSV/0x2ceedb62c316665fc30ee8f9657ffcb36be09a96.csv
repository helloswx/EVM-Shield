Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Owned(),,True
AcceptsTokens(address),tokenContract,False
"acceptTokens(address,uint256,uint256,uint256,uint256)",,False
ETToken(),"oracle, beneficiary",False
setOracle(address),oracle,False
setBeneficiary(address),beneficiary,False
setHeroContract(address),heroContract,False
"authorizeFloor(uint32,address)",floorContracts,False
"acceptDividends(uint256,uint32)",floorContracts,True
"rewardTokensFloor(address,uint256,uint32)",floorContracts,True
"rewardTokens(address,uint256)",,False
function()payablepublic{}(),,False
"payoutDividends(address,uint256)",,True
accountAuth(uint256),,False
burn(uint256),,True
"setCanAcceptTokens(address,bool)",canAcceptTokens,False
"setIsMinter(address,bool)",isMinter,False
"transferWithParams(address,uint256,uint256,uint256,uint256)",,True
PresaleContract(address),tokenContract,False
ETFloorPresale(address),enabled,False
"function()publicpayable{require(enabled);require(!_isContract(msg.sender));require(msg.value>=100finney);require(paymentOf[msg.sender].add(msg.value)<=maxUserPayment);paymentOf[msg.sender]=paymentOf[msg.sender].add(msg.value);totalPayments=totalPayments.add(msg.value);emitPayment(msg.sender,msg.value);tokenContract.rewardTokens(msg.sender,msg.value*200);if(totalPayments>=maxPayments){enabled=false;}}()","enabled, paymentOf, maxUserPayment, paymentOf, paymentOf, totalPayments, totalPayments, tokenContract, totalPayments, maxPayments, enabled",True
setEnabled(bool),enabled,False
withdraw(),,True
setMaxUserPayment(uint256),maxUserPayment,False
setMaxPayments(uint256),maxPayments,False
