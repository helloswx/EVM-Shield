Function Name,State Variables Modified,Can Transfer Ether
isRootPlatformAdministrator(address),rootPlatformAdministrators,False
addRootPlatformAdministrator(address),,False
renounceRootPlatformAdministrator(),,True
isAssetTokenAdministrator(address),assetTokenAdministrators,False
addAssetTokenAdministrator(address),,False
renounceAssetTokenAdministrator(),,True
removeAssetTokenAdministrator(address),,False
isAt2CsConnector(address),at2csConnectors,False
addAt2CsConnector(address),,False
renounceAt2CsConnector(),,True
removeAt2CsConnector(address),,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
isMinter(address),_minters,False
addMinter(address),,False
renounceMinter(),,True
"mint(address,uint256)",,False
"ds_add(uint,uint)",,False
"ds_sub(uint,uint)",,False
"ds_mul(uint,uint)",,False
"ds_min(uint,uint)",,False
"ds_max(uint,uint)",,False
"ds_imin(int,int)",,False
"ds_imax(int,int)",,False
"ds_wmul(uint,uint)",,False
"ds_rmul(uint,uint)",,False
"ds_wdiv(uint,uint)",,False
"ds_rdiv(uint,uint)",,False
"ds_rpow(uint,uint)",,False
constructor(address),,True
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
constructor(address),,False
setDefaultFee(uint256),defaultFee,False
"setFee(bytes32,uint256)",feeFor,False
"setFeeMode(bytes32,bool)",isFeeDisabled,False
getStandardFee(bytes32),"isFeeDisabled, feeFor, defaultFee, feeFor",False
"getStandardFeeFor(bytes32,uint256)",,False
constructor(address),,False
"setSpecialFee(bytes32,address,uint256)",specialFeeFor,False
"setSpecialFeeMode(bytes32,address,bool)",isSpecialFeeEnabled,False
"getFee(bytes32,address)","isFeeDisabled, isSpecialFeeEnabled, specialFeeFor",False
"getFeeFor(bytes32,address,uint256,address)",,False
isWhitelistControl(address),whitelistControllers,False
addWhitelistControl(address),,False
removeWhitelistControl(address),whitelistControllers,False
"recheckIdentity(address,address,address)",,False
"updateIdentity(address,bool,address,address)",,False
getIssuer(address),,False
getInvestorKey(address),,False
"setWhitelisted(address,bool,address,address)",,False
"assignWalletToInvestorKey(address,address)",,False
checkWhitelistedWallet(address),"autoExtendExpiration, autoExtendExpirationContract",False
isWhitelistedWallet(address),,False
blocksLeftUntilExpired(address),"expirationEnabled, expirationBlocks",False
setExpirationBlocks(uint256),expirationBlocks,True
setExpirationEnabled(bool),"expirationEnabled, expirationEnabled",True
setAutoExtendExpirationContract(address),autoExtendExpirationContract,True
setAutoExtendExpiration(bool),autoExtendExpiration,True
"updateIdentity(address,bool,address,address)",,True
"resetCurrencyPair(address,address)",,False
"configureCurrencyPair(address,address,uint256)",,False
"setExchangeRate(address,address,uint256,uint256)",,False
"getExchangeRate(address,address)",,False
"convert(address,address,uint256)",,False
"convertTT(bytes32,bytes32,uint256)",,False
"convertTA(bytes32,address,uint256)",,False
"convertAT(address,bytes32,uint256)",,False
"constructor(string,string,uint8)","_name, _symbol, _decimals",False
name(),_name,False
symbol(),_symbol,False
decimals(),_decimals,False
isTokenAlive(),,False
"mint(address,uint256)",,False
finishMinting(),,False
isStorageAdministrator(address),storageAdministrators,False
addStorageAdministrator(address),,False
removeStorageAdministrator(address),storageAdministrators,False
"setUint(bytes32,uint256)",_name,False
getUint(bytes32),_name,False
"get2Uint(bytes32,bytes32)",,False
"get3Uint(bytes32,bytes32,bytes32)",,False
"get4Uint(bytes32,bytes32,bytes32,bytes32)",,False
"get5Uint(bytes32,bytes32,bytes32,bytes32,bytes32)",,False
"set2Uint(bytes32,uint256,bytes32,uint256)",,False
"set3Uint(bytes32,uint256,bytes32,uint256,bytes32,uint256)",,False
"set4Uint(bytes32,uint256,bytes32,uint256,bytes32,uint256,bytes32,uint256)",,False
"set5Uint(bytes32,uint256,bytes32,uint256,bytes32,uint256,bytes32,uint256,bytes32,uint256)",,False
"setAddr(bytes32,address)",_name,False
getAddr(bytes32),_name,False
"get2Address(bytes32,bytes32)",,False
"get3Address(bytes32,bytes32,bytes32)",,False
"set2Address(bytes32,address,bytes32,address)",,False
"set3Address(bytes32,address,bytes32,address,bytes32,address)",,False
"setAddr2Uint(bytes32,address,uint256)",_name,False
"getAddr2Uint(bytes32,address)",_name,False
"get2Addr2Uint(bytes32,address,bytes32,address)",,False
"get3Addr2Addr2Uint(bytes32,address,bytes32,address,bytes32,address)",,False
"set2Addr2Uint(bytes32,address,uint256,bytes32,address,uint256)",,False
"set3Addr2Uint(bytes32,address,uint256,bytes32,address,uint256,bytes32,address,uint256)",,False
"setAddr2Addr(bytes32,address,address)",_name,False
"getAddr2Addr(bytes32,address)",_name,False
"get2Addr2Addr(bytes32,address,bytes32,address)",,False
"get3Addr2Addr2Addr(bytes32,address,bytes32,address,bytes32,address)",,False
"set2Addr2Addr(bytes32,address,address,bytes32,address,address)",,False
"set3Addr2Addr(bytes32,address,address,bytes32,address,address,bytes32,address,address)",,False
"setAddr2Bool(bytes32,address,bool)",_name,False
"getAddr2Bool(bytes32,address)",_name,False
"get2Addr2Bool(bytes32,address,bytes32,address)",,False
"get3Address2Address2Bool(bytes32,address,bytes32,address,bytes32,address)",,False
"set2Address2Bool(bytes32,address,bool,bytes32,address,bool)",,False
"set3Address2Bool(bytes32,address,bool,bytes32,address,bool,bytes32,address,bool)",,False
"setBytes(bytes32,bytes32)",_name,False
getBytes(bytes32),_name,False
"get2Bytes(bytes32,bytes32)",,False
"get3Bytes(bytes32,bytes32,bytes32)",,False
"set2Bytes(bytes32,bytes32,bytes32,bytes32)",,False
"set3Bytes(bytes32,bytes32,bytes32,bytes32,bytes32,bytes32)",,False
"addToAddr2AddrArr(bytes32,address,address)","addr2AddrArrStorage, _name",False
"getAddr2AddrArr(bytes32,address)","addr2AddrArrStorage, _name",False
"getMixedUBA(bytes32,bytes32,bytes32)",,False
"getMixedMapA2UA2BA2A(bytes32,address,bytes32,address,bytes32,address)",,False
constructor(address),,False
getAssetTokenOfCrowdsale(address),,False
getRateFromCrowdsale(address),,False
getRateFromAssetToken(address),,False
getAssetTokenOwnerWalletFromCrowdsale(address),,False
getAssetTokenOwnerWalletFromAssetToken(address),,False
getAssetTokensOf(address),,False
isAssignedCrowdsale(address),,False
isTrustedAssetTokenRegistered(address),,False
isTrustedAssetTokenActive(address),,False
checkTrustedAssetToken(address),,False
checkTrustedCrowdsaleInternal(address),,False
"changeActiveTrustedAssetToken(address,bool)",,False
"addTrustedAssetTokenInternal(address,address,uint256)",,False
"assignCrowdsale(address,address)",,False
"setAssetTokenRate(address,uint256)",,False
getStorageAddress(),,False
"assignStore(,address)",,False
"getFeeTableAddressForPlatform(,address)",,False
"setExchangeRateOracle(,address)",,True
"checkWhitelistedWallet(,address)",,False
"isWhitelistedWallet(,address)",,False
"convertEthToEurApplyRateGetTokenAmountFromCrowdsale(,address,uint256)",,False
"checkTrustedCrowdsale(,address)",,False
"checkTrustedAssetToken(,address)",,False
"checkTrustedPlatform(,address)",,False
"isTrustedPlatform(,address)",,False
"addTrustedAssetToken(,address,address,uint256)",,True
"assignCrowdsale(,address,address,address)",,True
"changeActiveTrustedAssetToken(,address,bool)",,True
"buyFromCrowdsale(,address,uint256)",,True
"assignFromCrowdsale(,address,uint256)",,True
"payFeeKnowingAssetToken(,address,address,uint256,bytes32)",,False
"convertEthToEur(,uint256)",,False
"convertEurToEth(,uint256)",,False
"getFeeKnowingCrowdsale(,address,address,uint256,bool,bytes32)",,False
"getFeeKnowingAssetToken(,address,address,uint256,bytes32)",,False
"setCrwdTokenAddress(,address)",,False
"setTrustedPlatform(,address,bool)",,False
"setRootPlatform(,address)",,False
"setAssetTokenRate(,address,uint256)",,False
"rescueToken(,address,address)",,True
setCrwdTokenAddress(address),controllerData,False
setOracle(address),controllerData,False
getFeeTableAddressForPlatform(address),controllerData,False
"setAssetTokenRate(address,uint256)",controllerData,False
setRootPlatform(address),controllerData,False
getRootPlatform(),controllerData,False
"setTrustedPlatform(address,bool)",controllerData,False
isTrustedPlatform(address),controllerData,False
getPlatformOfCrowdsale(address),controllerData,False
setWhitelistContract(address),controllerData,True
getStorageAddress(),controllerData,False
setBlockNewState(bool),controllerData,False
getBlockNewState(),controllerData,False
"addTrustedAssetToken(address,address,uint256)",controllerData,False
checkTrustedAssetToken(address),controllerData,False
"changeActiveTrustedAssetToken(address,bool)",controllerData,False
"getFeeKnowingAssetToken(address,address,uint256,bytes32)",controllerData,False
"convertEthToTokenAmount(address,uint256)",controllerData,False
"assignCrowdsale(address,address,address)",controllerData,False
checkTrustedCrowdsale(address),controllerData,False
"getFeeKnowingCrowdsale(address,address,uint256,bool,bytes32)",controllerData,False
checkTrustedPlatform(address),controllerData,False
isTrustedPlatform(address),controllerData,False
checkWhitelistedWallet(address),controllerData,False
isWhitelistedWallet(address),controllerData,False
"transferParticipantsVerification(address,address,address,uint256)",,False
"buyFromCrowdsale(address,uint256)",,False
"assignFromCrowdsale(address,uint256,bytes8)",,False
calcTokensForEth(uint256),,False
"constructor(bool,bool,address,address)",controllerData,False
"configure(bool,bool)","controllerData, controllerData",False
"transferParticipantsVerification(address,address,address,uint256)","controllerData, controllerData",True
"buyFromCrowdsale(address,uint256)",controllerData,False
calcTokensForEth(uint256),,True
"assignFromCrowdsale(address,uint256,bytes8)",controllerData,True
"rescueToken(address,address)",controllerData,False
