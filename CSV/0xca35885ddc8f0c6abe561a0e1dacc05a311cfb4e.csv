Function Name,State Variables Modified,Can Transfer Ether
Controlled(),controller,True
changeController(address),controller,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
Token(address),"creationBlock, frozenReserveTeamWallet, unfreezeTeamWalletBlock",False
"transfer(address,uint256)","transfersEnabled, frozenReserveTeamWallet, unfreezeTeamWalletBlock",True
"transferFrom(address,address,uint256)","controller, transfersEnabled",True
balanceOf(address),,False
"approve(address,uint256)","transfersEnabled, controller, controller",True
"allowance(address,address)",,False
"approveAndCall(address,uint256,bytes)",,True
totalSupply(),,False
"balanceOfAt(address,uint)",,False
totalSupplyAt(uint),,False
"generateTokens(address,uint)",balanceOf,False
"destroyTokens(address,uint)",balanceOf,False
enableTransfers(bool),transfersEnabled,True
function()publicpayable{require(isContract(controller));require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));}(),"controller, controller",True
"PreCrowdFunder(address,)","creator, fundRecipient, capTokenAmount, state, currentBalance, tokensIssued, tokenExchangeRate, exchangeToken",True
startFundraising(),"state, tokensIssued, exchangeToken",False
endFundraising(),"state, state, fundRecipient, currentBalance, currentBalance, state, exchangeToken, controller",True
"freezeAccount(address,bool)",frozenAccount,False
getExchangeRate(uint),tokenExchangeRate,False
investment(),"balanceOf, currentBalance, exchangeToken, tokensIssued, tokensIssued, tokensIssued, capTokenAmount, state, fundRecipient, currentBalance, balanceOf",True
removeContract(),,True
function()inState(State.Fundraising)publicaccountNotFrozenminInvestmentpayable{investment();}(),,False
