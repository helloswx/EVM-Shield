Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
burnTokens(uint256),"balances, balances, balances, totalSupply, totalSupply",True
enableTransfers(),istransferAllowed,True
disableTransfers(),istransferAllowed,True
pause(),paused,False
unpause(),paused,False
changeprivatebonus(uint256),bonuspercentageprivate,False
changepublicbonus(uint256),bonuspercentagepresale,False
changepresalebonus(uint256),bonuspercentagepublic,False
changeminprivatesale(uint256),mincontribprivatesale,False
changeminpresale(uint256),mincontribpresale,False
changeminpublicsale(uint256),mincontribpublicsale,False
getBalance(address),balances,False
alottMainSaleToken(),"distributorAddress, balances, balances, balances",True
"function()externalpayablestopInEmergency{require(token.isValid());require(msg.value>0);ICOSaleStatecurrentState=getStateFunding();require(currentState!=ICOSaleState.Failed);require(currentState!=ICOSaleState.Success);var(discount,usd)=pricingstrategy.totalDiscount(currentState,msg.value,""ethereum"");uint256tokens=usd*tokensPerUSD;uint256totalTokens=SafeMath.add(tokens,SafeMath.div(SafeMath.mul(tokens,discount),100));if(currentState==ICOSaleState.PrivateSale){require(SafeMath.add(currentPrivateSale,totalTokens)<=maxPrivateSale);currentPrivateSale=SafeMath.add(currentPrivateSale,totalTokens);}elseif(currentState==ICOSaleState.PreSale){require(SafeMath.add(currentPreSale,totalTokens)<=maxPreSale);currentPreSale=SafeMath.add(currentPreSale,totalTokens);}elseif(currentState==ICOSaleState.PublicSale){require(SafeMath.add(currentPublicSale,totalTokens)<=maxPublicSale);currentPublicSale=SafeMath.add(currentPublicSale,totalTokens);}currentSupply=SafeMath.add(currentSupply,totalTokens);require(currentSupply<=tokenCreationMax);addToBalances(msg.sender,totalTokens);token.increaseEthRaised(msg.value);token.increaseUSDRaised(usd);numberOfBackers++;if(!ownerAddr.send(this.balance))throw;}()","tokensPerUSD, currentPrivateSale, maxPrivateSale, currentPrivateSale, currentPrivateSale, currentPreSale, maxPreSale, currentPreSale, currentPreSale, currentPublicSale, maxPublicSale, currentPublicSale, currentPublicSale, currentSupply, currentSupply, currentSupply, tokenCreationMax, numberOfBackers, ownerAddr",True
"alottTokensExchange(address,uint256)","currentSupply, currentSupply",False
finalizeTokenSale(),,False
killContract(),ownerAddr,False
changeEndPrivateSale(uint256),endprivate,False
changeEndPreSale(uint256),endpresale,False
changeTokensPerUSD(uint256),tokensPerUSD,False
