Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
ShrimpFarmer(),"ceoAddress, dev2, lastBidTime, currentWinner",True
finalizeIfNecessary(),"lastBidTime, POT_DRAIN_TIME, currentWinner, initialized",True
getPotCost(),totalHatcheryShrimp,False
stealPot(),"initialized, hatcheryShrimp, hatcheryShrimp, totalHatcheryShrimp, totalHatcheryShrimp, lastBidTime, currentWinner",True
hatchEggs(address),"lastHatch, HATCH_COOLDOWN",True
sellEggs(),"initialized, claimedEggs, lastHatch, marketEggs, marketEggs, prizeEth, prizeEth",True
buyEggs(),"initialized, ceoAddress, dev2, claimedEggs, claimedEggs",True
"calculateTrade(uint256,uint256,uint256)",,False
calculateEggSell(uint256),"marketEggs, prizeEth",False
"calculateEggBuy(uint256,uint256)","prizeEth, marketEggs",False
calculateEggBuySimple(uint256),,False
potFee(uint),,False
devFee(uint256),,False
devFee2(uint256),,False
seedMarket(uint256),"ceoAddress, initialized, initialized, marketEggs, lastBidTime",True
"receiveApproval(address,uint256,address,bytes)","initialized, claimedEggs, claimedEggs, VRF_EGG_COST",True
function()publicpayable{}(),,False
claimFreeEggs(),"ethVerify, initialized, hasClaimedFree, claimedEggs, claimedEggs, hasClaimedFree",True
getFreeEggs(),,False
getBalance(),,False
getMyShrimp(),hatcheryShrimp,True
getMyEggs(),claimedEggs,True
getEggsSinceLastHatch(address),"EGGS_TO_HATCH_1SHRIMP, lastHatch, hatcheryShrimp",False
