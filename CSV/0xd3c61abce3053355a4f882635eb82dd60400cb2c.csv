Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
HolderBase(uint256),coeff,False
getHolderCount(),holders,False
"initHolders(,)","initialized, holders, MAX_HOLDERS, holders, coeff, initialized",False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"Locker(address,uint,,)","token, coeff, numBeneficiaries, numBeneficiaries, beneficiaries, coeff",False
activate(),"numLocks, numBeneficiaries, initialBalance, token, initialBalance, activeTime, state, state",False
getReleaseType(address),releases,False
getTotalLockedAmounts(address),"beneficiaries, coeff, initialBalance",False
getReleaseTimes(address),releases,False
getReleaseRatios(address),releases,False
"lock(address,bool,,)","locked, coeff, numLocks, numLocks, releases, releases, releases, locked, numLocks, numBeneficiaries, state, state",False
release(),"beneficiaries, beneficiaries, beneficiaries, beneficiaries, beneficiaries, beneficiaries, coeff, initialBalance, withdrawAmount, withdrawAmount, withdrawAmount, initialBalance, state, state, token",True
"getPartialAmount(uint,uint,uint)",,False
RefundVault(address),"wallet, state",False
deposit(address),"state, deposited, deposited",False
close(),"state, state, wallet",True
enableRefunds(),"state, state",False
refund(address),"state, deposited, deposited",True
"MultiHolderVault(address,uint256)",,False
close(),"state, initialized",False
pause(),paused,False
unpause(),paused,False
BaseCrowdsale(uint256),,False
function()externalpayable{buyTokens(msg.sender);}(),,True
buyTokens(address),"weiRaised, weiRaised",True
finalize(),"isFinalized, isFinalized",False
claimRefund(),"isFinalized, vault",True
goalReached(),"weiRaised, goal",False
hasEnded(),"weiRaised, cap, endTime",False
init(),,False
claimTokens(),"isFinalized, owner",True
BlockIntervalCrowdsale(uint256),blockInterval,False
bonusesForTimesCount(),BONUS_TIMES,False
"setBonusesForTimes(,)","BONUS_TIMES, BONUS_TIMES_VALUES",False
bonusesForAmountsCount(),BONUS_AMOUNTS,False
"setBonusesForAmounts(,)","BONUS_AMOUNTS, BONUS_AMOUNTS_VALUES",False
computeBonus(uint256),,False
computeTimeBonus(),"startTime, BONUS_TIMES, BONUS_TIMES, BONUS_TIMES_VALUES",False
computeAmountBonus(uint256),"BONUS_AMOUNTS, BONUS_AMOUNTS, BONUS_AMOUNTS_VALUES",False
KYC(),admin,True
"setAdmin(address,bool)",admin,False
register(address),registeredAddress,False
registerByList(),registeredAddress,False
unregister(address),registeredAddress,False
unregisterByList(),registeredAddress,False
KYCCrowdsale(address),,False
registered(address),,False
Controlled(),controller,True
changeController(address),controller,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
"MiniMeToken(address,address,uint,string,uint8,string,bool)","tokenFactory, name, decimals, symbol, parentToken, parentSnapShotBlock, transfersEnabled, creationBlock",True
"transfer(address,uint256)",transfersEnabled,True
"transferFrom(address,address,uint256)","controller, transfersEnabled",True
balanceOf(address),,False
"approve(address,uint256)","transfersEnabled, controller, controller",True
"allowance(address,address)",,False
"approveAndCall(address,uint256,bytes)",,True
totalSupply(),,False
"balanceOfAt(address,uint)","parentToken, parentToken, parentSnapShotBlock",False
totalSupplyAt(uint),"parentToken, parentToken, parentSnapShotBlock",False
"createCloneToken(string,uint8,string,uint,bool)",tokenFactory,True
"generateTokens(address,uint)",,False
"destroyTokens(address,uint)",,False
enableTransfers(bool),transfersEnabled,True
function()publicpayable{require(isContract(controller));require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));}(),"controller, controller",True
claimTokens(address),"controller, token, token, controller, controller",True
"createCloneToken(address,uint,string,uint8,string,bool)",,True
"generateTokens(address,uint)",,False
finishMinting(),mintingFinished,False
MiniMeBaseCrowdsale(address),token,False
StagedCrowdsale(uint),"numPeriods, numPeriods",False
"initStages(,,,,,)","numPeriods, stages, cap, coeff, stages",False
getStageIndex(),"stages, stages",False
saleFinished(),"stages, numPeriods, stages, stages",False
RankingBallGoldCrowdsale(),,False
init(),"startTime, endTime, rate, cap, goal, crowdsaleRatio, vault, locker, nextTokenOwner",False
