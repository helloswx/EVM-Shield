Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"canCall(address,address,bytes4)",,False
constructor(),owner,True
setOwner(address),"owner, owner",False
setAuthority(),"authority, authority",False
stop(),stopped,False
start(),stopped,False
constructor(uint256),,True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,True
"transferFrom(address,address,uint)",,True
"approve(address,uint256)",,True
"transfer(address,uint)",,True
"transferFrom(address,address,uint)",,True
"approve(address,uint)",,False
"push(address,uint128)",,True
"pull(address,uint128)",,True
mint(uint128),,True
burn(uint128),,True
constructor(),"iaSupply, iaLeft, iaSupply, price",False
initialize(),"CES, CES, CES, CES, CES",True
setPrice(uint),"vendueClose, price",False
balanceToken(),"CES, CES",False
todayDays(),,False
"function()publicpayable{require(!vendueClose);require(iaLeft>0);require(msg.value>=price);require(initAccInfos[msg.sender].ethVendue==0);uintmoney=msg.value;initAccInfos[msg.sender].ethVendue=money;totalETH=add(totalETH,money);iaLeft--;uintdayNow=todayDays();if(dayNow<=(30+7)){elfInfos[msg.sender].bGetElf=true;}uintcoinNeed;uintgiftLeft=balanceToken();if(dayNow<=(90+7)){if(giftLeft>=3500){coinNeed=3500;}}else{if(giftLeft>=2000){coinNeed=2000;}}if(money>price){uintmultiple=div(sub(money,price),1ether);uintmoreGift=mul(multiple,800);if(moreGift>0&&(sub(giftLeft,coinNeed)>=moreGift)){coinNeed=add(coinNeed,moreGift);}}if(coinNeed>0){CES.transfer(msg.sender,coinNeed);}pushAddr(msg.sender);emitLogFund(msg.sender,money,true,coinNeed);}()","vendueClose, iaLeft, price, initAccInfos, initAccInfos, totalETH, totalETH, iaLeft, elfInfos, price, price, CES",True
withdrawal(),,True
vendueClosed(),vendueClose,False
freezeToken(),"vendueClose, tokenFreeze, CES",False
distillGodOwner(),"vendueClose, addrLists, addrLists, initAccInfos, initAccInfos, godOwner",False
"selectElf(uint8,uint16)","elfInfos, elfInfos, elfInfos",True
selectGod(uint16),"vendueClose, godOwner, godID, godOwner, godID",True
"regInitAccount(string,string,string)","initAccInfos, initAccInfos, initAccInfos, initAccInfos",True
register(string),"tokenFreeze, commonAccs, CES",True
