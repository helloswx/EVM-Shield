Function Name,State Variables Modified,Can Transfer Ether
"receiveApproval(address,uint256,address,bytes)",,False
"NamiCrowdSale(address,address,address)","escrow, namiMultiSigWallet, namiPresale, balanceOf, totalSupply",False
"transferForTeam(address,uint256)",,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
changeTransferable(),"TRANSFERABLE, TRANSFERABLE",False
changeEscrow(address),escrow,False
changeBinary(uint),binary,False
changeBinaryAddress(address),binaryAddress,False
getPrice(),binary,False
function()payablepublic{buy(msg.sender);}(),,True
buy(address),"currentPhase, binaryAddress, totalSupply, TOKEN_SUPPLY_LIMIT, balanceOf, balanceOf, totalSupply, totalSupply",True
burnTokens(address),"currentPhase, balanceOf, balanceOf, totalSupply, totalSupply, currentPhase",False
setPresalePhase(),"currentPhase, currentPhase, currentPhase, currentPhase, crowdsaleManager, currentPhase, currentPhase, totalSupply, currentPhase",False
withdrawEther(uint),"namiMultiSigWallet, namiMultiSigWallet",True
"safeWithdraw(address,uint)",namiMultiSigWallet,True
setCrowdsaleManager(address),"currentPhase, crowdsaleManager",False
"migrateToken(address,address)",,False
migrateForInvestor(),,True
"transferToExchange(address,uint,uint)","balanceOf, balanceOf, balanceOf, balanceOf",True
"transferToBuyer(address,uint,address)","balanceOf, balanceOf, balanceOf, balanceOf",True
"function()publicpayable{if(msg.value>0)Deposit(msg.sender,msg.value);}()",,True
"BinaryOption(address,address,address)","namiCrowdSaleAddr, escrow, namiMultiSigWallet",False
changeEscrow(address),escrow,False
changeTimeInvest(uint),"session, timeOneSession, timeInvestInMinute",False
changeRate(uint),"session, rate",False
changeTimeOneSession(uint),"session, timeInvestInMinute, timeOneSession",False
withdrawEther(uint),"namiMultiSigWallet, namiMultiSigWallet",True
"safeWithdraw(address,uint)",namiMultiSigWallet,True
getInvestors(),"MAX_INVESTOR, session",False
getChooses(),"MAX_INVESTOR, session",False
getAmount(),"MAX_INVESTOR, session",False
resetSession(),"session, session, session, session, session, session, session, session, MAX_INVESTOR, session, session, session",False
openSession(),"session, session, session, session, session, session, sessionId",False
invest(bool),"session, session, timeInvestInMinute, session, MAX_INVESTOR, session, sessionId, session, session, session, session, session, session, session, session, sessionId, sessionId",True
closeInvest(uint),"session, session, timeInvestInMinute, session, session, sessionId",False
"getEtherToBuy(uint,uint,bool)",,False
closeSession(uint),"session, timeOneSession, session, session, session, session, namiCrowdSaleAddr, session, session, session, rate, session, rate, session, session, session, session, session, sessionId, price, rate, sessionId, session, session, session, session, session",False
burnTokens(address),,False
"tokenFallback(address,uint,bytes)",,False
"tokenFallbackBuyer(address,uint,address)",,False
"tokenFallbackExchange(address,uint,uint)",,False
NamiExchange(address),,False
"function()payablepublic{require(msg.value>0);if(bid[msg.sender].price>0){bid[msg.sender].eth=(bid[msg.sender].eth).add(msg.value);etherBalance=etherBalance.add(msg.value);UpdateBid(msg.sender,bid[msg.sender].price,bid[msg.sender].eth);}else{msg.sender.transfer(msg.value);}}()","bid, bid, bid, etherBalance, etherBalance, bid, bid",True
"tokenFallback(address,uint,bytes)","ask, ask, ask, nacBalance, nacBalance, ask, ask",True
placeBuyOrder(uint),"etherBalance, bid, bid, bid, bid",True
"tokenFallbackBuyer(address,uint,address)","bid, bid, bid, bid, bid, etherBalance, etherBalance, bid, bid, bid, bid, bid, etherBalance, etherBalance, bid, bid",True
closeBidOrder(),"bid, bid, bid, etherBalance, etherBalance, bid, bid, bid, bid",True
"tokenFallbackExchange(address,uint,uint)","nacBalance, nacBalance, ask, ask, ask, ask, ask",False
closeAskOrder(),"ask, ask, ask, nacBalance, nacBalance, ask, ask, ask",True
buyNac(address),"ask, ask, ask, ask, ask, nacBalance, nacBalance, ask, ask, ask, ask, ask, nacBalance, nacBalance, ask, ask, ask, ask",True
balanceOf(address),,False
"transfer(address,uint)",,False
"function()publicpayable{if(msg.value>0)Deposit(msg.sender,msg.value);}()",,True
"NamiMultiSigWallet(,uint)","isOwner, isOwner, owners, required",False
addOwner(address),"isOwner, owners",False
removeOwner(address),"isOwner, owners, owners, owners, owners, owners, owners, required, owners, owners",False
"replaceOwner(address,address)","owners, owners, owners, isOwner, isOwner",False
changeRequirement(uint),required,False
"submitTransaction(address,uint,bytes)",,False
confirmTransaction(uint),confirmations,True
revokeConfirmation(uint),confirmations,True
executeTransaction(uint),"transactions, transactions, transactions, transactions, transactions",True
isConfirmed(uint),"owners, confirmations, owners, required",False
getConfirmationCount(uint),"owners, confirmations, owners",False
"getTransactionCount(bool,bool)","transactionCount, transactions, transactions",False
getOwners(),owners,False
getConfirmations(uint),"owners, owners, confirmations, owners, owners",False
"getTransactionIds(uint,uint,bool,bool)","transactionCount, transactionCount, transactions, transactions",False
