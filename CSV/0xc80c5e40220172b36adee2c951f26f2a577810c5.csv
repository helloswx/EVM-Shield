Function Name,State Variables Modified,Can Transfer Ether
"safeMul(uint256,uint256)",,False
"safeDiv(uint256,uint256)",,False
"safeSub(uint256,uint256)",,False
"safeAdd(uint256,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"tokenFallback(address,uint256,bytes)",,False
"transfer(address,uint256,bytes)",,False
"transfer(address,uint256,bytes,string)",,False
"BankeraToken(uint256,uint64)","contractOwner, lastBlockNumberInRound, blocksPerRound, currentRound",True
function()publicwhenNotPausedpayable{}(),,False
"tokenFallback(address,uint256,bytes)",,False
"setReward(uint64,uint256)","reward, issuedTokensInRound",False
changeContractOwner(address),"contractOwner, contractOwner",False
changeRewardManager(address),"rewardManager, rewardManager",False
changeRoundManager(address),"roundManager, roundManager",False
changeIssueManager(address),"issueManager, issueManager",False
setBlocksPerRound(uint64),blocksPerRound,False
pause(),paused,False
resume(),paused,False
"getRoundBalance(address,uint256)",accountBalances,False
"isModifiedInRound(address,uint64)",accountBalances,False
getBalanceModificationRounds(address),accountBalances,False
"issueTokens(address,uint256)",,False
withdrawEther(),contractOwner,True
"transfer(address,uint256)",,True
balanceOf(address),accountBalances,False
totalSupply(),totalTokens,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"transfer(address,uint256,bytes)",,True
"transfer(address,uint256,bytes,string)","accountBalances, accountBalances, accountBalances",True
claimReward(),currentRound,False
claimRewardTillRound(uint64),"accountBalances, accountBalances, accountBalances",True
calculateClaimableReward(address),currentRound,False
"calculateClaimableRewardTillRound(address,uint64)","currentRound, currentRound, accountBalances, reward",False
createRounds(uint256),"lastBlockNumberInRound, blocksPerRound, blocksPerRound, lastBlockNumberInRound, lastBlockNumberInRound, blocksPerRound",False
