Function Name,State Variables Modified,Can Transfer Ether
init(),,False
"addModule(,)",,False
recoverToken(address),,False
"upgrade(address,,)",,False
toDisable(),,False
toEnable(),,False
totalSupply(),,False
decimals(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
constructor(),owner,True
changeOwner(address),owner,False
"init(address,)","owner, modules, owner, modules, authorised, authorised",False
"authoriseModule(address,bool)","authorised, modules, authorised, modules, modules, authorised",False
"enableStaticCall(address,bytes4)","authorised, enabled",True
setOwner(address),owner,False
"invoke(address,uint,bytes)",,True
"function()publicpayable{if(msg.data.length>0){addressmodule=enabled[msg.sig];if(module==address(0)){emitReceived(msg.value,msg.sender,msg.data);}else{require(authorised[module],""BW: must be an authorised module for static call"");assembly{calldatacopy(0,0,calldatasize())letresult:=staticcall(gas,module,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())switchresultcase0{revert(0,returndatasize())}default{return(0,returndatasize())}}}}}()","enabled, authorised",True
"registerModule(address,bytes32)","modules, modules",False
deregisterModule(address),"modules, modules",False
"registerUpgrader(address,bytes32)","upgraders, upgraders",False
deregisterUpgrader(address),"upgraders, upgraders",False
recoverToken(address),,True
moduleInfo(address),modules,False
upgraderInfo(address),upgraders,False
isRegisteredModule(address),modules,False
isRegisteredModule(),modules,False
isRegisteredUpgrader(address),upgraders,False
"constructor(,bytes32)",registry,False
init(),,False
"addModule(,)",registry,False
recoverToken(address),registry,True
"execute(,bytes,uint256,bytes,uint256,uint256)",,True
getNonce(),relayer,False
"addGuardian(,address)",configs,False
"revokeGuardian(,address)",configs,False
guardianCount(),configs,False
getGuardians(),configs,False
"isGuardian(,address)",configs,False
"setLock(,uint256)","configs, configs, configs",True
isLocked(),configs,False
getLock(),configs,False
getLocker(),configs,False
"constructor(,)",guardianStorage,False
"transferToken(,address,address,uint256,bytes)","ETH_TOKEN, ETH_TOKEN",True
