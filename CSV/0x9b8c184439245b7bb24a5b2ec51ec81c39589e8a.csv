Function Name,State Variables Modified,Can Transfer Ether
Owner(address),owner,False
changeOwner(address),owner,False
"KIMEX(address,address)","walletAddress, adminAddress, inActive, totalRemainingTokensForSales, salesAllocation, totalReservedTokenAllocation, reservedAllocation",False
function()externalpayableisActiveisInSale{uintstate=getCurrentState();require(state<END_SALE);require(msg.value>=minInvestedAmount);if(state<=IN_SALE){returnissueTokensForICO(state);}revert();}(),minInvestedAmount,False
loadFund(),"totalLoadedRefund, totalLoadedRefund",False
"transfer(address,uint256)","balances, balances, balances, balances",True
"transferFrom(address,address,uint256)","balances, balances, balances, balances, allowed, allowed",True
"approve(address,uint256)",allowed,True
"modifyWhiteList(,bool)",whiteList,False
startICO(),"icoStandardPrice, icoStartTime, isSelling",False
endICO(),"icoEndTime, isSelling, icoEndTime",False
setICOPrice(uint256),"icoStandardPrice, icoStandardPrice",False
activate(),inActive,False
deActivate(),inActive,False
enableTokenTransfer(),isTransferable,False
changeWallet(address),"walletAddress, walletAddress",False
changeAdminAddress(address),"adminAddress, adminAddress",False
changeFounderAddress(address),"founderAddress, founderAddress",False
changeTeamAddress(address),"teamAddress, teamAddress",False
allocateTokensForFounder(),"founderAddress, founderAllocatedTime, founderAllocation, balances, founderAddress, balances, founderAddress, founderAddress, founderAllocatedTime, founderAllocatedTime",False
allocateTokensForTeam(),"teamAddress, teamAllocatedTime, teamAllocation, balances, teamAddress, balances, teamAddress, teamAddress, teamAllocatedTime, teamAllocatedTime, teamAllocatedTime, icoEndTime, teamAllocation, balances, teamAddress, balances, teamAddress, teamAddress, teamAllocatedTime, teamAllocatedTime",False
"allocateReservedTokens(address,uint)","balances, balances, totalReservedTokenAllocation, totalReservedTokenAllocation",False
"allocateSalesTokens(address,uint)","balances, balances, totalRemainingTokensForSales, totalRemainingTokensForSales",False
"allowance(address,address)",allowed,False
balanceOf(address),balances,False
getCurrentState(),,False
isSoftCapReached(),minInvestedCap,False
