Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
changeOwner(address),owner,False
addManager(address),"managers, managers",False
revokeManager(address),"managers, managers",False
owner(bytes32),,False
resolver(bytes32),,False
ttl(bytes32),,False
"setOwner(bytes32,address)",,False
"setSubnodeOwner(bytes32,bytes32,address)",,False
"setResolver(bytes32,address)",,False
"setTTL(bytes32,uint64)",,False
addr(bytes32),,False
"setAddr(bytes32,address)",,False
name(bytes32),,False
"setName(bytes32,string)",,False
claim(address),,False
"claimWithResolver(address,address)",,False
setName(string),,False
node(address),,False
constructor(address),,False
resolveEns(bytes32),,False
getENSRegistry(),,False
getENSReverseRegistrar(),ADDR_REVERSE_NODE,False
changeRootnodeOwner(address),,False
"register(string,address)",,False
isAvailable(bytes32),,False
constructor(address),implementation,False
"function()externalpayable{if(msg.data.length==0&&msg.value>0){emitReceived(msg.value,msg.sender,msg.data);}else{assembly{lettarget:=sload(0)calldatacopy(0,0,calldatasize())letresult:=delegatecall(gas,target,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())switchresultcase0{revert(0,returndatasize())}default{return(0,returndatasize())}}}}()",,True
init(),,False
"addModule(,)",,False
recoverToken(address),,False
"init(address,)","owner, modules, owner, modules, authorised, authorised",False
"authoriseModule(address,bool)","authorised, modules, authorised, modules, modules, authorised",False
"enableStaticCall(address,bytes4)","authorised, enabled",True
setOwner(address),owner,False
"invoke(address,uint,bytes)",,True
"function()publicpayable{if(msg.data.length>0){addressmodule=enabled[msg.sig];if(module==address(0)){emitReceived(msg.value,msg.sender,msg.data);}else{require(authorised[module],""BW: must be an authorised module for static call"");assembly{calldatacopy(0,0,calldatasize())letresult:=staticcall(gas,module,0,calldatasize(),0,0)returndatacopy(0,0,returndatasize())switchresultcase0{revert(0,returndatasize())}default{return(0,returndatasize())}}}}}()","enabled, authorised",True
totalSupply(),,False
decimals(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"registerModule(address,bytes32)","modules, modules",False
deregisterModule(address),"modules, modules",False
"registerUpgrader(address,bytes32)","upgraders, upgraders",False
deregisterUpgrader(address),"upgraders, upgraders",False
recoverToken(address),,True
moduleInfo(address),modules,False
upgraderInfo(address),upgraders,False
isRegisteredModule(address),modules,False
isRegisteredModule(),modules,False
isRegisteredUpgrader(address),upgraders,False
"constructor(address,address,address,address,address)","moduleRegistry, walletImplementation, ensManager, ensResolver",False
"createWallet(address,,string)","moduleRegistry, walletImplementation",False
changeModuleRegistry(address),moduleRegistry,False
changeWalletImplementation(address),walletImplementation,False
changeENSManager(address),ensManager,False
changeENSResolver(address),ensResolver,False
init(),,False
