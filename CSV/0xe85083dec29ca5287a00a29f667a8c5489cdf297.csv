Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
OpportyToken(),"INITIAL_SUPPLY, INITIAL_SUPPLY, INITIAL_SUPPLY",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
setToken(address),OppToken,False
"changeHold(address,uint,uint8,uint,bool)","holderList, holderList, holderList, holderList, holderList",True
"addHolder(address,uint,uint8,uint)","holderList, holderList, holderList, holderList, holderList, holderIndexes, holderIndex, holderIndex, holderList, holderList, holderList",True
getBalance(),OppToken,False
returnTokens(uint),OppToken,True
unlockTokens(),"holderList, holderList, holderList, OppToken, holderList, holderList, holderList",True
addAssetsOwner(address),"assetOwnersIndexes, assetOwners, assetOwnersIndexes, assetOwnersIndex, assetOwnersIndexes",False
removeAssetsOwner(address),"assetOwnersIndex, assetOwnersIndex, assetOwners, assetOwnersIndexes",False
getAssetsOwners(uint),assetOwners,False
pause(),paused,False
unpause(),paused,False
"OpportyWhiteList(address,uint,uint,address)","state, endDate, endSaleDate, price, wallet, minimalContribution, holdContract",True
setToken(address),"token, token",False
startPresale(),state,False
endPresale(),state,False
"addToWhitelist(address,uint,uint8,uint8)","state, state, minimalContribution, whiteList, whiteList, whiteList, whitelistIndexes, whitelistIndex, whitelistIndex, whiteList, whiteList, whiteList, whiteList, endSaleDate, whiteList, whiteList, whiteList, whiteList",False
"function()whenNotPausedpublicpayable{require(state==SaleState.SALE);require(msg.value>=minimalContribution);require(whiteList[msg.sender].isActive);if(now>endDate){state=SaleState.ENDED;msg.sender.transfer(msg.value);return;}WhitelistContributormemorycontrib=whiteList[msg.sender];require(contrib.invAmount<=msg.value||contrib.payed);if(whiteList[msg.sender].payed==false){whiteList[msg.sender].payed=true;}ethRaised+=msg.value;uinttokenAmount=msg.value.div(price);tokenAmount+=tokenAmount.mul(contrib.bonus).div(100);tokenAmount*=10**18;tokenRaised+=tokenAmount;holdContract.addHolder(msg.sender,tokenAmount,contrib.holdPeriod,contrib.holdTimestamp);AddedToHolder(msg.sender,tokenAmount,contrib.holdPeriod,contrib.holdTimestamp);FundTransfered(msg.sender,msg.value);forwardFunds();}()","state, minimalContribution, whiteList, endDate, state, whiteList, whiteList, whiteList, ethRaised, price, tokenRaised, holdContract",True
sendTokensToHold(),"state, tokenRaised, token, holdContract, tokenRaised, tokensTransferredToHold, holdContract, tokenRaised",True
getTokensBack(),"state, tokensTransferredToHold, token",True
withdrawEth(),"state, wallet, tokensTransferredToHold, wallet",True
setPrice(uint),"price, price",False
setEndSaleDate(uint),"endSaleDate, endSaleDate",False
setEndDate(uint),"endDate, endDate",False
setMinimalContribution(uint),"minimalContribution, minimalContribution, minimalContribution",False
getTokenBalance(),token,False
getEthRaised(),ethRaised,False
addAssetsOwner(address),"assetOwnersIndexes, assetOwners, assetOwnersIndexes, assetOwnersIndex, assetOwnersIndexes",False
removeAssetsOwner(address),"assetOwnersIndex, assetOwnersIndex, assetOwners, assetOwnersIndexes",False
getAssetsOwners(uint),assetOwners,False
