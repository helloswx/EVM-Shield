Function Name,State Variables Modified,Can Transfer Ether
constructor(),"adm_addr, start_block",True
"function()publicpayable{uint256amount=0;if(invested[msg.sender]!=0){amount=invested[msg.sender].mul(dividends).div(10000).mul(block.number.sub(atBlock[msg.sender])).div(block_of_24h);}if(msg.value==0){if(admComiss[adm_addr]!=0&&msg.sender==adm_addr){amount=amount.add(admComiss[adm_addr]);admComiss[adm_addr]=0;all_adm_payments+=amount;}if(cashRef[msg.sender]!=0){amount=amount.add(cashRef[msg.sender]);cashRef[msg.sender]=0;all_ref_payments+=amount;}if(cashBack[msg.sender]!=0){amount=amount.add(cashBack[msg.sender]);cashBack[msg.sender]=0;all_cash_back_payments+=amount;}}else{require(msg.value>=min_invesment,""msg.value must be >= 0.01 ether (10 finney)"");admComiss[adm_addr]+=msg.value.mul(adm_comission).div(100);addressref_addr=msg.data.toAddr();if(ref_addr.notZero()){require(msg.sender!=ref_addr,""referal must be != msg.sender"");cashRef[ref_addr]+=msg.value.mul(ref_bonus).div(100);investedRef[msg.sender]=ref_addr;if(invested[msg.sender]==0)cashBack[msg.sender]+=msg.value.mul(ref_cashback).div(100);}else{if(investedRef[msg.sender].notZero())cashRef[investedRef[msg.sender]]+=msg.value.mul(ref_bonus).div(100);}if(invested[msg.sender]==0)all_invest_users_count++;invested[msg.sender]+=msg.value;atBlock[msg.sender]=block.number;all_invest+=msg.value;if(invested[msg.sender]>0)all_reinvest+=msg.value;last_invest_addr=msg.sender;last_invest_amount=msg.value;last_invest_block=block.number;}atBlock[msg.sender]=block.number;if(amount!=0){addresssender=msg.sender;all_payments+=amount;payments[sender]+=amount;sender.transfer(amount);}}()","invested, invested, dividends, atBlock, block_of_24h, admComiss, adm_addr, adm_addr, admComiss, adm_addr, admComiss, adm_addr, all_adm_payments, cashRef, cashRef, cashRef, all_ref_payments, cashBack, cashBack, cashBack, all_cash_back_payments, min_invesment, admComiss, adm_addr, adm_comission, cashRef, ref_bonus, investedRef, invested, cashBack, ref_cashback, investedRef, cashRef, investedRef, ref_bonus, invested, all_invest_users_count, invested, atBlock, all_invest, invested, all_reinvest, last_invest_addr, last_invest_amount, last_invest_block, atBlock, all_payments, payments",True
getFundStatsMap(),"all_invest_users_count, all_invest, all_payments, all_cash_back_payments, all_ref_payments, all_adm_payments, all_reinvest",False
getUserStats(address),"invested, cashBack, cashRef, atBlock, payments, investedRef",False
getWebStats(),"all_invest_users_count, all_invest, all_payments, last_invest_addr, last_invest_amount, last_invest_block",False
