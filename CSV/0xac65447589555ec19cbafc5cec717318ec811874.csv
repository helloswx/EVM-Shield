Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
burn(uint),,False
"transfer(address,uint256,bytes)",,False
"query(uint,string,string)",,False
"query_withGasLimit(uint,string,string,uint)",,False
"query2(uint,string,string,string)",,False
"query2_withGasLimit(uint,string,string,string,uint)",,False
"queryN(uint,string,bytes)",,False
"queryN_withGasLimit(uint,string,bytes,uint)",,False
getPrice(string),,False
"getPrice(string,uint)",,False
setProofType(byte),,False
setCustomGasPrice(uint),,False
randomDS_getSessionPubKeyHash(),,False
getAddress(),,False
"__callback(bytes32,string)",,True
"__callback(bytes32,string,bytes)",,False
Ico(address),"phiRate, startTime, wallet, owner, currentStage",True
"initializeCrowdsale(uint256,uint256,address,uint256)","startTime, endTime, token, intervalUpdate, currentStage, startTime, intervalUpdate, token, MAX_TOKENS",False
"__callback(bytes32,string)","ethUsd, ethUsd, currentStage, lastOracleUpdate",True
updateEthUsdManually(uint),ethUsd,False
changeIntervalUpdate(uint),intervalUpdate,False
forceOraclizeUpdate(uint256),,False
changeOraclizeGas(uint),ORACLIZE_GAS_LIMIT,False
changeOraclizeGasPrice(uint),,False
topUpBalance(uint),,False
withdrawBalance(),wallet,True
"function()publicpayablevalidPurchasemustBeAtStage(Stage.Running){require(msg.sender!=address(0));require(isContract(msg.sender)==false);addressbeneficiary=msg.sender;uint256weiAmount=msg.value;uint256tokens=getTokenAmount(weiAmount);require(tokens>0);require(tokensSold.add(tokens)<=MAX_TOKENS);tokensSold=tokensSold.add(tokens);weiRaised=weiRaised.add(weiAmount);balancesToken[beneficiary]=balancesToken[beneficiary].add(tokens);balancesWei[beneficiary]=balancesWei[beneficiary].add(weiAmount);TokenPurchase(msg.sender,beneficiary,weiAmount,tokens);forwardFunds();}()","tokensSold, MAX_TOKENS, tokensSold, tokensSold, weiRaised, weiRaised, balancesToken, balancesToken, balancesWei, balancesWei",True
addWhitelistAddrByList(),,False
addWhitelistAddress(address),"isWhitelisted, balancesToken, isWhitelisted",False
removeWhitelistedAddress(address),"isWhitelisted, isWhitelisted",False
finalizeInvestorsByList(),,False
finalizeSingleInvestor(address),"balancesToken, isWhitelisted, balancesToken, balancesToken, isWhitelisted, token, tokensFinalized, tokensFinalized, tokensFinalized, MAX_TOKENS",True
burnRemainingTokens(),"MAX_TOKENS, tokensFinalized, MAX_TOKENS, tokensFinalized, token",False
burnAllTokens(),"token, token",False
changeStage(),currentStage,False
hasEnded(),"endTime, startTime",False
getEthPhiRate(),"ethUsd, phiRate",False
getkEthPhiRate(),"ethUsd, phiRate",False
getTokenAmount(uint256),,False
getInvestorBalance(address),balancesToken,False
getInvestorWeiBalance(address),balancesWei,False
isContract(address),,False
started(),"currentStage, startTime, endTime, currentStage",False
ended(),"tokensSold, MAX_TOKENS, currentStage",False
totalTokens(),MAX_TOKENS,False
remainingTokens(),"MAX_TOKENS, tokensSold",False
price(),,False
