Function Name,State Variables Modified,Can Transfer Ether
"credit(address,uint256)",,False
"debit(address,uint256)",,False
withdraw(address),,False
balanceOf(address),,False
statsOf(address),,False
deposit(),,False
depositBy(address),,False
houseProfit(uint256),,False
netEthereumBalance(),,False
totalEthereumBalance(),,False
"relay(address,uint256)",,False
constructor(),owner,True
transferOwnership(address),"owner, owner",False
addAddressToWhitelist(address),"whitelist, whitelist",False
addAddressesToWhitelist(),,False
removeAddressFromWhitelist(address),"whitelist, whitelist",False
removeAddressesFromWhitelist(),,False
constructor(address),relay,True
updateMaintenanceAddress(address),maintenanceAddress,False
updateBankrollAddress(address),bankroll,False
updateProcessingCap(uint),maxProcessingCap,False
updateCoolOffPeriod(uint),coolOffPeriod,False
launchContract(),contractIsLaunched,False
activateBot(bool),"bot, bot, bot, bot",True
botEnabled(),bot,True
buyFor(address),,False
buy(),"contractIsLaunched, stats, referralBalance_",True
"function()payablepublic{purchaseTokens(msg.sender,msg.value);}()",,True
reinvest(),,True
investSupporter(address),contractIsLaunched,False
withdraw(),,True
sell(uint256),"bot, tokenBalanceLedger_, exitFee_, maintenanceFee_, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
reap(address),"lastReaped, lastReaped, owner, owner",True
"transfer(address,uint256)",,True
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(bool),,True
balanceOf(address),tokenBalanceLedger_,False
statsOf(address),stats,True
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, exitFee_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, entryFee_",False
calculateTokensReceived(uint256),entryFee_,False
calculateEthereumReceived(uint256),"tokenSupply_, exitFee_",False
isVested(),"bot, coolOffPeriod",True
rewardAvailable(),"lastReward, tokenBalanceLedger_, stakingRequirement",True
timerInfo(),"bot, coolOffPeriod, lastReward",True
processRewards(),"tokenBalanceLedger_, stakingRequirement, maxProcessingCap, bot, bot, bot, bot, botThreshold, bankrollEnabled, bankrollEnabled, bot, lastReward",True
