Function Name,State Variables Modified,Can Transfer Ether
constructor(address),owner,False
nominateNewOwner(address),nominatedOwner,False
acceptOwnership(),"nominatedOwner, owner, nominatedOwner, owner, nominatedOwner, nominatedOwner",True
constructor(address),selfDestructBeneficiary,False
setSelfDestructBeneficiary(address),selfDestructBeneficiary,False
initiateSelfDestruct(),"initiationTime, selfDestructInitiated, SELFDESTRUCT_DELAY",False
terminateSelfDestruct(),"initiationTime, selfDestructInitiated",False
selfDestruct(),"selfDestructInitiated, initiationTime, SELFDESTRUCT_DELAY, selfDestructBeneficiary",False
constructor(address),,False
setPaused(bool),"paused, paused, paused, lastPauseTime, paused",False
unit(),UNIT,False
preciseUnit(),PRECISE_UNIT,False
constructor(address),,False
setTarget(),target,False
setUseDELEGATECALL(bool),useDELEGATECALL,False
"_emit(bytes,uint,bytes32,bytes32,bytes32,bytes32)",,True
"function()externalpayable{if(useDELEGATECALL){assembly{letfree_ptr:=mload(0x40)calldatacopy(free_ptr,0,calldatasize)letresult:=delegatecall(gas,sload(target_slot),free_ptr,calldatasize,0,0)returndatacopy(free_ptr,0,returndatasize)ifiszero(result){revert(free_ptr,returndatasize)}return(free_ptr,returndatasize)}}else{target.setMessageSender(msg.sender);assembly{letfree_ptr:=mload(0x40)calldatacopy(free_ptr,0,calldatasize)letresult:=call(gas,sload(target_slot),callvalue,free_ptr,calldatasize,0,0)returndatacopy(free_ptr,0,returndatasize)ifiszero(result){revert(free_ptr,returndatasize)}return(free_ptr,returndatasize)}}}()","useDELEGATECALL, target",True
"constructor(address,address)",proxy,False
setProxy(address),proxy,False
setMessageSender(address),,True
"constructor(address,address)",associatedContract,False
setAssociatedContract(address),associatedContract,False
"constructor(address,address)",,False
"setAllowance(address,address,uint)",allowance,False
"setBalanceOf(address,uint)",balanceOf,False
"constructor(address,,string,string,uint,uint8,address)","tokenState, name, symbol, totalSupply, decimals",False
"allowance(address,address)","tokenState, owner",False
balanceOf(address),tokenState,False
setTokenState(),tokenState,False
"approve(address,uint)",tokenState,True
"constructor(address,,,,string,string,address,bytes4)","feePool, synthetix, currencyKey",False
setSynthetix(),synthetix,False
setFeePool(),feePool,False
"transfer(address,uint)","feePool, synthetix, currencyKey",False
"transfer(address,uint,bytes)","feePool, synthetix, currencyKey",False
"transferFrom(address,address,uint)","feePool, tokenState, tokenState, synthetix, currencyKey",False
"transferFrom(address,address,uint,bytes)","feePool, tokenState, tokenState, synthetix, currencyKey",False
"transferSenderPaysFee(address,uint)","feePool, synthetix, currencyKey",True
"transferSenderPaysFee(address,uint,bytes)","feePool, synthetix, currencyKey",True
"transferFromSenderPaysFee(address,address,uint)","feePool, tokenState, tokenState, synthetix, currencyKey",True
"transferFromSenderPaysFee(address,address,uint,bytes)","feePool, tokenState, tokenState, synthetix, currencyKey",True
"issue(address,uint)","tokenState, tokenState, totalSupply, totalSupply",False
"burn(address,uint)","tokenState, tokenState, totalSupply, totalSupply",False
"triggerTokenFallbackIfNeeded(address,address,uint)",,True
"constructor(address,address,,address,uint,uint)","MAX_TRANSFER_FEE_RATE, MAX_EXCHANGE_FEE_RATE, synthetix, feeAuthority, transferFeeRate, exchangeFeeRate, recentFeePeriods, recentFeePeriods, nextFeePeriodId",True
setExchangeFeeRate(uint),"MAX_EXCHANGE_FEE_RATE, exchangeFeeRate",False
setTransferFeeRate(uint),"MAX_TRANSFER_FEE_RATE, transferFeeRate",True
setFeeAuthority(address),feeAuthority,False
setFeePeriodDuration(uint),"MIN_FEE_PERIOD_DURATION, MAX_FEE_PERIOD_DURATION, feePeriodDuration",False
setSynthetix(),synthetix,False
"feePaid(bytes4,uint)","synthetix, currencyKey, recentFeePeriods, recentFeePeriods",False
closeCurrentFeePeriod(),"recentFeePeriods, feePeriodDuration, recentFeePeriods, FEE_PERIOD_LENGTH, recentFeePeriods, FEE_PERIOD_LENGTH, recentFeePeriods, FEE_PERIOD_LENGTH, FEE_PERIOD_LENGTH, FEE_PERIOD_LENGTH, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, recentFeePeriods, nextFeePeriodId, recentFeePeriods, synthetix, recentFeePeriods, nextFeePeriodId, nextFeePeriodId, recentFeePeriods",False
claimFees(bytes4),"lastFeeWithdrawal, recentFeePeriods, currencyKey",False
transferFeeIncurred(uint),transferFeeRate,True
transferredAmountToReceive(uint),,True
amountReceivedFromTransfer(uint),transferFeeRate,True
exchangeFeeIncurred(uint),exchangeFeeRate,False
exchangedAmountToReceive(uint),,False
amountReceivedFromExchange(uint),exchangeFeeRate,False
totalFeesAvailable(bytes4),"FEE_PERIOD_LENGTH, recentFeePeriods, recentFeePeriods, synthetix, currencyKey",False
"feesAvailable(address,bytes4)","FEE_PERIOD_LENGTH, FEE_PERIOD_LENGTH, synthetix, currencyKey",False
currentPenalty(address),synthetix,False
feesByPeriod(address),"FEE_PERIOD_LENGTH, synthetix, synthetix, synthetix, FEE_PERIOD_LENGTH, recentFeePeriods, lastFeeWithdrawal, recentFeePeriods, recentFeePeriods",False
constructor(uint),,False
"constructor(address,)",synthetix,False
setSynthetix(),synthetix,False
balanceOf(address),totalVestedAccountBalance,False
numVestingEntries(address),vestingSchedules,False
"getVestingScheduleEntry(address,uint)",vestingSchedules,False
"getVestingTime(address,uint)",,False
"getVestingQuantity(address,uint)",,False
getNextVestingIndex(address),,False
getNextVestingEntry(address),,False
getNextVestingTime(address),,False
getNextVestingQuantity(address),,False
withdrawSynthetix(uint),"synthetix, synthetix",True
purgeAccount(address),"vestingSchedules, totalVestedBalance, totalVestedBalance, totalVestedAccountBalance, totalVestedAccountBalance",False
"appendVestingEntry(address,uint,uint)","totalVestedBalance, totalVestedBalance, totalVestedBalance, synthetix, vestingSchedules, totalVestedAccountBalance, totalVestedAccountBalance, totalVestedAccountBalance, vestingSchedules",False
"addVestingSchedule(address,,)",,False
vest(),"vestingSchedules, totalVestedBalance, totalVestedBalance, totalVestedAccountBalance, totalVestedAccountBalance, synthetix",True
"constructor(address,address)",,False
"setCurrentIssuanceData(address,uint)","issuanceData, issuanceData, debtLedger",False
clearIssuanceData(address),issuanceData,False
incrementTotalIssuerCount(),"totalIssuerCount, totalIssuerCount",False
decrementTotalIssuerCount(),"totalIssuerCount, totalIssuerCount",False
appendDebtLedgerValue(uint),debtLedger,False
"setPreferredCurrency(address,bytes4)","preferredCurrency, currencyKey",False
setIssuanceRatio(uint),issuanceRatio,False
"importIssuerData(,)",,False
debtLedgerLength(),debtLedger,False
lastDebtLedgerEntry(),"debtLedger, debtLedger",False
hasIssued(address),issuanceData,False
"constructor(address,address,,)","oracle, rates, lastRateUpdateTimes, xdrParticipants",False
"updateRates(,,uint)",,False
deleteRate(bytes4),"rates, currencyKey, rates, currencyKey, lastRateUpdateTimes, currencyKey, currencyKey",False
setOracle(address),"oracle, oracle",False
setRateStalePeriod(uint),"rateStalePeriod, rateStalePeriod",False
rateForCurrency(bytes4),"rates, currencyKey",False
ratesForCurrencies(),rates,False
lastRateUpdateTimeForCurrency(bytes4),"lastRateUpdateTimes, currencyKey",False
lastRateUpdateTimesForCurrencies(),lastRateUpdateTimes,False
rateIsStale(bytes4),"currencyKey, lastRateUpdateTimes, currencyKey, rateStalePeriod",False
anyRateIsStale(),"lastRateUpdateTimes, rateStalePeriod",False
"constructor(address,,,address,,)","synthetixState, exchangeRates, feePool",False
addSynth(),"synth, synths, currencyKey, availableSynths, synth, synths, currencyKey, synth, currencyKey, synth",False
removeSynth(bytes4),"synths, currencyKey, synths, currencyKey, currencyKey, synths, currencyKey, availableSynths, availableSynths, availableSynths, availableSynths, availableSynths, availableSynths, availableSynths, synths, currencyKey, currencyKey",False
setEscrow(),escrow,False
setExchangeRates(),exchangeRates,False
setSynthetixState(),synthetixState,False
setPreferredCurrency(bytes4),"currencyKey, exchangeRates, currencyKey, synthetixState, currencyKey, currencyKey",False
"effectiveValue(bytes4,uint,bytes4)","exchangeRates, exchangeRates",False
totalIssuedSynths(bytes4),"exchangeRates, currencyKey, availableSynths, exchangeRates, availableSynths, availableSynths, exchangeRates, availableSynths",False
availableSynthCount(),availableSynths,False
"transfer(address,uint)",,True
"transfer(address,uint,bytes)",,True
"transferFrom(address,address,uint)",,True
"transferFrom(address,address,uint,bytes)",,True
"exchange(bytes4,uint,bytes4,address)",,False
"synthInitiatedExchange(address,bytes4,uint,bytes4,address)",,False
"synthInitiatedFeePayment(address,bytes4,uint)","feePool, feePool",False
"issueSynths(bytes4,uint)","currencyKey, currencyKey, synths, currencyKey",False
issueMaxSynths(bytes4),"currencyKey, currencyKey",False
"burnSynths(bytes4,uint)","currencyKey, currencyKey, synths, currencyKey",False
"maxIssuableSynths(address,bytes4)","currencyKey, synthetixState",False
collateralisationRatio(address),,False
"debtBalanceOf(address,bytes4)","synthetixState, synthetixState, synthetixState, currencyKey",False
"remainingIssuableSynths(address,bytes4)","currencyKey, currencyKey",False
collateral(address),"tokenState, escrow, escrow",False
transferableSynthetix(address),"tokenState, synthetixState",False
"constructor(address,address,,,,address,uint,uint)","fundsWallet, synthetix, synth, feePool, oracle, usdToEthPrice, usdToSnxPrice, lastPriceUpdateTime",False
setFundsWallet(address),"fundsWallet, fundsWallet",False
setOracle(address),"oracle, oracle",False
setSynth(),synth,False
setSynthetix(),synthetix,False
setPriceStalePeriod(uint),"priceStalePeriod, priceStalePeriod",False
setMinimumDepositAmount(uint),"minimumDepositAmount, minimumDepositAmount",False
"updatePrices(uint,uint,uint)","lastPriceUpdateTime, ORACLE_FUTURE_LIMIT, usdToEthPrice, usdToSnxPrice, lastPriceUpdateTime, usdToEthPrice, usdToSnxPrice, lastPriceUpdateTime",False
function()externalpayable{exchangeEtherForSynths();}(),,False
exchangeEtherForSynths(),"usdToEthPrice, depositStartIndex, depositEndIndex, deposits, depositStartIndex, depositStartIndex, totalSellableDeposits, totalSellableDeposits, usdToEthPrice, fundsWallet, synth, deposits, depositStartIndex, depositStartIndex, totalSellableDeposits, totalSellableDeposits, usdToEthPrice, fundsWallet, synth, usdToEthPrice",True
exchangeEtherForSynthsAtRate(uint),usdToEthPrice,False
exchangeEtherForSynthetix(),"fundsWallet, synthetix",True
"exchangeEtherForSynthetixAtRate(uint,uint)","usdToEthPrice, usdToSnxPrice",False
exchangeSynthsForSynthetix(uint),"synth, fundsWallet, synthetix",True
"exchangeSynthsForSynthetixAtRate(uint,uint)",usdToSnxPrice,False
withdrawSynthetix(uint),"synthetix, owner",True
withdrawMyDepositedSynths(),"depositStartIndex, depositEndIndex, deposits, deposits, totalSellableDeposits, totalSellableDeposits, smallDeposits, smallDeposits, synth",True
depositSynths(uint),synth,True
"tokenFallback(address,uint,bytes)","minimumDepositAmount, smallDeposits, smallDeposits, minimumDepositAmount, deposits, depositEndIndex, depositEndIndex, depositEndIndex, depositEndIndex, totalSellableDeposits, totalSellableDeposits",False
pricesAreStale(),"lastPriceUpdateTime, priceStalePeriod",False
synthetixReceivedForSynths(uint),"feePool, usdToSnxPrice",False
synthetixReceivedForEther(uint),usdToEthPrice,False
synthsReceivedForEther(uint),"usdToEthPrice, feePool",False
