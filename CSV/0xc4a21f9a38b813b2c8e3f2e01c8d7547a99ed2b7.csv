Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
ownerOf(uint256),,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
supportsInterface(bytes4),,False
getBeneficiary(),,False
isGenerator(),,False
"generateWarrior(uint256,uint256,uint256,uint256)",,False
isPVPProvider(),,False
"addTournamentContender(address,)",,False
getTournamentThresholdFee(),,False
"addPVPContender(address,uint256)",,False
getPVPEntranceFee(uint256),,False
isPVPListener(),,False
getBeneficiary(),,False
"pvpFinished(,uint256)",,False
pvpContenderRemoved(uint32),,False
tournamentFinished(),,False
setBank(address),bankAddress,False
setAdmin(address),"adminAddress, bankAddress, adminAddress",True
setIssuer(address),issuerAddress,False
pause(),paused,False
unpause(),paused,False
setNewAddress(address),newContractAddress,False
Ownable(),owner,True
transferOwnership(address),owner,False
pause(),paused,False
unpause(),paused,False
setSecondsPerBlock(uint256),secondsPerBlock,False
supportsInterface(bytes4),,False
balanceOf(address),,False
"transfer(address,uint256)","saleAuction, IDLE",True
"approve(address,uint256)",IDLE,True
"transferFrom(address,address,uint256)",IDLE,True
totalSupply(),,False
ownerOf(uint256),"owner, warriorToOwner, owner",False
tokensOfOwner(address),warriorToOwner,False
setGeneratorAddress(address),generator,False
setPVEBattleFee(uint256),"PVE_COMPENSATION, pveBattleFee",False
getPVECooldown(uint256),"MAX_LEVEL, PVE_COOLDOWN, PVE_COOLDOWN",False
getPVEDuration(uint256),PVE_DURATION,False
startPVE(uint256),"pveBattleFee, pveBattleFee, bankAddress, pveBattleFee, PVE_COMPENSATION",True
finishPVE(uint32),"PVE_BATTLE, PVE_COMPENSATION",True
finishPVEBatch(),"PVE_BATTLE, PVE_COMPENSATION",True
setBattleProviderAddress(address),battleProvider,False
signUpForPVP(uint32),"IDLE, battleProvider",True
"pvpFinished(,uint256)",battleProvider,True
pvpContenderRemoved(uint32),"battleProvider, PVP_BATTLE, IDLE",True
signUpForTournament(),"battleProvider, GROUP_SIZE, GROUP_SIZE",True
tournamentFinished(),battleProvider,True
setSaleAuctionAddress(address),saleAuction,False
"createSaleAuction(uint256,uint256,uint256,uint256)","IDLE, saleAuction, saleAuction",True
createMinerAuction(),"minerCreatedCount, MINER_CREATION_LIMIT, minerCreatedCount, generator, minerCreatedCount, MINER_PERK, bankAddress, saleAuction, saleAuction, MINER_END_PRICE, MINER_AUCTION_DURATION, bankAddress",False
CryptoWarriorCore(),"paused, adminAddress, issuerAddress, bankAddress",True
function()externalpayable{require(false);}(),,False
unpause(),"saleAuction, generator, battleProvider, newContractAddress",False
getBeneficiary(),bankAddress,False
isPVPListener(),,False
getWarriors(),,False
"getWarriorsFromIndex(uint32,uint32)",,False
getWarriorOwners(),warriorToOwner,False
getWarrior(uint256),,False
"PVP(uint256,uint256,uint256)","pvpOwnerCut, tournamentBankCut, pvpMaxIncentiveCut",False
grabBooty(),"ownerToBooty, totalBooty, ownerToBooty, totalBooty",True
getTournamentAdmissionBlock(),"ADMISSION_TIME, secondsPerBlock, tournamentEndBlock, tournamentEndBlock",False
setPVPEntranceFee(uint256),"pvpQueueSize, pvpBattleFee",False
getPVPEntranceFee(uint256),pvpBattleFee,False
maxPVPContenders(),pvpQueue,False
getPVPState(),"pvpQueueSize, PVP_INTERVAL, RATING_EXPAND_INTERVAL, nextPVPBatleBlock",False
canFinishPVP(),"nextPVPBatleBlock, PVP_INTERVAL, RATING_EXPAND_INTERVAL",False
"addPVPContender(address,uint256)","pvpListener, nextPVPBatleBlock, ownerToBooty, pvpQueueSize, pvpQueue",True
finishPVP(),"nextPVPBatleBlock, PVP_INTERVAL, RATING_EXPAND_INTERVAL",True
removePVPContender(uint32),"pvpQueueSize, warriorToOwner, pvpQueue, pvpQueue, pvpQueue, pvpQueueSize, pvpQueueSize, pvpListener",True
getPVPCycles(),pvpQueue,False
removeAllPVPContenders(),"pvpQueueSize, pvpQueueSize, pvpQueue, pvpListener, owner, warriorToOwner, owner, totalBooty",True
"Tournament(uint256,uint256,uint256,uint256,uint256)","tournamentOwnersCut, tournamentIncentiveCut",False
setTournamentEntranceFeeCut(uint256),"tournamentQueueSize, tournamentEntranceFeeCut",False
getTournamentEntranceFee(),"currentTournamentBank, tournamentEntranceFeeCut",False
getTournamentThresholdFee(),"currentTournamentBank, tournamentEntranceFeeCut, THRESHOLD",False
maxTournamentContenders(),"tournamentQueue, DATA_SIZE",False
canFinishTournament(),"tournamentEndBlock, tournamentQueueSize",False
"addTournamentContender(address,)","pvpListener, pvpBattleFee, currentTournamentBank, ownerToBooty, GROUP_SIZE, tournamentQueueSize, tournamentEndBlock",True
getTournamentState(),"tournamentQueueSize, currentTournamentBank, tournamentEndBlock, tournamentIncentiveCut",False
finishTournament(),"tournamentEndBlock, tournamentQueueSize",True
removeAllTournamentContenders(),"tournamentQueueSize, currentTournamentBank, tournamentQueue, DATA_SIZE, pvpListener, currentTournamentBank, tournamentQueueSize, tournamentEntranceFeeCut, THRESHOLD, warriorToOwner, currentTournamentBank, totalBooty",True
"BattleProvider(address,uint256,uint256,uint256,uint256,uint256)","pvpListener, paused, owner",True
isPVPProvider(),,False
unpause(),pvpListener,False
setSecondsPerBlock(uint256),secondsPerBlock,False
"WarriorGenerator(address,)",parameters,False
"changeParameter(uint32,uint32)",parameters,False
isGenerator(),,False
"generateWarrior(uint256,uint256,uint256,uint256)","parameters, parameters",True
"SaleClockAuction(address,uint256)","ownerCut, nonFungibleContract",False
cancelAuction(uint256),tokenIdToAuction,True
cancelAuctionWhenPaused(uint256),tokenIdToAuction,False
getCurrentPrice(uint256),tokenIdToAuction,False
"createAuction(uint256,uint256,uint256,uint256,address)",nonFungibleContract,True
bid(uint256),"tokenIdToAuction, nonFungibleContract, lastMinerSalePrices, minerSaleCount, minerSaleCount",True
averageMinerSalePrice(),lastMinerSalePrices,False
getAuctionsById(),tokenIdToAuction,False
"getAuctions(uint32,uint32)","tokenIdToAuction, nonFungibleContract, tokenIdToAuction",False
getAuction(uint256),tokenIdToAuction,False
