Function Name,State Variables Modified,Can Transfer Ether
USD(uint),,False
constructor(),owner,True
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
balanceOf(address),balances,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
changeMembershipContractAddr(address),MembershipContractAddr,False
"allowance(address,address)",allowances,False
"transferFrom(address,address,uint256)","allowances, MembershipContractAddr, balances, balances, balances, balances, balances, MembershipContractAddr, allowances, allowances",True
"approve(address,uint256)","allowances, allowances, allowances",True
constructor(),"ICOaddr, privateSaleAddr",False
"burnFrom(address,uint256)","ICOaddr, privateSaleAddr, balances, balances, balances, balances, totalSupply, totalSupply, balances, balances, balances, totalSupply, totalSupply",False
constructor(),"name, symbol, decimals, totalSupply, balances, owner, totalSupply, owner, totalSupply",False
constructor(),"fiat, tokenPrice, deadline, softCap, tokensSold",False
startICO(),deadline,False
setTokenPrice(uint256),"tokenPrice, tokenPrice, tokenPrice",False
setAIBTokenAddress(address),AIBToken,False
getTokenPriceInETH(),"fiat, tokenPrice",False
getRate(),,False
buyTokens(address),"deadline, AIBToken, tokensSold, tokensSold",True
function()publicpayable{buyTokens(msg.sender);}(),,True
withdrawEth(),"tokensSold, softCap, owner",True
"withdrawTokens(address,uint256)",AIBToken,True
"processOffchainPayment(address,uint256)","AIBToken, tokensSold, tokensSold",True
