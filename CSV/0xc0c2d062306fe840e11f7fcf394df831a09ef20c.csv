Function Name,State Variables Modified,Can Transfer Ether
deposit(),,False
potSwap(),,False
getPlayerID(address),,False
getPlayerName(uint256),,False
getPlayerLAff(uint256),,False
getPlayerAddr(uint256),,False
getPlayerLevel(uint256),,False
getNameFee(),,False
deposit(),,False
"updateRankBoard(uint256,uint256)",,False
resolveRankBoard(),,False
"setPlayerAffID(uint256,uint256)",,False
"registerNameXIDFromDapp(address,bytes32,uint256,bool,uint8)",,False
"registerNameXaddrFromDapp(address,bytes32,address,bool,uint8)",,False
"registerNameXnameFromDapp(address,bytes32,bytes32,bool,uint8)",,False
function()payableexternal;(),,False
buy(address),,False
sell(uint256),,False
reinvest(),,False
withdraw(),,False
exit(),,False
dividendsOf(address),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
stakingRequirement(),,False
constructor(),"levelValue_, levelValue_, levelValue_, levelRate_, levelRate_, levelRate_, fees_, fees_, fees_, fees_, potSplit_, potSplit_, potSplit_, potSplit_",False
"function()isActivated()isHuman()isWithinLimits(msg.value)publicpayable{OPKdatasets.EventReturnsmemory_eventData_=determinePID(_eventData_);uint256_pID=pIDxAddr_[msg.sender];buyCore(_pID,plyr_[_pID].laff,2,_eventData_);}()","pIDxAddr_, plyr_",True
"buyXname(bytes32,uint256)","pIDxAddr_, plyr_, plyr_, pIDxName_, plyr_, plyr_, PlayerBook, plyr_",True
"reLoadXname(bytes32,uint256,uint256)","pIDxAddr_, plyr_, plyr_, pIDxName_, plyr_, plyr_, plyr_",True
withdraw(),"rID_, pIDxAddr_, round_, round_, round_, round_, plyr_, plyr_, plyr_, plyr_",True
"registerNameXname(string,bytes32,bool,uint8)","PlayerBook, pIDxAddr_, plyr_, plyr_",True
getBuyPrice(),"rID_, round_, rndGap_, round_, round_, round_, round_",False
getTimeLeft(),"rID_, round_, round_, rndGap_, round_, round_, rndGap_",False
getPlayerVaults(uint256),"rID_, round_, round_, round_, round_, plyr_, round_, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyr_, plyr_",False
isRoundActive(uint256),"activated_, round_, rndGap_, round_, round_, round_",False
getCurrentRoundInfo(),"rID_, round_, round_, round_, round_, round_, round_, round_, plyr_, round_, plyr_, round_, rndTmEth_, rndTmEth_, rndTmEth_, rndTmEth_",False
getPlayerInfoByAddress(address),"rID_, pIDxAddr_, plyr_, plyrRnds_, plyr_, plyr_, plyr_, plyr_, plyrRnds_, plyr_, plyr_",True
"calcKeysReceived(uint256,uint256)","round_, rndGap_, round_, round_, round_, round_",False
iWantXKeys(uint256),"rID_, round_, rndGap_, round_, round_, round_, round_",False
"receivePlayerInfo(uint256,address,bytes32,uint256,uint8)","PlayerBook, pIDxAddr_, pIDxAddr_, pIDxName_, pIDxName_, plyr_, plyr_, plyr_, plyr_, plyr_, plyr_, plyrNames_, plyrNames_, plyr_, plyr_",True
getBytesName(string),,False
validateName(string),pIDxName_,False
"receivePlayerNameList(uint256,bytes32)","PlayerBook, plyrNames_, plyrNames_",True
potSwap(),"rID_, round_, round_",False
activate(),"otherOPK_, activated_, activated_, rID_, round_, rndExtra_, rndGap_, round_, rndInit_, rndExtra_",False
setOtherFomo(address),otherOPK_,False
