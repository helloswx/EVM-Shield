Function Name,State Variables Modified,Can Transfer Ether
Controlled(),controller,True
changeController(address),controller,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
"MiniMeToken(address,address,uint,string,uint8,string,bool)","tokenFactory, name, decimals, symbol, parentToken, parentSnapShotBlock, transfersEnabled, creationBlock",True
"transfer(address,uint256)",transfersEnabled,True
"transferFrom(address,address,uint256)","controller, transfersEnabled",True
balanceOf(address),,False
"approve(address,uint256)","transfersEnabled, controller, controller",True
"allowance(address,address)",,False
"approveAndCall(address,uint256,bytes)",,True
totalSupply(),,False
"balanceOfAt(address,uint)","parentToken, parentToken, parentSnapShotBlock",False
totalSupplyAt(uint),"parentToken, parentToken, parentSnapShotBlock",False
"createCloneToken(string,uint8,string,uint,bool)",tokenFactory,True
"generateTokens(address,uint)",,False
"destroyTokens(address,uint)",,False
enableTransfers(bool),transfersEnabled,True
function()publicpayable{require(isContract(controller));require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));}(),"controller, controller",True
claimTokens(address),"controller, token, token, controller, controller",True
"createCloneToken(address,uint,string,uint8,string,bool)",,True
SEED(),,False
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
addAddressToWhitelist(address),"whitelist, whitelist",False
addAddressesToWhitelist(),,False
removeAddressFromWhitelist(address),"whitelist, whitelist",False
removeAddressesFromWhitelist(),,False
SEEDWhitelist(),admin,True
"setAdmin(address,bool)","admin, admin",False
addAddressToWhitelist(address),"whitelist, whitelist",False
addAddressesToWhitelist(),,False
removeAddressFromWhitelist(address),"whitelist, whitelist",False
removeAddressesFromWhitelist(),,False
RefundVault(address),"wallet, state",False
deposit(address),"state, deposited, deposited",False
close(),"state, state, wallet",True
enableRefunds(),"state, state",False
refund(address),"state, deposited, deposited",True
pause(),paused,False
unpause(),paused,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
reclaimToken(),"token, token, owner",False
"SEEDCrowdsale(,,,uint256,uint256,uint256,uint256,,)","phase2Rates, token, vault, whitelist, startTime, phase2StartTime, endTime, privateWeiRaised, operationAdress, bountyAdress, commonBudgetAdress, initialSeedFarmingAdress, founderAdress, reserveAdress, phase2RateOffsets",False
function()publicpayable{buyTokens(msg.sender);}(),,True
"claimPrivateTokens(,)","privateHolderClaimed, privateHolderClaimed, token",False
totalWeiRaised(),"privateWeiRaised, phase1WeiRaised, phase2WeiRaised",False
getRate(),"phase2StartTime, phase1Rate, phase2StartTime, phase2RateOffsets, phase2RateOffsets, phase2Rates",False
buyTokens(address),"phase2StartTime, phase1WeiRaised, phase1WeiRaised, phase2WeiRaised, phase2WeiRaised, purchaserFunded, numPurchasers, numPurchasers, purchaserFunded, purchaserFunded, token, vault",True
finalize(),"isFinalized, isFinalized, token, operationAdress, OPERATION_AMOUNT, token, bountyAdress, BOUNTY_AMOUNT, token, commonBudgetAdress, COMMON_BUDGET_AMOUNT, token, initialSeedFarmingAdress, INITIAL_SEED_FARMING_AMOUNT, token, founderAdress, FOUNDER_AMOUNT, token, reserveAdress, RESERVE_AMOUNT, vault, token, token, newTokenOwner, vault, owner",True
hasEnded(),"endTime, phase2WeiRaised, phase2MaxEtherCap",False
