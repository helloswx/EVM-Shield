Function Name,State Variables Modified,Can Transfer Ether
constructor(address),"owner, reward_winaddr, time, deadline, time, price, reward_value, token_reward, plyr, plyr, next_count",True
"function()publicpayable{require(msg.value>=price);plyr.push(msg.sender);if(next_count>=plyr.length){next_count=0;}plyr[next_count].transfer(price*20/100);next_count++;if(next_count>=plyr.length){next_count=0;}plyr[next_count].transfer(price*20/100);next_count++;reward_value=token_reward.balanceOf(address(this));uint256_pvalue=plyr.length*price;if(reward_value>=_pvalue){token_reward.transfer(msg.sender,_pvalue);}uint256_now=now;if(_now>deadline){if(reward_winaddr==address(0)){reward_winaddr=plyr[plyr.length-1];}for(uint256i=plyr.length-9;i<plyr.length;i++){if(token_reward.balanceOf(plyr[i])>token_reward.balanceOf(reward_winaddr)){reward_winaddr=plyr[i];}}if(address(this).balance>3ether){reward_winaddr.transfer(3ether);}}deadline=_now+time;}()","price, plyr, next_count, plyr, next_count, plyr, next_count, price, next_count, next_count, plyr, next_count, plyr, next_count, price, next_count, reward_value, token_reward, plyr, price, reward_value, token_reward, deadline, reward_winaddr, reward_winaddr, plyr, plyr, plyr, plyr, token_reward, plyr, token_reward, reward_winaddr, reward_winaddr, plyr, reward_winaddr, deadline, time",True
"transfer(address,uint)",,False
balanceOf(address),,False
