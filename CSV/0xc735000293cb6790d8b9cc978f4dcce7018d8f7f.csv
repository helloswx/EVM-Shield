Function Name,State Variables Modified,Can Transfer Ether
buy(address),,False
withdraw(),,False
dividendsOf(address),,False
balanceOf(address),,False
"constructor(address,address,address)","rounds, hourglass, dev1, dev2",False
function()externalpayable{if(msg.sender!=address(hourglass)){donateToPot();}}(),hourglass,True
buy(),,True
donateToDivs(),hourglass,True
donateToPot(),,False
validate(),"rounds, currentRoundId, QUORUM, COOLDOWN, currentRoundId, currentRoundId",False
withdraw(),"accounts, currentRoundId, rounds, rounds",True
claimRewards(),"accounts, rounds, rounds, rounds, accounts",True
getConfig(),"COOLDOWN, COST, EXPIRATION, QUORUM, TICKET_MAX",False
getRound(uint256),rounds,False
getTotalTickets(address),accounts,False
getRoundCasteValues(uint256),"rounds, rounds, rounds",False
getRoundsActive(address),accounts,False
getRewards(address),accounts,False
"getTotalTicketSetsForRound(address,uint256)",accounts,False
"getTicketSet(address,uint256,uint256)",accounts,False
"getTicketValue(uint256,uint256)","currentRoundId, currentRoundId, EXPIRATION, rounds, COST, COST",False
"getTier(uint256,uint256)",rounds,False
"getRoundWinnings(address,uint256)","accounts, currentRoundId, currentRoundId, EXPIRATION",False
"getRewardWinnings(address,uint256)","currentRoundId, currentRoundId, EXPIRATION, rounds",False
getDividends(),hourglass,False
getHourglassBalance(),hourglass,False
