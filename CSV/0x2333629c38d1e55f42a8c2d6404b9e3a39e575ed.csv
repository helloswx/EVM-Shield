Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
pause(),paused,False
unpause(),paused,False
DinoToken(uint),"totalSupply, decimals, totalSupply, totalSupply, tokenSaleContract",True
"transfer(address,uint)",,True
"transferFrom(address,address,uint)",,True
DinoTokenSale(),"dinoToken, TOTAL_DINOTOKEN_SUPPLY, dinoToken, WALLET_FOUNDATION, ALLOC_FOUNDATION, dinoToken, WALLET_TEAM, ALLOC_TEAM, dinoToken, WALLET_MARKETING, ALLOC_MARKETING, dinoToken, WALLET_ADVISOR, ALLOC_ADVISOR, dinoToken, owner",True
"updatePresaleWhitelist(,bool)",whitelisted_Presale,False
getPriceRate(),"startTime, startTime, STAGE1_TIME_END, RATE_CROWDSALE_S1, startTime, STAGE2_TIME_END, RATE_CROWDSALE_S2, startTime, STAGE3_TIME_END, RATE_CROWDSALE_S3",False
"function()publicpayable{require(validPurchase());uint256weiAmount=msg.value;uint256purchaseTokens;if(whitelisted_Presale[msg.sender])purchaseTokens=weiAmount.mul(RATE_PRESALE);elsepurchaseTokens=weiAmount.mul(getPriceRate());require(purchaseTokens>0&&ALLOC_SALE-totalDinoSold>=purchaseTokens);require(dinoToken.transfer(msg.sender,purchaseTokens));emitTokenPurchase(msg.sender,weiAmount,purchaseTokens);totalDinoSold=totalDinoSold.add(purchaseTokens);weiRaised=weiRaised.add(weiAmount);weiContributions[msg.sender]=weiContributions[msg.sender].add(weiAmount);forwardFunds();}()","whitelisted_Presale, RATE_PRESALE, ALLOC_SALE, totalDinoSold, dinoToken, totalDinoSold, totalDinoSold, weiRaised, weiRaised, weiContributions, weiContributions",True
hasEnded(),endTime,False
toggleHalt(bool),halted,False
"drainToken(address,uint256)","dinoToken, dinoToken",True
drainRemainingToken(address),"dinoToken, dinoToken",True
safeDrain(),WALLET_ETH_ADMIN,True
