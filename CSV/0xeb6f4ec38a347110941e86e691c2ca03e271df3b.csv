Function Name,State Variables Modified,Can Transfer Ether
minHouseStake(uint),,False
maxBalance(),,False
conflictEndFine(),,False
"isValidBet(uint8,uint,uint)",,False
"endGameConflict(uint8,uint,uint,int,uint,bytes32,bytes32)",,False
"serverForceGameEnd(uint8,uint,uint,int,uint,uint)",,False
"userForceGameEnd(uint8,uint,uint,int,uint,uint)",,False
constructor(),"owner, pendingOwner",True
transferOwnership(address),"pendingOwner, owner",False
claimOwnership(),"owner, pendingOwner, pendingOwner, owner, pendingOwner",False
activate(),activated,False
constructor(address),conflictRes,False
updateConflictResolution(address),"newConflictRes, updateTime",False
activateConflictResolution(),"newConflictRes, updateTime, updateTime, MIN_TIMEOUT, updateTime, MAX_TIMEOUT, conflictRes, newConflictRes, newConflictRes, updateTime, newConflictRes",False
pause(),"paused, timePaused",False
unpause(),"paused, timePaused",False
destroy(),owner,False
"constructor(address,uint128,uint128,address,address,uint)","serverAddress, houseAddress, lastProfitTransferTimestamp, minStake, maxStake",False
setGameIdCntr(uint),"gameIdCntr, gameIdCntr",False
withdraw(),"pendingReturns, pendingReturns",True
transferProfitToHouse(),"lastProfitTransferTimestamp, profitTransferTimeSpan, lastProfitTransferTimestamp, houseProfit, houseProfit, houseProfit, houseStake, houseStake, houseAddress",True
setProfitTransferTimeSpan(uint),profitTransferTimeSpan,False
addHouseStake(),"houseStake, houseStake",False
withdrawHouseStake(uint),"conflictRes, activeGames, houseStake, houseStake, houseProfit, houseProfit, houseStake, houseStake, houseStake, owner",True
withdrawAll(),"houseProfit, houseStake, houseStake, owner",True
setHouseAddress(address),houseAddress,False
"setStakeRequirements(uint128,uint128)","minStake, maxStake, minStake, maxStake",False
"constructor(address,uint128,uint128,address,address,uint)",,False
"serverEndGameConflict(uint32,uint8,uint,uint,int,bytes32,bytes32,uint,address,bytes,address,bytes32,bytes32)",,False
"userEndGameConflict(uint32,uint8,uint,uint,int,bytes32,bytes32,uint,address,bytes,bytes32)",serverAddress,True
userCancelActiveGame(uint),"userGameId, gameIdGame",True
"serverCancelActiveGame(address,uint)","userGameId, gameIdGame",True
"serverForceGameEnd(address,uint)","userGameId, gameIdGame, conflictRes",False
userForceGameEnd(uint),"userGameId, gameIdGame, conflictRes",True
"constructor(address,uint128,uint128,address,address,uint)",,False
"createGame(bytes32,uint,uint,bytes32,bytes)","userGameId, gameIdGame, gameIdCntr, userGameId, gameIdGame, activeGames, activeGames",True
"serverEndGame(uint32,int,bytes32,bytes32,uint,address,address,bytes)",,False
"userEndGame(uint32,int,bytes32,bytes32,uint,address,bytes)",serverAddress,True
