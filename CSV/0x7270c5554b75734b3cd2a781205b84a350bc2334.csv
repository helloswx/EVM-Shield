Function Name,State Variables Modified,Can Transfer Ether
Manageable(address),manager,False
activate(),active,False
deactivate(),active,False
"Versionable(string,string,uint256)","name, version, identifier, createdAt",False
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
getActiveContractAddress(uint256),activeContracts,False
"existsManagedContract(uint256,address)",managedContracts,False
"upgradeContract(uint256,address)","activeContracts, managedContracts",False
"rollbackContract(uint256,address)",activeContracts,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"SwissCryptoExchangeToken(address,uint256,address)",totalSupply,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,False
mint(uint256),"manager, COMPANY_CONTRACT_ID, totalSupply, totalSupply",False
"BaseCompany(string,string,uint256,address)",,False
getSharesPercentage(address),,False
tokenAddress(),"manager, TOKEN_CONTRACT_ID",False
token(),,False
isShareholder(address),,False
isMajorityShareholder(address),,False
SwissCryptoExchangeCompany(address),,False
function()publicpayableisActiveonlyWhenSelling{require(msg.sender==currentSale.investor&&msg.value>0);processPayment();}(),currentSale,True
"initializeNewSale(uint256,uint256,address,address)","currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale",True
finalizeSale(),"currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale",True
abortSale(),"currentSale, currentSale, currentSale, currentSale, currentSale, currentSale, currentSale",True
