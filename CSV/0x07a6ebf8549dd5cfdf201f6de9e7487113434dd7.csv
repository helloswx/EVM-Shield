Function Name,State Variables Modified,Can Transfer Ether
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
constructor(),"actualCycle, queue",False
setVerificationPrice(uint),,False
verify(address),support,True
"function()publicpayable{require(!isContract(msg.sender));if(msg.value==verificationPrice){verify(msg.sender);return;}if(msg.value==0&&msg.sender==owner()){addressa=bytesToAddress(bytes(msg.data));verify(a);return;}if(referrer[msg.sender]==address(0)){require(setRef());}if(msg.value>0){require(gasleft()>=300000,""We require more gas!"");require(msg.value<=10ether);if(block.timestamp>=cycleStart+actualCycle){if(queue.length.sub(lastCycle)>=frontier){actualCycle=actualCycle*2;if(actualCycle>maxCycle){actualCycle=maxCycle;}}else{actualCycle=actualCycle/2;if(actualCycle<minCycle){actualCycle=minCycle;}}uintamountOfPlayers=queue.length-lastCycle;lastCycle=queue.length;cycleStart=block.timestamp;currentReceiverIndex=lastCycle;cycles++;if(amountOfPlayers!=1){currentRefundIndex=lastCycle.sub(1);refunding();}else{singleRefunding();}emitNewCycle(cycleStart,actualCycle,cycles);}if(currentRefundIndex!=0){refunding();}uintpercent=queue.length.sub(lastCycle).add(1);if(percent>=33){percent=33;}queue.push(Deposit(msg.sender,uint128(msg.value),uint128(msg.value*(100+percent)/100)));uint_support=msg.value*supportPercent/100;support.send(_support);uint_refBonus=msg.value*refBonus/1000;referrer[msg.sender].send(_refBonus);emitRefBonusPayed(msg.sender,referrer[msg.sender],_refBonus,1);if(referrer[referrer[msg.sender]]!=address(0)){referrer[referrer[msg.sender]].send(_refBonus);emitRefBonusPayed(msg.sender,referrer[referrer[msg.sender]],_refBonus,2);}emitNewDeposit(msg.sender,queue.length-1,msg.value,msg.value*(100+percent)/100,cycles);if(currentRefundIndex==0){reserved+=msg.value*96/100/2;if(delayed!=0){reserved!=delayed;delayed=0;}pay();}else{delayed+=msg.value*96/100/2;}}}()","cycleStart, actualCycle, queue, lastCycle, actualCycle, actualCycle, actualCycle, actualCycle, actualCycle, actualCycle, actualCycle, actualCycle, queue, lastCycle, lastCycle, queue, cycleStart, currentReceiverIndex, lastCycle, cycles, currentRefundIndex, lastCycle, cycleStart, actualCycle, cycles, currentRefundIndex, queue, lastCycle, queue, supportPercent, support, queue, cycles, currentRefundIndex, reserved, delayed, reserved, delayed, delayed, delayed",True
getDeposit(uint),queue,False
getDepositsCount(address),"currentReceiverIndex, queue, queue",False
getDeposits(address),"currentReceiverIndex, queue, queue",False
getQueueLength(),"queue, currentReceiverIndex",False
contractBalance(),,False
