Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
changeOwner(address),"owner, owner",False
"checkWinner(uint,uint)",tickets,False
"getBalancePlayer(uint,address)",balancePlayer,False
"ticketInfo(uint,uint)",tickets,False
"newTicket(uint,address,uint)","countTickets, tickets, countTickets, countTickets, balancePlayer, balancePlayer, priceOfToken",False
clearRound(uint),"countTickets, entropyNumber, entropyNumber",False
getCountTickets(uint),countTickets,False
"addBalanceWinner(uint,uint,uint)","tickets, balanceWinner, balanceWinner, amountPrize, tickets",False
"getBalanceWinner(address,uint)",balanceWinner,False
"findHappyNumber(uint,uint)",countTickets,False
"constructor(address,uint)","administrationWallet, m_tickets, currentRound, m_tickets, currentRound",False
"function()externalpayable{if(msg.value>=priceOfToken){buyTicket(msg.sender);}else{refundEth(msg.sender,msg.value);}}()",priceOfToken,True
buyTicket(address),"priceOfToken, priceOfToken, tickets, canBuyTickets, tickets, canBuyTickets, canBuyTickets, canBuyTickets, canBuyTickets, tickets, tickets, priceOfToken, tickets, tickets, tickets, m_tickets, currentRound, priceOfToken, currentRound, priceOfToken, totalTicketBuyed, tickets, notUnigue, notUnigue, uniquePlayer, totalEthRaised, totalEthRaised, canBuyTickets",True
setStepLottery(uint),currentRound,False
getStepLottery(),,False
"getTicketInfo(uint,uint)",m_tickets,False
balanceETH(),,False
"getBalancePlayer(uint,address)",m_tickets,False
"getBalanceWinner(address,uint)",m_tickets,False
"checkWinner(uint,uint)",m_tickets,False
getCurrentDate(),,False
getCountTickets(uint),"countTickets, m_tickets",False
setAdministrationWallet(address),"administrationWallet, administrationWallet",True
