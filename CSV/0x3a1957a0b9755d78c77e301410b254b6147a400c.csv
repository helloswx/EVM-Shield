Function Name,State Variables Modified,Can Transfer Ether
supportsInterface(bytes4),,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"setApprovalForAll(address,bool)",,False
"isApprovedForAll(address,address)",,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
totalSupply(),,False
"tokenOfOwnerByIndex(address,uint256)",,False
tokenByIndex(uint256),,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
"onERC721Received(address,address,uint256,bytes)",,False
constructor(),InterfaceId_ERC165,False
supportsInterface(bytes4),supportedInterfaces,False
constructor(),"InterfaceId_ERC721, InterfaceId_ERC721Exists",False
balanceOf(address),ownedTokensCount,False
ownerOf(uint256),"tokenOwner, owner, owner",False
exists(uint256),"tokenOwner, owner",False
"approve(address,uint256)","owner, owner, owner, tokenApprovals, owner",True
getApproved(uint256),tokenApprovals,False
"setApprovalForAll(address,bool)",operatorApprovals,True
"isApprovedForAll(address,address)",operatorApprovals,False
"transferFrom(address,address,uint256)",,True
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,True
"constructor(string,string)","name_, symbol_, InterfaceId_ERC721Enumerable, InterfaceId_ERC721Metadata",False
name(),name_,False
symbol(),symbol_,False
tokenURI(uint256),tokenURIs,False
"tokenOfOwnerByIndex(address,uint256)",ownedTokens,False
totalSupply(),allTokens,False
tokenByIndex(uint256),allTokens,False
"createAuction(uint256,uint128,uint128,uint128)",,False
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
addAdmin(address),addressIsAdmin,False
removeAdmin(address),addressIsAdmin,False
pauseContract(),isActive,False
activateContract(),isActive,False
function()publicpayable{}(),,False
"createAuction(uint256,uint128,uint128,uint128)","marketplaceContract, marketplaceContract",False
setMarketplaceContract(address),marketplaceContract,False
getPlayerAnimals(address),"ownedTokensCount, animals, tokenOwner",False
getPlayerDnas(address),"addressToDnaCount, dnas, dnaIdToOwnerAddress",False
"transferFrom(address,address,uint256)",,True
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
buyAnimal(uint256),"animals, tokenOwner, tokenOwner, developersFee, rarityTargetValue, shouldGenerateDna",True
getAnimal(uint256),"animals, rarityTargetValue, tokenOwner",False
getAnimalsCount(),animals,False
getDna(uint256),"dnas, dnaIdToOwnerAddress",False
getDnasCount(),dnas,False
getCountry(uint256),countries,False
getCountriesCount(),countries,False
getDevelopersFee(),developersFee,False
getMarketplaceContract(),marketplaceContract,False
getShouldGenerateDna(),shouldGenerateDna,False
withdrawContract(),,True
setDevelopersFee(uint8),developersFee,False
setShouldGenerateDna(bool),shouldGenerateDna,False
addCountry(bytes2),countries,False
"addAnimal(uint256,bytes32,uint8)","countries, animals, startingAnimalPrice, animals",False
"changeCountry(uint256,bytes2)",countries,False
"changeAnimal(uint256,uint256,bytes32,uint8)","countries, animals, countries",False
"setRarityTargetValue(uint8,uint256)",rarityTargetValue,False
calculateNextEtherValue(uint256),,False
