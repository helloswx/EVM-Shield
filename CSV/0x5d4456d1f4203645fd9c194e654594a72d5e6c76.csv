Function Name,State Variables Modified,Can Transfer Ether
"receiveApproval(address,uint256,address,bytes)",,False
"tokenFallback(address,uint256,bytes)",,False
constructor(),"owner, maxSalesAllowed, transfersBetweenSalesAllowed",True
"initContract(address,address,address)","contractInitialized, contractInitialized, priceSetter, totalSupply, balanceOf, balanceOf, team, balanceOf, team, isPreferredTokensAccount, team, balanceOf, balanceOf, isPreferredTokensAccount, balanceOf, balanceOf, isPreferredTokensAccount",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","owner, isPreferredTokensAccount, transfersBetweenSalesAllowed, salesCounter, maxSalesAllowed, owner, isPreferredTokensAccount, allowance, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
"approveAllAndCall(address,bytes)",balanceOf,True
"transferAndCall(address,uint256,bytes)",,True
"transferAllAndCall(address,bytes)",balanceOf,True
changeOwner(address),"owner, owner",False
"startSale(uint256,uint256)","balanceOf, salesCounter, maxSalesAllowed, saleStartUnixTime, saleEndUnixTime, saleStartUnixTime, saleEndUnixTime, salesCounter, salesCounter, salesCounter",False
saleIsRunning(),"balanceOf, saleStartUnixTime, saleEndUnixTime, saleStartUnixTime, saleEndUnixTime",False
saleIsFinished(),"balanceOf, saleStartUnixTime, saleEndUnixTime, saleEndUnixTime",False
changePriceSetter(address),priceSetter,False
"setMinMaxPriceInWei(uint256,uint256)","priceMinWei, priceMaxWei",False
setTokenPriceInWei(uint256),"priceMinWei, priceMinWei, tokenPriceInWei, priceMinWei, priceMaxWei, priceMaxWei, tokenPriceInWei, priceMaxWei, tokenPriceInWei, tokenPriceInWei",False
function()externalpayable{buyTokens();}(),,False
buyTokens(),"tokenPriceInWei, tokenPriceInWei, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, tokenPriceInWei",True
withdrawAllToOwner(),,True
addReferrer(bytes32),isReferrer,False
removeReferrer(bytes32),isReferrer,False
"setReferralBonuses(uint256,uint256)","referralBonus, referrerBonus",False
buyTokensWithReferrerAddress(address),"tokenPriceInWei, isReferrer, tokenPriceInWei, balanceOf, referrerLinkedSales, referrerLinkedSales, referralBonus, referrerBonus, balanceOf, balanceOf, balanceOf, balanceOf, referrerBalanceOf, referrerBalanceOf, tokenPriceInWei",True
getReferrerBonusTokens(),"referrerBalanceOf, balanceOf, balanceOf",True
constructor(),owner,True
transferOwnership(address),owner,False
"setRateToken(uint256,uint256)","rate, rateModifier",False
"setRoundTime(uint,uint)",,False
setDEEXAddress(address),"DEEXContract, DEEXContract",False
setDragonsAddress(address),"DragonsContract, DragonsContract",False
setHamstersAddress(address),"HamstersContract, HamstersContract",False
getNow(),,False
getState(),currentDeadline,False
"setInfo(address,uint256)","DragonsContract, HamstersContract, DragonsContract, depositHamsters, currentRound, depositDragons, currentRound, countOfDragons, totalSupplyOfDragons, totalSupplyOfDragons, depositDragons, currentRound, depositDragons, currentRound, HamstersContract, depositDragons, currentRound, depositHamsters, currentRound, countOfHamsters, totalSupplyOfHamsters, totalSupplyOfHamsters, depositHamsters, currentRound, depositHamsters, currentRound, lastHero, currentDeadline, lastDeadline, currentDeadline, currentDeadline, currentDeadline, lastDeadline, jackPot",True
estimateTokenPercent(uint256),"rateModifier, rate, rate",False
calculateProbability(),"winner, totalDeexSupplyOfHamsters, DEEXContract, HamstersContract, totalDeexSupplyOfDragons, DEEXContract, DragonsContract, totalSupplyOfHamsters, totalSupplyOfDragons, totalDeexSupplyOfHamsters, totalDeexSupplyOfHamsters, totalDeexSupplyOfDragons, totalDeexSupplyOfDragons, totalDeexSupplyOfHamsters, totalDeexSupplyOfDragons, totalDeexSupplyOfDragons, totalDeexSupplyOfHamsters, probabilityOfDragons, totalSupplyOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfDragons, probabilityOfHamsters, probabilityOfDragons, totalDeexSupplyOfHamsters, totalDeexSupplyOfDragons, probabilityOfHamsters, totalSupplyOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfHamsters, probabilityOfDragons, probabilityOfHamsters, totalDeexSupplyOfHamsters, DEEXContract, HamstersContract, totalDeexSupplyOfDragons, DEEXContract, DragonsContract",False
getWinners(),"winner, totalSupplyOfHamsters, totalSupplyOfDragons, totalDeexSupplyOfHamsters, totalDeexSupplyOfHamsters, probabilityOfDragons, winner, probabilityOfDragons, winner, DEEXContract, HamstersContract, DEEXContract, HamstersContract, DEEXContract, HamstersContract, DEEXContract, DragonsContract, DEEXContract, DragonsContract, DEEXContract, DragonsContract, lastTotalSupplyOfHamsters, totalSupplyOfHamsters, lastTotalSupplyOfDragons, totalSupplyOfDragons, lastTotalDeexSupplyOfDragons, totalDeexSupplyOfDragons, lastTotalDeexSupplyOfHamsters, totalDeexSupplyOfHamsters, lastRoundHero, lastHero, lastJackPot, jackPot, lastWinner, winner, lastCountOfDragons, countOfDragons, lastCountOfHamsters, countOfHamsters, lastWithdrawn, withdrawn, lastWithdrawnDeex, withdrawnDeex, lastBalance, lastWithdrawn, remainder, lastBalance, lastWithdrawn, team, remainder, lastBalance, lastTotalSupplyOfDragons, lastTotalSupplyOfHamsters, lastJackPot, lastBalanceDeex, lastWithdrawnDeex, remainderDeex, lastBalanceDeex, lastWithdrawnDeex, tokenReturn, totalDeexSupplyOfDragons, totalDeexSupplyOfHamsters, remainderDeex, DEEXContract, team, tokenReturn, lastBalanceDeex, DEEXContract, totalSupplyOfHamsters, totalSupplyOfDragons, totalDeexSupplyOfHamsters, totalDeexSupplyOfDragons, remainder, remainderDeex, jackPot, withdrawn, winner, withdrawnDeex, countOfDragons, countOfHamsters, probabilityOfHamsters, probabilityOfDragons, defaultCurrentDeadlineInHours, defaultLastDeadlineInHours, currentRound",True
"function()externalpayable{if(msg.value==0){require(depositDragons[currentRound-1][msg.sender]>0||depositHamsters[currentRound-1][msg.sender]>0);uintpayout=0;uintpayoutDeex=0;if(lastWinner==1&&depositDragons[currentRound-1][msg.sender]>0){payout=calculateLastETHPrize(msg.sender);}if(lastWinner==2&&depositHamsters[currentRound-1][msg.sender]>0){payout=calculateLastETHPrize(msg.sender);}if(payout>0){depositDragons[currentRound-1][msg.sender]=0;depositHamsters[currentRound-1][msg.sender]=0;withdrawn=withdrawn.add(payout);msg.sender.transfer(payout);}if((lastWinner==1&&depositDragons[currentRound-1][msg.sender]==0)||(lastWinner==2&&depositHamsters[currentRound-1][msg.sender]==0)){payoutDeex=calculateLastDeexPrize(msg.sender);withdrawnDeex=withdrawnDeex.add(payoutDeex);DEEXContract.transfer(msg.sender,payoutDeex);}if(msg.sender==lastRoundHero){lastHeroHistory=lastRoundHero;lastRoundHero=address(0x0);withdrawn=withdrawn.add(lastJackPot);msg.sender.transfer(lastJackPot);}}}()","depositDragons, currentRound, depositHamsters, currentRound, lastWinner, depositDragons, currentRound, lastWinner, depositHamsters, currentRound, depositDragons, currentRound, depositHamsters, currentRound, withdrawn, withdrawn, lastWinner, depositDragons, currentRound, lastWinner, depositHamsters, currentRound, withdrawnDeex, withdrawnDeex, DEEXContract, lastRoundHero, lastHeroHistory, lastRoundHero, lastRoundHero, withdrawn, withdrawn, lastJackPot, lastJackPot",True
calculateETHPrize(address),"totalSupplyOfDragons, totalSupplyOfHamsters, depositDragons, currentRound, totalSupply, depositDragons, currentRound, totalSupplyOfDragons, depositHamsters, currentRound, totalSupply, depositHamsters, currentRound, totalSupplyOfHamsters",False
calculateDeexPrize(address),"totalDeexSupplyOfDragons, totalDeexSupplyOfHamsters, depositDragons, currentRound, totalSupply, depositDragons, currentRound, totalSupplyOfDragons, depositHamsters, currentRound, totalSupply, depositHamsters, currentRound, totalSupplyOfHamsters",False
calculateLastETHPrize(address),"lastTotalSupplyOfDragons, lastTotalSupplyOfHamsters, depositDragons, currentRound, totalSupply, depositDragons, currentRound, lastTotalSupplyOfDragons, depositHamsters, currentRound, totalSupply, depositHamsters, currentRound, lastTotalSupplyOfHamsters",False
calculateLastDeexPrize(address),"lastTotalDeexSupplyOfDragons, lastTotalDeexSupplyOfHamsters, depositDragons, currentRound, totalSupply, depositDragons, currentRound, lastTotalSupplyOfDragons, depositHamsters, currentRound, totalSupply, depositHamsters, currentRound, lastTotalSupplyOfHamsters",False
"function()externalpayable{require(BankContract.getState()&&msg.value>=0.05ether);BankContract.setInfo(msg.sender,msg.value.mul(90).div(100));team.transfer(msg.value.mul(10).div(100));address(BankContract).transfer(msg.value.mul(90).div(100));}()","BankContract, BankContract, team, BankContract",True
"constructor(address,address)","BankContract, BankContract, DEEXContract, DEEXContract",False
"constructor(address,address)","BankContract, BankContract, DEEXContract, DEEXContract",False
