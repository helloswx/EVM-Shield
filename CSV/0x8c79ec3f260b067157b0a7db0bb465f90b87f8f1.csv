Function Name,State Variables Modified,Can Transfer Ether
Controlled(),controller,True
changeController(address),controller,False
"receiveApproval(address,uint256,address,bytes)",,False
"MiniMeToken(address,address,uint,string,uint8,string,bool)","tokenFactory, name, decimals, symbol, parentToken, parentSnapShotBlock, transfersEnabled, creationBlock",True
"transfer(address,uint256)",transfersEnabled,True
"transferFrom(address,address,uint256)","controller, transfersEnabled",True
balanceOf(address),,False
"approve(address,uint256)",transfersEnabled,True
"allowance(address,address)",,False
"approveAndCall(address,uint256,bytes)",,True
totalSupply(),,False
"balanceOfAt(address,uint)","parentToken, parentToken, parentSnapShotBlock",False
totalSupplyAt(uint),"parentToken, parentToken, parentSnapShotBlock",False
"createCloneToken(string,uint8,string,uint,bool)",tokenFactory,True
"generateTokens(address,uint)",,False
"destroyTokens(address,uint)",,False
enableTransfers(bool),transfersEnabled,True
function()publicpayable{}(),,False
claimTokens(address),"controller, controller, controller",True
"createCloneToken(address,uint,string,uint8,string,bool)",,True
fund(),"minimumFundingAmount, totalCurrentFunders, totalCurrentFunders, funders, withdrawalCounter",True
calculateWithdrawalAmount(uint),,False
"calculateRefundAmount(uint,uint)",,False
getRefundAmountForFunder(address),"funders, funders",False
getFunderContribution(address),"funders, funders, funders",False
getBeneficiary(),beneficiary,False
getCurrentTotalFunders(),totalCurrentFunders,False
getWithdrawalCounter(),withdrawalCounter,False
getWithdrawalEntryForFunder(address),funders,False
getContractBalance(),,False
getFunderBalance(address),,False
getFunderContributionClaimed(address),funders,False
isFunder(address),funders,False
isTokenized(),tokenized,False
shouldUpdateFunder(address),withdrawalCounter,False
setMinimumFundingAmount(uint),minimumFundingAmount,False
withdraw(),"withdrawalCounter, withdrawalCounter, lastWithdrawal, nextWithdrawal, nextWithdrawal, withdrawalPeriod, beneficiary",True
refund(),,True
removeFunder(),"funders, totalCurrentFunders, totalCurrentFunders",True
"addTokenization(string,string,uint8)","tokenFactory, tokenContract, tokenFactory, tokenized, canClaimTokens",False
claimTokens(),"canClaimTokens, funders, tokenContract",True
enableTokenClaiming(bool),canClaimTokens,False
sunset(),"sunsetWithdrawDate, sunsetWithdrawalPeriod, live",False
swipe(address),sunsetWithdrawDate,True
