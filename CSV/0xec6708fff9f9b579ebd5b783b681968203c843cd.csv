Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
amountOfParticipants(),allParticipants,False
LareCoin(),"owner, decimals, owner, owner, owner",True
function()payableexternal{require(msg.value>=MINIMUM_CONTRIBUTION);require(msg.value<=MAXIMUM_CONTRIBUTION);uint256purchasedTokensBase=msg.value*(uint256(10)**18)/ETH_PER_LARE;uint256purchasedTokensIncludingBonus=purchasedTokensBase;if(now<PRE_SALE_START_TIME){revert();}elseif(now>=PRE_SALE_START_TIME&&now<MAIN_SALE_START_TIME){totalBaseLareSoldInPreSale+=purchasedTokensBase;if(totalBaseLareSoldInPreSale<=2000000000*(uint256(10)**decimals)){purchasedTokensIncludingBonus+=purchasedTokensBase;}else{revert();}}elseif(now>=MAIN_SALE_START_TIME&&now<MAIN_SALE_END_TIME){totalBaseLareSoldInMainSale+=purchasedTokensBase;if(totalBaseLareSoldInMainSale<=2000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*80/100;elseif(totalBaseLareSoldInMainSale<=4000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*70/100;elseif(totalBaseLareSoldInMainSale<=6000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*60/100;elseif(totalBaseLareSoldInMainSale<=8000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*50/100;elseif(totalBaseLareSoldInMainSale<=9500000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*40/100;elseif(totalBaseLareSoldInMainSale<=11000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*30/100;elseif(totalBaseLareSoldInMainSale<=12500000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*20/100;elseif(totalBaseLareSoldInMainSale<=14000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*10/100;elseif(totalBaseLareSoldInMainSale<=15000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*8/100;elseif(totalBaseLareSoldInMainSale<=16000000000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*6/100;elseif(totalBaseLareSoldInMainSale<=16691200000*(uint256(10)**decimals))purchasedTokensIncludingBonus+=purchasedTokensBase*4/100;elsepurchasedTokensIncludingBonus+=purchasedTokensBase*2/100;}else{revert();}if(addressToLarePurchased[msg.sender]==0)allParticipants.push(msg.sender);addressToLarePurchased[msg.sender]+=purchasedTokensIncludingBonus;addressToEtherContributed[msg.sender]+=msg.value;totalLareSold+=purchasedTokensIncludingBonus;require(totalLareSold<TOTAL_LARE_FOR_SALE);owner.transfer(msg.value);}(),"MINIMUM_CONTRIBUTION, MAXIMUM_CONTRIBUTION, ETH_PER_LARE, PRE_SALE_START_TIME, PRE_SALE_START_TIME, MAIN_SALE_START_TIME, totalBaseLareSoldInPreSale, totalBaseLareSoldInPreSale, decimals, MAIN_SALE_START_TIME, MAIN_SALE_END_TIME, totalBaseLareSoldInMainSale, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, totalBaseLareSoldInMainSale, decimals, addressToLarePurchased, allParticipants, addressToLarePurchased, addressToEtherContributed, totalLareSold, totalLareSold, TOTAL_LARE_FOR_SALE, owner",True
grantPurchasedTokens(address),"addressToLarePurchased, addressToLarePurchased",True
