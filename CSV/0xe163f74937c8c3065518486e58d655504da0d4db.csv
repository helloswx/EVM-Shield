Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"AidaICO(address,address,address,address,address,address,address,address,address,address)","Company, BountyFund, PartnersFund, TeamFund, Manager, Controller_Address1, Controller_Address2, Controller_Address3, Oracle, RefundManager",False
setRate(uint256),"Rate_Eth, Token_Price, Tokens_Per_Dollar, Rate_Eth",False
startPreIco(),,False
pausePreIco(),,False
finishPreIco(),,False
startIco(),,False
pauseIco(),,False
finishIco(),"AID, AID, BountyFund, AID, PartnersFund, AID, TeamFund, BountyFund, PartnersFund, TeamFund",False
enableTokensTransfer(),AID,False
disableTokensTransfer(),AID,False
"function()externalpayable{require(statusICO==StatusICO.PreIcoStarted||statusICO==StatusICO.IcoStarted);createTokensForEth(msg.sender,msg.value.mul(Token_Price));rememberEther(msg.value,msg.sender);}()",Token_Price,True
"buyForInvestor(address,uint256,string)",,False
getBonus(uint256),,False
startRefunds(),returnPeriodExpired,False
stopRefunds(),returnPeriodExpired,False
returnEther(),"used, returnPeriodExpired, ethPreIco, ethPreIco, tokensPreIco, ethPreIco, tokensPreIco, ethIco, ethIco, tokensIco, ethIco, tokensIco, used, AID",True
"returnOtherCrypto(address,string)","returnPeriodExpired, tokensPreIcoInOtherCrypto, tokensPreIcoInOtherCrypto, tokensIcoInOtherCrypto, tokensIcoInOtherCrypto, AID",False
withdrawEther(),Company,True
AidaToken(address),ico,False
"mintTokens(address,uint256)","totalSupply, totalSupply",False
defrostTokens(),tokensAreFrozen,False
frostTokens(),tokensAreFrozen,False
"burnTokens(address,uint256)","totalSupply, totalSupply",False
balanceOf(address),,False
"transfer(address,uint256)",tokensAreFrozen,True
"transferFrom(address,address,uint256)",tokensAreFrozen,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
