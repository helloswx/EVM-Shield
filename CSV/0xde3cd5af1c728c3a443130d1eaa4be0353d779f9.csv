Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"constructor(uint256,string,string,uint256)","name, symbol, totalSupply_, decimals, balances, totalSupply_, rewardPool_, decimals",True
totalSupply(),totalSupply_,False
rewardPool(),rewardPool_,False
balanceOf(address),balances,False
"allowance(address,address)",allowanceCollection,False
"refer(address,address)","isIcoComplete, referredBy",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowanceCollection, allowanceCollection, allowanceCollection",True
"approve(address,uint256)","allowanceCollection, allowanceCollection",True
"safeApprove(address,uint256,uint256)","allowanceCollection, allowanceCollection",True
setKycHash(bytes32),"isIcoComplete, kycHashes",False
kycApproved(address),"isIcoComplete, kycValidated",False
setKycProvider(address),regulatorApprovedKycProvider,False
setIssuer(address),issuer,False
getKycHash(uint256),kycHashes,False
getKycApproved(uint256),kycValidated,False
"icoTransfer(address,uint256)","isIcoComplete, balances, rewardPool_, balances, rewardPool_, referredBy, referredBy",True
closeIco(),"isIcoComplete, balances, owner, rewardPool_, isIcoComplete, kycHashes, kycValidated",False
mint(uint256),"balances, owner, balances, owner, totalSupply_, totalSupply_",True
burn(uint256),owner,False
"hold(address,uint256)",,False
"constructor(address,uint256)","icoContract, expiry",False
setTokenContract(address),tokenContract,False
setTransferAgent(address),transferAgent,True
setExpiry(uint256),expiry,False
"hold(address,uint256)","expiry, heldTokens",False
"postIcoHold(address,uint256,uint256)","icoContract, heldTokens",True
canRelease(address),heldTokens,False
release(address),"tokenContract, heldTokens, tokenContract, heldTokens",False
"partialRelease(address,address,uint256)","tokenContract, heldTokens, tokenContract, heldTokens",False
"transfer(address,address,uint256)","heldTokens, heldTokens, heldTokens",True
"addTime(address,int)","heldTokens, heldTokens, heldTokens",False
"setAffiliate(address,bool)","heldTokens, heldTokens",False
isExistingHolding(address),heldTokens,False
