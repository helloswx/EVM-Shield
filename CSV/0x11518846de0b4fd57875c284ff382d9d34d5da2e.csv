Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, allOwner",True
addnewOwner(address),"allOwner, owner, allOwner",False
"setNewOwner(address,uint)",owner,False
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"constructor(string,string,uint8,uint256)","name, symbol, decimals",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
burn(uint256),,True
"burnFrom(address,uint256)","allowed, allowed, allowed",True
constructor(),"founderAddress, founderAddress, founderAddress",True
unlockAllTokens(bool),unlockAllTokens,False
"freezeAccount(address,bool)",frozenAccount,False
constructor(),"currentRate, wallet, limitTokenForSale, token",True
changeRate(uint256),currentRate,True
remainTokens(),token,False
finish(),"token, owner",True
"function()publicpayable{assert(msg.value>=50ether);uint256tokens=currentRate.mul(msg.value);uint256bonus=tokens.div(2);uint256totalTokens=tokens.add(bonus);token.transfer(msg.sender,totalTokens);token.freezeAccount(msg.sender,true);wallet.transfer(msg.value);}()","currentRate, token, token, wallet",True
