Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"constructor(string,string,uint8,uint256,uint8,uint8)","owner, accounts, owner, groupPolicyInstance, holders, name, symbol, decimals, summarySupply, transferFeePercent, refererFeePercent",True
servicePause(),"paused, paused",False
serviceUnpause(),"paused, paused",False
"serviceGroupChange(address,uint8)","groupPolicyInstance, accounts, accounts, accounts, accounts",True
serviceTransferOwnership(address),subowner,False
serviceClaimOwnership(),"owner, accounts, owner, accounts, owner, accounts, owner, holders, owner, accounts, accounts, holders, owner, subowner, accounts, accounts, accounts, groupPolicyInstance, groupPolicyInstance, owner",True
serviceSwitchTransferAbility(address),"accounts, accounts, accounts, accounts",True
serviceUpdateTransferFeePercent(uint8),"refererFeePercent, transferFeePercent",True
serviceUpdateRefererFeePercent(uint8),"transferFeePercent, refererFeePercent",True
"serviceSetPromo(bytes,address)",promos,False
"backendSetStatus(address,uint8)","accounts, accounts",False
"backendSetReferer(address,address)","accounts, accounts, accounts",False
"backendSendBonus(address,uint256)","accounts, owner, accounts, owner, accounts, owner, accounts, accounts, owner",False
"backendRefund(address,uint256)","accounts, accounts, accounts, accounts, owner, accounts, owner, accounts, holders, owner, accounts",False
getGroup(address),accounts,False
getHoldersLength(),holders,False
getHolderByIndex(uint256),holders,False
getPromoAddress(bytes),promos,False
getAddressTransferAbility(address),accounts,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)","allowed, allowed",True
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"allowance(address,address)",allowed,False
balanceOf(address),accounts,False
statusOf(address),accounts,False
refererOf(address),accounts,False
totalSupply(),summarySupply,False
settingsSwitchState(),"contractEnable, contractEnable, contractEnable",False
userMigration(uint256),"accounts, accounts, accounts, holders, accounts, owner, accounts, owner, holders, owner, owner",True
"constructor(address,uint256,uint256,uint256,uint256,,uint8,uint8,uint256,bool)","token, startTime, weiPerMinToken, softcap, durationOfStatusSell, statusMinBorders, referalBonusPercent, refererFeePercent, maxRefundStageDuration, isActive, group, groupPolicyInstance",True
"refresh(uint256,uint256,uint256,,uint8,uint8,uint256,bool)","isActive, etherTotal, startTime, softcap, durationOfStatusSell, statusMinBorders, referalBonusPercent, refererFeePercent, version, version, maxRefundStageDuration, isActive, refundStageStartTime, version",True
"transfer(address,uint256)","token, token",True
withdraw(),"isActive, soldOnVersion, version, softcap, refundStageStartTime, maxRefundStageDuration, token, etherTotal",True
activateVersion(bool),"isActive, isActive, refundStageStartTime, isActive, isActive",True
setWeiPerMinToken(uint256),weiPerMinToken,False
refund(),"isActive, soldOnVersion, version, softcap, refundStageStartTime, maxRefundStageDuration, accounts, etherTotal, etherTotal, token, token, token, token, token, version",True
"serviceGroupChange(address,uint8)","group, groupPolicyInstance, group, group",False
"function()externalsaleIsOn()payable{uint256tokenCount=msg.value.div(weiPerMinToken);require(tokenCount>0);token.transfer(msg.sender,tokenCount);updateAccountInfo(msg.sender,msg.value,tokenCount);addressreferer=token.refererOf(msg.sender);if(msg.data.length>0&&referer==address(0)){referer=token.getPromoAddress(bytes(msg.data));if(referer!=address(0)){require(referer!=msg.sender);require(token.backendSetReferer(msg.sender,referer));}}trySendBonuses(msg.sender,referer,tokenCount);}()","weiPerMinToken, token, token, token, token",True
calculateTokenCount(uint256),weiPerMinToken,False
isSelling(),"startTime, soldOnVersion, version, softcap, isActive",False
getGroup(address),group,False
