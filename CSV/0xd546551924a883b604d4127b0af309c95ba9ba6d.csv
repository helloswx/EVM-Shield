Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
OwnerManager(),"owner, manager",True
transferOwnership(address),"owner, owner, newOwner",False
confirmOwnership(),"newOwner, owner, newOwner, owner, newOwner",True
newManager(address),manager,False
Helper(),isHelper,True
"changeHelper(address,bool)",isHelper,False
canDeposit(address),,False
"canTrade(address,address)",,False
"validateTrade(address,address,address)",,False
"registerOptionPair(address,uint256,address,uint256,uint256)",,False
"isOptionPairRegistered(address,uint256,address,uint256,uint256)",,False
register(string),,False
UberDelta(),"feeAccount, owner, sweepAccount, owner, feeByClass, contractLocked, complianceAddress, optionsRegistryAddress",False
function()public{revert();}(),,False
changeNewExchange(address),newExchange,False
changeFeeAccount(address),feeAccount,False
changeSweepAccount(address),sweepAccount,False
"changeClassFee(uint256,uint256)",feeByClass,False
"changeUserClass(address,uint256)",userClass,False
lockContract(bool),contractLocked,False
updateComplianceAddress(address),complianceAddress,False
updateOptionsRegistryAddress(address),optionsRegistryAddress,False
"tokenRestriction(address,bool)",restrictedTokens,False
deposit(),"complianceAddress, balances, balances, globalBalance, globalBalance",True
withdraw(uint256),"balances, balances, globalBalance, globalBalance",True
"depositToken(address,uint256)","complianceAddress, balances, balances, globalBalance, globalBalance",True
"withdrawToken(address,uint256)","balances, balances, globalBalance, globalBalance, balances, balances, globalBalance, globalBalance",True
depositToUser(address),"complianceAddress, balances, balances, globalBalance, globalBalance",True
"depositTokenToUser(address,address,uint256)","complianceAddress, balances, balances, globalBalance, globalBalance",True
"tokenFallback(address,uint256,bytes)","complianceAddress, globalBalance, globalBalance, balances, balances",True
"internalTransfer(address,address,uint256)","balances, complianceAddress, balances, balances, balances, balances",True
"balanceOf(address,address)",balances,False
"sweepTokenAmount(address,uint256)","sweepAccount, balances, sweepAccount, balances, sweepAccount, globalBalance, globalBalance, globalBalance, globalBalance, balances, sweepAccount",True
"order(,)",orders,True
"trade(,,uint8,bytes32,bytes32,uint256,bool)","orderFills, balances, balances, orderFills, feeByClass, userClass, balances, orders, restrictedTokens, complianceAddress, restrictedTokens, complianceAddress, orderFills, orderFills",True
"cancelOrder(,)","orderFills, orderFills",True
"remoteWithdraw(uint256,uint256,uint256,uint256,address,address,uint8,bytes32,bytes32)","balances, complianceAddress, orderFills, orderFills, balances, balances, balances, balances, globalBalance, globalBalance",True
"cancelRemoteWithdraw(uint256,uint256,uint256,uint256,address)","orderFills, orderFills",True
upgrade(address),"newExchange, balances, globalBalance, globalBalance, balances, newExchange, newExchange, newExchange, newExchange",True
"testTrade(,,uint8,bytes32,bytes32,uint256,address,bool)","feeByClass, userClass, contractLocked, restrictedTokens, complianceAddress, restrictedTokens, complianceAddress, balances",True
"availableVolume(,,uint8,bytes32,bytes32)","orders, orderFills, balances, balances",False
getUserFee(address),"feeByClass, userClass",False
"amountFilled(,)",orderFills,False
"testRemoteWithdraw(uint256,uint256,uint256,uint256,address,address,uint8,bytes32,bytes32,address)","contractLocked, balances, orderFills, complianceAddress",True
"getHash(,)",,False
testCanDeposit(address),complianceAddress,False
"testCanTrade(address,address)",complianceAddress,False
"testValidateTrade(address,address,address)",complianceAddress,False
canDeposit(address),,False
"canTrade(address,address)",,False
"validateTrade(address,address,address)",,False
"createOptionPair(address,uint256,address,uint256,uint256,uint256)","balances, balances, balances, balances, balances, balances, globalBalance, globalBalance, balances, balances, globalBalance, globalBalance, optionsRegistryAddress, optionsRegistryAddress",True
"collapseOptionPair(address,uint256,address,uint256,uint256,uint256)","balances, balances, balances, balances, globalBalance, globalBalance, balances, balances, globalBalance, globalBalance, balances, balances, balances, balances",True
"optionExcerciseUnwind(address,uint256,address,uint256,uint256,uint256,bool)","exercisedOptions, restrictedTokens, complianceAddress, balances, balances, balances, balances, exercisedOptions, exercisedOptions, balances, balances, balances, balances, balances, balances",True
"excerciseOption(address,uint256,address,uint256,uint256,uint256)","balances, balances, balances, exercisedOptions, exercisedOptions, balances, balances, balances, balances, balances, balances, balances, balances",True
"expireOption(address,uint256,address,uint256,uint256,uint256)","balances, balances, balances, exercisedOptions, exercisedOptions, exercisedOptions, globalBalance, globalBalance, exercisedOptions, globalBalance, balances, balances, balances, balances, balances, balances, balances, balances",True
"getOptionAddress(address,uint256,address,uint256,uint256,bool)",,False
"testIsOptionPairRegistered(address,uint256,address,uint256,uint256)",optionsRegistryAddress,False
"registerOptionPair(address,uint256,address,uint256,uint256)","restrictedTokens, restrictedTokens, restrictedTokens",False
"isOptionPairRegistered(address,uint256,address,uint256,uint256)",restrictedTokens,False
"getOptionPair(address,uint256,address,uint256,uint256)",,False
EOSRegistration(string),,False
