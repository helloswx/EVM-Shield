Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
transferOwnership(address),"owner, owner",False
halt(),halted,False
unhalt(),halted,False
isPricingStrategy(),,False
isSane(address),,False
isPresalePurchase(address),,False
updateRate(uint),,False
"calculatePrice(uint,uint,uint,address,uint)",,False
isFinalizeAgent(),,False
isSane(),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
invest(address),,False
buy(),,True
distributeReservedTokens(uint),"finalized, finalizeAgent, finalizeAgent",False
areReservedTokensDistributed(),finalizeAgent,False
canDistributeReservedTokens(),,False
finalize(),"finalized, finalizeAgent, finalizeAgent, finalized",False
setFinalizeAgent(),"finalizeAgent, finalizeAgent, finalizeAgent",False
"setEarlyParticipantWhitelist(address,bool,uint,uint)","isWhiteListed, minCap, endsAt, whitelistedParticipants, minCap, minCap, earlyParticipantWhitelist, minCap",False
"setEarlyParticipantWhitelistMultiple(,,,)","isWhiteListed, endsAt",False
"updateEarlyParticipantWhitelist(address,uint)","isWhiteListed, endsAt, earlyParticipantWhitelist, tokenAmountOf, earlyParticipantWhitelist, earlyParticipantWhitelist, earlyParticipantWhitelist",True
isAddressWhitelisted(address),"whitelistedParticipants, whitelistedParticipants",False
whitelistedParticipantsLength(),whitelistedParticipants,False
isTierJoined(address),,False
getTierPosition(address),,False
getLastTier(),"joinedCrowdsalesLen, joinedCrowdsales, joinedCrowdsalesLen",False
updateJoinedCrowdsalesMultiple(),"joinedCrowdsalesLen, joinedCrowdsalesLenMax",False
setEndsAt(uint),"finalized, isUpdatable, startsAt, endsAt, joinedCrowdsalesLen, joinedCrowdsales, crowdsale, endsAt, endsAt",False
setPricingStrategy(),"pricingStrategy, pricingStrategy, pricingStrategy",False
setMultisig(address),"investorCount, MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE, multisigWallet",False
isMinimumGoalReached(),"weiRaised, minimumFundingGoal",False
isFinalizerSane(),finalizeAgent,False
isPricingSane(),pricingStrategy,False
getState(),"finalized, finalizeAgent, finalizeAgent, pricingStrategy, startsAt, endsAt",False
isCrowdsale(),,False
"isBreakingCap(uint,uint,uint,uint)",,False
"isBreakingInvestorCap(address,uint)",,False
isCrowdsaleFull(),,False
isToken(),,False
isUpgradeAgent(),,False
"upgradeFrom(address,uint256)",,False
upgrade(uint256),"totalSupply, totalSupply, totalUpgraded, totalUpgraded, upgradeAgent, upgradeAgent",True
setUpgradeAgent(address),"upgradeMaster, upgradeAgent, upgradeAgent, upgradeAgent, totalSupply, upgradeAgent",True
getUpgradeState(),"upgradeAgent, totalUpgraded",False
setUpgradeMaster(address),"upgradeMaster, upgradeMaster",True
canUpgrade(),,False
setReleaseAgent(address),releaseAgent,False
"setTransferAgent(address,bool)",transferAgents,True
releaseTokenTransfer(),released,False
finalizeReservedAddress(address),reservedTokensList,False
isAddressReserved(address),reservedTokensList,False
areTokensDistributedForAddress(address),reservedTokensList,False
getReservedTokens(address),reservedTokensList,False
getReservedPercentageUnit(address),reservedTokensList,False
getReservedPercentageDecimals(address),reservedTokensList,False
"setReservedTokensListMultiple(,,,)",,False
"mint(address,uint)","totalSupply, totalSupply",False
"setMintAgent(address,bool)",mintAgents,False
releaseTokenTransfer(),mintingFinished,False
canUpgrade(),released,False
claimTokens(address),"token, token, owner, owner",True
"ReservedTokensFinalizeAgent(,)","token, crowdsale",False
isSane(),token,False
distributeReservedTokens(uint),"crowdsale, reservedTokensAreDistributed, distributedReservedTokensDestinationsLen, token, crowdsale, crowdsale, tokensSold, tokensSold, tier, distributedReservedTokensDestinationsLen, token, distributedReservedTokensDestinationsLen, token, token, token, token, token, tokensSold, token, token, token, distributedReservedTokensDestinationsLen, distributedReservedTokensDestinationsLen, token, reservedTokensAreDistributed",True
finalizeCrowdsale(),"crowdsale, token, reservedTokensAreDistributed, token",True
