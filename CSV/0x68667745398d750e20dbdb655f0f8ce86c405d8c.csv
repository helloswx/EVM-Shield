Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Owned(),,True
AcceptsTokens(address),tokenContract,False
"acceptTokens(address,uint256,uint256,uint256,uint256)",,False
ETToken(),"oracle, beneficiary",False
setOracle(address),oracle,False
setBeneficiary(address),beneficiary,False
setHeroContract(address),heroContract,False
"authorizeFloor(uint32,address)",floorContracts,False
"acceptDividends(uint256,uint32)",floorContracts,True
"rewardTokensFloor(address,uint256,uint32)",floorContracts,True
"rewardTokens(address,uint256)",,False
function()payablepublic{}(),,False
"payoutDividends(address,uint256)",,True
accountAuth(uint256),,False
burn(uint256),,True
"setCanAcceptTokens(address,bool)",canAcceptTokens,False
"setIsMinter(address,bool)",isMinter,False
"transferWithParams(address,uint256,uint256,uint256,uint256)",,True
PresaleContract(address),tokenContract,False
"ETPotatoPresale(address,uint256,uint256)","auctionEnd, itemType",False
auctionExpired(),auctionEnd,False
nextBid(),"highestBid, highestBid, highestBid, highestBid, highestBid, highestBid, highestBid, highestBid",False
"function()publicpayable{require(!_isContract(msg.sender));require(!auctionExpired());uint256requiredBid=nextBid();require(msg.value>=requiredBid);uint256change=msg.value.sub(requiredBid);uint256difference=requiredBid.sub(highestBid);uint256reward=difference/4;if(highestBidder!=0x0){highestBidder.transfer(highestBid.add(reward));}if(change>0){msg.sender.transfer(change);}highestBidder=msg.sender;highestBid=requiredBid;emitBid(msg.sender,requiredBid);}()","highestBid, highestBidder, highestBidder, highestBid, highestBidder, highestBid",True
endAuction(),"ended, ended, highestBidder, highestBid, tokenContract, highestBidder, highestBid",True
