Function Name,State Variables Modified,Can Transfer Ether
owned(),owner,True
transferOwnership(address),owner,False
"receiveApproval(address,uint256,address,bytes)",,False
ParsecTokenERC20(),"totalSupply, initialSupply, decimals, balanceOf, totalSupply",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balanceOf, balanceOf, totalSupply",True
"burnFrom(address,uint256)","balanceOf, allowance, balanceOf, allowance, totalSupply",True
"ParsecCrowdsale(address,address,address)","parsecToken, multisigAddress, auditorAddress",False
"function()publicpayable{require(contractPoweredUp);require(contractStarted);require(!contractFinished);require(!contractPaused);require(!contractFailed);require(msg.value>=MINIMUM_PARTICIPATION_AMOUNT);uint256parsecValue=calculateReward(msg.value);uint256maxAcceptableParsecs=PARSECS_TOTAL_AMOUNT.sub(spentParsecs);maxAcceptableParsecs=maxAcceptableParsecs.sub(pendingParsecs);require(parsecValue<=maxAcceptableParsecs);if(kycStatus[msg.sender]==KycState.Undefined){kycStatus[msg.sender]=KycState.Pending;}if(kycStatus[msg.sender]==KycState.Pending){addPendingContribution(msg.sender,msg.value,parsecValue);}elseif(kycStatus[msg.sender]==KycState.Accepted){addAcceptedContribution(msg.sender,msg.value,parsecValue);}else{revert();}}()","contractPoweredUp, contractStarted, contractFinished, contractPaused, contractFailed, MINIMUM_PARTICIPATION_AMOUNT, PARSECS_TOTAL_AMOUNT, spentParsecs, pendingParsecs, kycStatus, kycStatus, kycStatus, kycStatus",True
emergencyWithdrawParsecs(uint256),"parsecToken, parsecToken",True
emergencyRefundContract(),contractFailed,False
emergencyClawbackEther(uint256),"contractFailed, contractRefundStarted, contractRefundFinished",True
ownerSetAuditor(address),auditorAddress,False
ownerPowerUpContract(),"contractPoweredUp, parsecToken, PARSECS_TOTAL_AMOUNT, contractPoweredUp",False
ownerStartContract(),"contractPoweredUp, contractStarted, contractStarted",False
ownerFinishContract(),"contractStarted, contractFinished, contractFinished",False
ownerPauseContract(),"contractStarted, contractFinished, contractPaused, contractPaused",False
ownerResumeContract(),"contractPaused, contractPaused",False
ownerDeclareFailure(),"contractFailed, contractFailed",False
ownerDeclareRefundStart(),"contractFailed, contractRefundStarted, pendingFunding, raisedFunding, contractRefundStarted",False
ownerDeclareRefundFinish(),"contractFailed, contractRefundStarted, contractRefundFinished, contractRefundFinished",False
ownerWithdrawParsecs(uint256),"contractFinished, parsecToken, pendingParsecs, parsecToken, owner",True
acceptKyc(address),"kycStatus, pendingContributionOf, pendingParsecsOf",False
declineKyc(address),"kycStatus, pendingContributionOf",True
participantClawbackEther(uint256),"contractRefundStarted, contractRefundFinished, contributionOf, refundOf, refundOf, refundedFunding, refundedFunding",True
