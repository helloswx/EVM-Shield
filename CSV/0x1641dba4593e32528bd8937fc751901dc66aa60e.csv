Function Name,State Variables Modified,Can Transfer Ether
owned(),owner,True
changeOwner(address),candidate,False
confirmOwner(),"candidate, owner, candidate, candidate",True
balanceOf(address),,False
"transfer(address,uint)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
setVestingManager(address),vestingManager,False
Token(),,False
balanceOf(address),holders,False
"transfer(address,uint256)","vesting, vestingManager, holders, holders, holders, holders, vesting, vesting, vesting, vesting",True
"transferFrom(address,address,uint256)","vesting, holders, holders, allowed, holders, holders, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
burn(uint256),"holders, holders, totalSupply",True
Crowdsale(),"totalSupply, holders, totalSupply",False
"startStage(uint,uint,uint)","started, lastTokenPriceWei, startTokenPriceWei, tokensForSale, tokensForSale, holders, tokensForSale, holders, milliPercent, startTime, started, paymentsCount, stage, started",False
currentTokenPrice(),"sealed, started, startTime, startTokenPriceWei, startTokenPriceWei, milliPercent",False
stopStage(),"started, started, lastTokenPriceWei, stage, started, stage",False
"function()payablepublicnotSealed{require(started);uintprice=currentTokenPrice();if(paymentsCount<100){price=price*90/100;}++paymentsCount;uinttokens=100000000*msg.value/price;if(tokens>tokensForSale){tokens=tokensForSale;uintsumWei=tokens*lastTokenPriceWei/100000000;require(msg.sender.call.gas(3000000).value(msg.value-sumWei)());}require(tokens>0);require(holders[msg.sender].balance+tokens>holders[msg.sender].balance);tokensForSale-=tokens;beforeBalanceChanges(msg.sender);beforeBalanceChanges(this);holders[msg.sender].balance+=tokens;holders[this].balance-=tokens;emitTransfer(this,msg.sender,tokens);}()","started, paymentsCount, paymentsCount, tokensForSale, tokensForSale, lastTokenPriceWei, holders, holders, tokensForSale, holders, holders",True
"mintTokens1(address,uint,uint,bytes32)","owner, backend, started, tokensForSale, tokensForSale, holders, holders, tokensForSale, holders, holders",True
"mintTokens2(address,uint,uint)","owner, backend, started, holders, holders, holders, vesting, holders, holders",True
seal(),sealed,False
Ehfirst(),,False
setBackend(address),backend,False
withdraw(),owner,True
freezeTheMoment(),freezedMoment,False
freezedBalanceOf(address),"holders, freezedMoment, holders, holders",False
