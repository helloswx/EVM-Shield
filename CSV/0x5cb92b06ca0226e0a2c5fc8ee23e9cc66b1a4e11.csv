Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
Owned(),,True
AcceptsTokens(address),tokenContract,False
"acceptTokens(address,uint256,uint256,uint256,uint256)",,False
ETToken(),"oracle, beneficiary",False
setOracle(address),oracle,False
setBeneficiary(address),beneficiary,False
setHeroContract(address),heroContract,False
"authorizeFloor(uint32,address)",floorContracts,False
"acceptDividends(uint256,uint32)",floorContracts,True
"rewardTokensFloor(address,uint256,uint32)",floorContracts,True
"rewardTokens(address,uint256)",,False
function()payablepublic{}(),,False
"payoutDividends(address,uint256)",,True
accountAuth(uint256),,False
burn(uint256),,True
"setCanAcceptTokens(address,bool)",canAcceptTokens,False
"setIsMinter(address,bool)",isMinter,False
"transferWithParams(address,uint256,uint256,uint256,uint256)",,True
PresaleContract(address),tokenContract,False
ETCharPresale_v2(address),,False
priceIncrease(),currentPrice,False
"function()publicpayable{require(enabled);require(!_isContract(msg.sender));require(msg.value>=currentPrice);uint32chars=uint32(msg.value.div(currentPrice));require(chars<=100);if(chars>50){chars=50;}require(currentCharId+chars-1<=maxCharId);uint256purchaseValue=currentPrice.mul(chars);uint256change=msg.value.sub(purchaseValue);_provideChars(msg.sender,chars);if(awardTokens){tokenContract.rewardTokens(msg.sender,purchaseValue*200);}if(currentCharId>maxCharId){enabled=false;}if(change>0){msg.sender.transfer(change);}}()","enabled, currentPrice, currentPrice, currentCharId, maxCharId, currentPrice, awardTokens, tokenContract, currentCharId, maxCharId, enabled",True
setEnabled(bool),enabled,False
setMaxCharId(uint32),maxCharId,False
setCurrentPrice(uint256),currentPrice,False
setAwardTokens(bool),awardTokens,False
withdraw(),,True
charactersOf(address),characters,False
charactersCountOf(address),characters,False
"getCharacter(address,uint256)",characters,False
