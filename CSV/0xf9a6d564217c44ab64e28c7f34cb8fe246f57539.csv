Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
transferOwnershipImmediately(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
symbol(),,False
name(),,False
decimals(),,False
"approveAndCall(address,uint,bytes)",,False
"signedTransferHash(address,address,uint,uint,uint)",,False
"signedTransferCheck(address,address,uint,uint,uint,bytes,address)",,False
"signedTransfer(address,address,uint,uint,uint,bytes,address)",,False
"signedApproveHash(address,address,uint,uint,uint)",,False
"signedApproveCheck(address,address,uint,uint,uint,bytes,address)",,False
"signedApprove(address,address,uint,uint,uint,bytes,address)",,False
"signedTransferFromHash(address,address,address,uint,uint,uint)",,False
"signedTransferFromCheck(address,address,address,uint,uint,uint,bytes,address)",,False
"signedTransferFrom(address,address,address,uint,uint,uint,bytes,address)",,False
"signedApproveAndCallHash(address,address,uint,bytes,uint,uint)",,False
"signedApproveAndCallCheck(address,address,uint,bytes,uint,uint,bytes,address)",,False
"signedApproveAndCall(address,address,uint,bytes,uint,uint,bytes,address)",,False
"mint(address,uint,bool)",,False
unlockAccount(address),,False
disableMinting(),,False
enableTransfers(),,False
name(),,False
getRate(),,False
isInBonusList(address),,False
"constructor(address,address,address,address,address,address,uint,uint,uint,uint,uint,uint,uint)","parcelToken, gzeToken, ethUsdPriceFeed, gzeEthPriceFeed, bonusList, wallet, startDate, endDate, maxParcels, parcelUsd, usdLockAccountThreshold, gzeBonusOffList, gzeBonusOnList",True
setWallet(address),"finalised, wallet, wallet",False
setStartDate(uint),"finalised, startDate, startDate",False
setEndDate(uint),"finalised, startDate, endDate, endDate",False
setMaxParcels(uint),"finalised, parcelsSold, maxParcels, maxParcels",False
setParcelUsd(uint),"finalised, parcelUsd, parcelUsd",False
setUsdLockAccountThreshold(uint),"finalised, usdLockAccountThreshold, usdLockAccountThreshold",False
setGzeBonusOffList(uint),"finalised, gzeBonusOffList, gzeBonusOffList",False
setGzeBonusOnList(uint),"finalised, gzeBonusOnList, gzeBonusOnList",False
symbol(),parcelToken,False
name(),parcelToken,False
ethUsd(),ethUsdPriceFeed,False
gzeEth(),gzeEthPriceFeed,False
gzeUsd(),"ethUsdPriceFeed, gzeEthPriceFeed, TENPOW18",False
parcelEth(),"parcelUsd, TENPOW18",False
parcelGzeWithoutBonus(),"parcelUsd, TENPOW18",False
parcelGzeWithBonusOffList(),gzeBonusOffList,False
parcelGzeWithBonusOnList(),gzeBonusOnList,False
purchaseWithGze(uint256),"gzeToken, gzeToken",True
"receiveApproval(address,uint256,address,bytes)","startDate, endDate, gzeToken, bonusList, parcelsSold, maxParcels, maxParcels, parcelsSold, contributedGze, contributedGze, wallet, parcelsSold, contributedGze, contributedEth",True
"function()publicpayable{require(now>=startDate&&now<=endDate);uint_parcelEth;bool_live;(_parcelEth,_live)=parcelEth();require(_live);uintparcels=msg.value.div(_parcelEth);if(parcelsSold.add(parcels)>=maxParcels){parcels=maxParcels.sub(parcelsSold);}uintethToTransfer=parcels.mul(_parcelEth);contributedEth=contributedEth.add(ethToTransfer);uintethToRefund=msg.value.sub(ethToTransfer);if(ethToRefund>0){msg.sender.transfer(ethToRefund);}boollock=mintParcelTokens(msg.sender,parcels);emitPurchased(msg.sender,parcels,0,ethToTransfer,parcelsSold,contributedGze,contributedEth,lock);}()","startDate, endDate, parcelsSold, maxParcels, maxParcels, parcelsSold, contributedEth, contributedEth, parcelsSold, contributedGze, contributedEth",True
"offlinePurchase(address,uint)","finalised, parcelsSold, maxParcels, maxParcels, parcelsSold, parcelsSold, contributedGze, contributedEth",False
finalise(),"finalised, endDate, parcelsSold, maxParcels, parcelToken, finalised",False
