Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
reclaimContract(address),owner,True
reclaimToken(),"token, token, owner",False
"tokenFallback(address,uint256,bytes)",,False
Destructible(),,False
destroy(),owner,False
destroyAndSend(address),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)","totalSupply, totalSupply",False
finishMinting(),mintingFinished,False
"TokenVesting(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"function()publicpayable{if(msg.value>0){BurnRewardIncreased(msg.sender,msg.value);}}()",,True
burnReward(uint256),totalSupply,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowed, allowed",True
init(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
DNTXCrowdsale(),"state, token, token, owner",False
"function()publicpayable{require(msg.value>0);require(isOpen());totalCollected=totalCollected.add(msg.value);if(state==State.ICO){require(totalCollected<=hardCap);icoCollected=icoCollected.add(msg.value);icoContributions[msg.sender]=icoContributions[msg.sender].add(msg.value);}uint256rate=currentRate();assert(rate>0);uint256amount=rate.mul(msg.value);assert(token.mint(msg.sender,amount));}()","totalCollected, totalCollected, state, totalCollected, hardCap, icoCollected, icoCollected, icoContributions, icoContributions, token",True
"mintTokens(address,uint256,string)","token, beneficiary, beneficiary",False
isOpen(),"baseRate, state, state, state, state, totalCollected, hardCap, icoStartTimestamp, icoEndTimestamp",False
currentRate(),"state, baseRate, baseRate, preICOBonusPercent, PERCENT_DIVIDER, state, icoBonuses, icoBonuses, baseRate, baseRate, PERCENT_DIVIDER, baseRate",False
setBaseRate(uint256),"state, state, baseRate",False
setPreICOBonus(uint8),preICOBonusPercent,False
"setupAndStartPreICO(uint256,uint8)",,False
"setupICO(uint32,uint32,uint256,uint256,,)","state, state, icoStartTimestamp, icoEndTimestamp, icoGoal, hardCap, icoBonuses",False
startPreICO(),"state, baseRate, state",False
finishPreICO(),"state, icoStartTimestamp, icoEndTimestamp, state",False
finalizeCrowdsale(),"state, token, token, owner, icoCollected, icoGoal",True
claimEther(),"state, icoCollected, icoGoal, owner",True
refund(),,True
refundTo(address),"icoCollected, icoGoal, icoContributions, beneficiary, state, state, icoEndTimestamp, icoContributions, beneficiary, icoContributions, beneficiary, beneficiary",True
