Function Name,State Variables Modified,Can Transfer Ether
constructor(),deployer,True
"transferERC20Token(,address,uint256)",deployer,True
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
owner(),,False
transferOwnership(address),,False
acceptOwnership(),,False
setOwner(address),,False
"constructor(,address)","pegInstance, owner",False
setOwner(address),owner,False
setRawDebt(uint),rawDebt,False
setTotalBorrowed(uint),totalBorrowed,False
setTimestamp(uint256),timestamp,False
"payoutPEG(address,uint)",pegInstance,True
burnPEG(uint),pegInstance,False
"transferERC20Token(,address,uint256)",,True
getValue(),,False
disableTransfers(bool),,False
"issue(address,uint256)",,False
"destroy(address,uint256)",,False
"constructor(,)","pegNetworkToken, pegInstance",False
newVault(),"pegInstance, pegInstance",True
getTotalCredit(),"pegInstance, pegNetworkToken, pegInstance",False
getAvailableCredit(),,False
"borrow(,uint256)","pegInstance, pegInstance",True
"repay(,uint256)","pegInstance, pegInstance",True
requiredCollateral(),"pegInstance, pegInstance",False
getExcessCollateral(),pegNetworkToken,False
liquidate(),"pegInstance, pegInstance, pegNetworkToken, pegInstance, pegInstance",True
reportPriceToTargetValue(bool),"pegInstance, pegInstance, pegInstance, pegInstance, pegInstance, pegInstance, pegInstance, pegInstance",False
debtRawToActual(uint256),pegInstance,False
debtActualToRaw(uint256),pegInstance,False
"withdrawExcessCollateral(,address,uint256)",pegInstance,True
actualDebt(),,False
constructor(),"pegNetworkToken, authorized",True
setDebtToken(),"debtToken, debtToken",False
setOracle(),"oracle, oracle",False
setPegLogic(),"pegLogic, authorized, authorized, pegLogic, pegLogic",False
"authorize(address,bool)",authorized,False
setLiquidationRatio(uint32),"liquidationRatio, liquidationRatio",False
setMaxBorrowLTV(uint32),"maxBorrowLTV, maxBorrowLTV",False
setDebtTokenScalingRate(int256),"debtTokenScalingPerBlock, lastDebtTokenScalingFactor, lastDebtTokenScalingRetarget, debtTokenScalingPerBlock",False
setDebtScalingRate(int256),"debtScalingPerBlock, lastDebtScalingFactor, lastDebtScalingRetarget, debtScalingPerBlock",False
setAmountMinted(uint),amountMinted,False
"addNewVault(,address)","vaults, vaultExists",False
"emitBorrow(,uint256)",,False
"emitRepay(,uint256)",,False
"emitWithdraw(,uint256)",,False
emitLiquidateVault(),,False
getVaults(),vaults,False
debtTokenScalingFactor(),"lastDebtTokenScalingFactor, debtTokenScalingPerBlock, lastDebtTokenScalingRetarget",False
debtScalingFactor(),"lastDebtScalingFactor, debtScalingPerBlock, lastDebtScalingRetarget",False
"transferERC20Token(,address,uint256)",,True
"constructor(string,string,)","name, symbol, pegInstance",False
rawToActual(uint256),pegInstance,False
actualToRaw(uint256),pegInstance,False
balanceOf(address),rawBalance,False
totalSupply(),rawTotalSupply,False
"allowance(address,address)",rawAllowance,False
"transfer(address,uint256)","rawBalance, rawBalance, rawBalance, rawBalance",True
"transferFrom(address,address,uint256)","rawAllowance, rawAllowance, rawBalance, rawBalance, rawBalance, rawBalance",True
"approve(address,uint256)","rawAllowance, rawAllowance",True
"issue(address,uint256)","rawTotalSupply, rawTotalSupply, rawBalance, rawBalance",False
"destroy(address,uint256)","rawBalance, rawBalance, rawTotalSupply, rawTotalSupply",False
setName(string),name,False
setSymbol(string),symbol,False
"transferERC20Token(,address,uint256)",pegInstance,True
