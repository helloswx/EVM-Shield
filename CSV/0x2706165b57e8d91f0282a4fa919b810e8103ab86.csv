Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),totalSupply_,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
balanceOf(address),balances,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","balances, allowed, balances, balances, balances, balances, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)","totalSupply_, totalSupply_, balances, balances",False
finishMinting(),mintingFinished,False
burn(uint256),,True
compute(),,False
pause(),paused,False
unpause(),paused,False
"constructor(address,address,address,uint8,uint8,uint32)","helbizToken, babyloniaToken, ethPriceOracle, exchangeRate, usdCentsExchangeRate, exchangeLockTime, paused, tokenExchanges",False
"function()publicpayable{require(msg.value==0,""not accepting ETH"");}()",,False
withdrawHBZ(address),"helbizToken, helbizToken",True
withdrawETH(address),,True
"withdrawBBY(address,uint)",babyloniaToken,True
burnRemainderBBY(),"babyloniaToken, babyloniaTokensLocked, babyloniaToken",False
setExchangeRate(uint8),exchangeRate,False
setUSDCentsExchangeRate(uint8),usdCentsExchangeRate,False
setExchangeLockTime(uint32),exchangeLockTime,False
setEthExchangeEnabled(bool),ethExchangeEnabled,False
getTokenAddress(),babyloniaToken,False
exchangeTokens(uint),"MIN_EXCHANGE_BBY, exchangeRate, babyloniaToken, babyloniaTokensLocked, helbizToken",True
exchangeEth(uint),"ethPriceOracle, usdCentsExchangeRate, babyloniaToken, babyloniaTokensLocked",True
claimTokens(),"tokenExchanges, activeTokenExchanges, babyloniaTokensLocked, babyloniaTokensLocked, tokenExchanges, activeTokenExchanges, activeTokenExchanges, babyloniaToken",True
getActiveTokenExchangeId(),activeTokenExchanges,True
getActiveTokenExchangeById(uint),"tokenExchanges, tokenExchanges",False
getTokenExchangesCount(),tokenExchanges,False
