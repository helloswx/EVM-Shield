Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
balanceOf(address),,False
"transfer(address,uint256)",,False
HalloweenCollectorToken(),"token_airdrop_cnt_max, token_airdrop_amount_each, token_swap_supply, time_of_token_swap_start, time_of_token_swap_end, time_of_token_swap_start, TOKEN_SWAP_DURATION_HOURS, airdrop_cnt",True
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
"function()publicpayablepurchaseAllowed{if(msg.value==0){if(airdrop_cnt>=token_airdrop_cnt_max||is_airdropped[msg.sender]){return;}else{airdrop_cnt++;is_airdropped[msg.sender]=true;balances[owner]=safeSub(balances[owner],token_airdrop_amount_each);balances[msg.sender]=safeAdd(balances[msg.sender],token_airdrop_amount_each);Transfer(address(this),msg.sender,token_airdrop_amount_each);}}else{uint256tokenRequested=msg.value/ether_per_token;assert(tokenRequested>0&&tokenRequested<=balances[owner]);uint256cost=safeMul(tokenRequested,ether_per_token);uint256change=safeSub(msg.value,cost);owner.transfer(cost);msg.sender.transfer(change);balances[owner]=safeSub(balances[owner],tokenRequested);balances[msg.sender]=safeAdd(balances[msg.sender],tokenRequested);Transfer(address(this),msg.sender,tokenRequested);}}()","airdrop_cnt, token_airdrop_cnt_max, airdrop_cnt, token_airdrop_amount_each, token_airdrop_amount_each, token_airdrop_amount_each, ether_per_token, ether_per_token",True
withdrawForeignTokens(address),,True
