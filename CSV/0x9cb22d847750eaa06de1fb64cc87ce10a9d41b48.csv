Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner",True
"constructor(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"constructor(uint256,string,uint8,string,bool)","standard, name, symbol, decimals",True
"constructor(uint256,uint256,bool)","maxSupply, allowedMinting, mintingAgents",True
"mint(address,uint256)","allowedMinting, maxSupply, maxSupply, allowedMinting",False
disableMinting(),allowedMinting,False
"updateMintingAgent(address,bool)",mintingAgents,False
"updateStateChangeAgent(address,bool)",stateChangeAgents,False
availableTokens(),maxSupply,False
burn(uint256),,True
"constructor(uint256,uint256,bool)",,False
"updateBurnAgent(address,bool)",burnAgents,False
"burnByAgent(address,uint256)",,False
constructor(uint256),time,False
"updateExcludedAddress(address,bool)",,False
constructor(uint256),,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
constructor(uint256),,False
setUnlockTime(uint256),time,False
setIsSoftCapAchieved(),isSoftCapAchieved,False
setCrowdSale(address),crowdsale,False
"updateExcludedAddress(address,bool)",excludedAddresses,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
isTransferAllowed(address),"excludedAddresses, isSoftCapAchieved, crowdsale, crowdsale",False
burnUnsoldTokens(uint256),"maxSupply, maxSupply, maxSupply",False
isInitialized(),,False
constructor(),"crowdsale, _isInitialized, _isInitialized",False
isInitialized(),_isInitialized,False
"onContribution(address,uint256,uint256,uint256)",,False
onStateChange(),,False
"onRefund(address,uint256)",,False
"constructor(,)","token, _isInitialized, _isInitialized",False
isInitialized(),_isInitialized,False
"onContribution(address,uint256,uint256,uint256)",,False
onStateChange(),,False
"constructor(,,)","strategy, crowdsale",False
"onContribution(address,uint256,uint256,uint256)",strategy,False
onStateChange(),"token, crowdsale, burnStatus, strategy, burnStatus",False
"onRefund(address,uint256)",token,False
updateLockPeriod(uint256),"strategy, token",True
addCrowdsales(address),crowdsales,False
removeCrowdsales(address),crowdsales,False
isInitialized(),,False
"allocate(address,uint256)",,False
tokensAvailable(),,False
constructor(),token,False
setToken(),token,False
isInitialized(),token,False
tokensAvailable(),token,False
isInitialized(),,False
forward(),weiCollected,False
"constructor(uint256,,)","proportionAbsMax, receivers, proportionAbsMax, isInitialized_",False
isInitialized(),isInitialized_,False
"externalContribution(address,uint256)",,False
"contribute(uint8,bytes32,bytes32)",,False
getState(),,False
updateState(),,False
"constructor(,,,uint256,uint256,bool,bool,bool)","allocator, contributionForwarder, pricingStrategy, startDate, endDate, allowWhitelisted, allowSigned, allowAnonymous, currentState",False
"function()publicpayable{require(allowWhitelisted||allowAnonymous);if(!allowAnonymous){if(allowWhitelisted){require(whitelisted[msg.sender]);}}internalContribution(msg.sender,msg.value);}()","allowWhitelisted, allowAnonymous, allowAnonymous, allowWhitelisted, whitelisted",True
setCrowdsaleAgent(),crowdsaleAgent,False
"externalContribution(address,uint256)",externalContributionAgents,True
addExternalContributor(address),externalContributionAgents,False
removeExternalContributor(address),externalContributionAgents,False
"updateWhitelist(address,bool)",whitelisted,False
addSigner(address),signers,False
removeSigner(address),signers,False
"contribute(uint8,bytes32,bytes32)",signers,True
"verify(address,uint8,bytes32,bytes32)",,True
getState(),"finalized, allocator, contributionForwarder, pricingStrategy, startDate, startDate, endDate, endDate",False
updateState(),"currentState, crowdsaleAgent, crowdsaleAgent, currentState",False
"constructor(,,,uint256,uint256,bool,bool,bool,uint256)",hardCap,False
getState(),,False
isHardCapAchieved(uint256),"hardCap, tokensSold",False
"constructor(,,,uint256,uint256,bool,bool,bool,uint256,uint256)",softCap,False
getState(),isSoftCapAchieved,False
isSoftCapAchieved(uint256),"softCap, tokensSold",False
refund(),,True
delegatedRefund(address),,False
"constructor(,,,uint256,uint256)",,False
updateState(),"startDate, endDate, pricingStrategy",False
claimBonuses(),"isSoftCapAchieved, contributorBonuses, contributorBonuses, contributorBonuses, allocator",True
addExternalContributor(address),,False
isHardCapAchieved(uint256),"hardCap, usdCollected",False
isSoftCapAchieved(uint256),"softCap, usdCollected",False
isInitialized(),,False
"getTokens(address,uint256,uint256,uint256,uint256)",,False
"getWeis(uint256,uint256,uint256)",,False
"constructor(,,uint256,uint256)","decimals, etherPriceInUSD, tiers, tiers",False
getTierIndex(),"tiers, tiers, tiers, tiers, tiers, tiers",False
getActualTierIndex(),"tiers, tiers, tiers, tiers, tiers, tiers, tiers",False
getActualDates(),"startDate, tiers, endDate, tiers",False
getTokensWithoutRestrictions(uint256),etherPriceInUSD,False
"getTokens(address,uint256,uint256,uint256,uint256)","tiers, etherPriceInUSD, tiers, etherPriceInUSD, tiers, tiers",False
"getWeis(uint256,uint256,uint256)","tiers, tiers, tiers, etherPriceInUSD, tiers, etherPriceInUSD",False
"calculateBonusAmount(uint256,uint256)","tiers, tiers, tiers, tiers, tiers, tiers, tiers",False
getTokensInUSD(uint256),"tiers, tiers",False
getDiscount(uint256),"tiers, tiers",False
getMinEtherInvest(uint256),"tiers, tiers, etherPriceInUSD",False
getUSDAmount(uint256),etherPriceInUSD,False
isInitialized(),,False
"updateDates(uint8,uint256,uint256)","tiers, tiers",False
"constructor(,uint256)","tiers, tiers, tiers, tiers, tiers, tiers, tiers, tiers, tiers, tiers",False
getArrayOfTiers(),"tiers, tiers, tiers, tiers, tiers, tiers, tiers, tiers",False
"updateTier(uint256,uint256,uint256,uint256,uint256,uint256,,bool)","tiers, agent, tiers",False
setCrowdsaleAgent(),agent,False
"updateTierState(uint256,uint256,uint256)","agent, tiers, tiers, tiers, tiers",True
getTierUnsoldTokens(uint256),"tiers, tiers, tiers, tiers",False
getUnsoldTokens(),tiers,False
getCapsData(uint256),"tiers, tiers",False
"constructor(uint256,address,address,bool)","totalSupply, totalSupply, unLimited, allocator, crowdsale, sentOnce",False
setAllocator(address),allocator,False
setCrowdsale(address),crowdsale,False
"multivestMint(address,uint256,uint8,bytes32,bytes32)","crowdsale, sentOnce, claimed, claimed, unLimited, totalSupply, claimedBalances, claimedBalances, unLimited, totalSupply, totalSupply, allocator",True
"verify(address,uint256,uint8,bytes32,bytes32)",,True
"constructor(address,address)",,False
"multivestMint(address,uint256,uint8,bytes32,bytes32)",crowdsale,False
"constructor(,,,)","token, allocator, crowdsale, pricing",False
"getTokens(uint256,uint256)",pricing,False
"getWeis(uint256,uint256)",pricing,False
"getStats(uint256,)",,False
getTiersData(uint256),"pricing, tiers, tiers, tiers, tiers, tiers, tiers, tiers",False
getStatsData(uint256),"token, token, crowdsale, crowdsale, crowdsale, pricing, pricing, pricing",False
"getCurrencyContrData(uint256,)",pricing,False
"constructor(address,uint256,uint256,uint256,uint256,bool,address)","periods, unreleasedHolder",False
vestedAmount(),"token, released, token, cliff, start, duration, periods, revoked, token, periods, start, duration, periods",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, unreleasedHolder",False
"constructor(address,address)","bountyAddress, treasuryAddress",False
setICOEndTime(uint256),icoEndTime,False
"allocateBounty(,)","isBountySent, icoEndTime, isBountySent, bountyAddress, BOUNTY_TOKENS",False
allocateTreasury(),"icoEndTime, isBountySent, isTeamSent, MAX_TREASURY_TOKENS, treasuryAddress",False
"createVesting(address,uint256,uint256,uint256,uint256,bool,address,,uint256)","icoEndTime, isTeamSent, vestings",False
"revokeVesting(,)",token,False
