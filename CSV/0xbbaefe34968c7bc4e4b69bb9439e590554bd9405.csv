Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
pause(),paused,False
unpause(),paused,False
"constructor(,address)",,False
numberOfSupportedTokens(),,False
getSupportedTokenByIndex(uint),supportedTokensMapping,False
getMarketDataByTokenIdx(uint),,False
getMarketData(address),"supportedTokensMapping, currentTokenMarketData",False
addSupportedToken(address),"supportedTokensMapping, currentTokenMarketData",False
isTokenSupported(address),supportedTokensMapping,False
"updateMarketData(address,uint,uint,uint)",currentTokenMarketData,False
"constructor(address,uint256,address,uint)","cdtTokenAddress, minCDTToParticipate, marketDataOracle",False
"function()public{revert(""Please do not send ETH without calling the deposit function. We will not do it automatically to validate your intent"");}()",,True
isActiveUser(address),activeUsers,False
deposit(),"tokens, tokens, tokens",True
"depositToken(address,uint)","tokens, tokens, tokens",True
withdraw(uint),"tokens, tokens, tokens",True
"withdrawToken(address,uint)","tokens, tokens, tokens",True
"balanceOf(address,address)",tokens,False
setMaxAttackPrizePercent(uint),maxAttackPrizePercent,False
setMaxOpenAttacks(uint),maxOpenAttacks,False
openAttacksCount(address),cntUserAttacks,False
isTokenSupported(address),marketDataOracle,False
getUserScore(address),"marketDataOracle, marketDataOracle",False
attack(address),"userToUserToAttackId, maxOpenAttacks, maxOpenAttacks, attackIdToInfo",True
attackPrizeRatio(address),,True
"attackerPrizeByToken(bytes32,address)",attackIdToInfo,False
"attackeePrizeByToken(bytes32,address)",attackIdToInfo,False
completeAttack(bytes32),"attackIdToInfo, marketDataOracle, marketDataOracle, tokens, tokens, tokens, tokens, tokens, tokens, tokens, tokens",False
getWinner(bytes32),attackIdToInfo,False
