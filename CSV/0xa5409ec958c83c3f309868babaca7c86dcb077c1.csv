Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
renounceOwnership(),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"receiveApproval(address,uint256,address,bytes)",,True
"function()payablepublic{emitReceivedEther(msg.sender,msg.value);}()",,True
startGrantAuthentication(address),"contracts, pending, pending",False
endGrantAuthentication(address),"contracts, pending, pending, DELAY_PERIOD, pending, contracts",False
revokeAuthentication(address),contracts,False
registerProxy(),"proxies, delegateProxyImplementation, proxies",True
constructor(),delegateProxyImplementation,False
grantInitialAuthentication(address),"initialAddressSet, initialAddressSet, contracts",False
upgradeabilityOwner(),_upgradeabilityOwner,False
implementation(),_implementation,False
proxyType(),,False
"initialize(address,)","user, registry",False
setRevoke(bool),"user, revoked",True
"proxy(address,,bytes)","user, revoked, registry",True
"proxyAssert(address,,bytes)",,True
implementation(),,False
proxyType(),,False
"function()payablepublic{address_impl=implementation();require(_impl!=address(0));assembly{letptr:=mload(0x40)calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,_impl,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}default{return(ptr,size)}}}()",,True
proxyOwner(),,False
transferProxyOwnership(address),,False
upgradeTo(address),,False
"upgradeToAndCall(address,bytes)",,True
"constructor(address,address,bytes)",owner,True
