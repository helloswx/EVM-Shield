Function Name,State Variables Modified,Can Transfer Ether
"ceil(uint,uint)",,False
"isAdjacent(uint8,uint8,uint8,uint8)",,False
"toTileId(uint8,uint8)",,False
fromTileId(uint16),,False
"getBoostFromTile(address,address,address,uint)",,False
"transfer(address,uint256)",,False
balanceOf(address),,False
constructor(address),"bwData, owner",True
function()payablepublic{revert();}(),,False
kill(),owner,False
setValidBwCaller(address),bw,False
setValidBwMarketCaller(address),bwMarket,False
setWithdrawFee(uint),WITHDRAW_FEE,False
setAttackFee(uint),ATTACK_FEE,False
setAttackBoostMultipler(uint),ATTACK_BOOST_MULTIPLIER,False
setDefendBoostMultiplier(uint),DEFEND_BOOST_MULTIPLIER,False
setAttackBoostCap(uint),ATTACK_BOOST_CAP,False
setDefendBoostCap(uint),DEFEND_BOOST_CAP,False
"storeInitialClaim(address,,uint,bool)","bwData, bwData",False
"fortifyClaims(address,,uint,bool)",bwData,False
"attackTile(address,uint16,uint,bool)","bwData, owner, bwData, ATTACK_BOOST_MULTIPLIER, DEFEND_BOOST_MULTIPLIER, ATTACK_BOOST_CAP, ATTACK_BOOST_CAP, DEFEND_BOOST_CAP, DEFEND_BOOST_CAP, ATTACK_FEE, bwData, bwData, bwData",False
"moveBlockValue(address,uint8,uint8,uint8,uint8,uint)","bwData, bwData, bwData, bwData, bwData, bwData, bwData",False
"verifyAmount(address,uint,uint,bool)",bwData,False
"setLocalGame(uint16,address)",localGames,False
getLocalGame(uint16),localGames,False
"withdrawBattleValue(address,uint)","WITHDRAW_FEE, bwData, feeBalance, feeBalance, bwData, feeBalance",False
"addUserBattleValue(address,uint)","bwData, bwData",False
"subUserBattleValue(address,uint,bool)","bwData, bwData",False
addGlobalBlockValueBalance(uint),"bwData, bwData, blockValueBalance",False
subGlobalBlockValueBalance(uint),"bwData, bwData, blockValueBalance",False
"transferTokens(address,address)",,True
constructor(),owner,True
function()payablepublic{revert();}(),,False
kill(),owner,False
setBwServiceValidCaller(address),bwService,False
setBwValidCaller(address),bw,False
setBwMarketValidCaller(address),bwMarket,False
addUser(address),users,False
hasUser(address),users,False
getTile(uint16),tiles,False
getTileClaimerAndBlockValue(uint16),tiles,False
isNewTile(uint16),tiles,False
"storeClaim(uint16,address,uint)",tiles,False
"updateTileBlockValue(uint16,uint)",tiles,False
"setClaimerForTile(uint16,address)",tiles,False
updateTileTimeStamp(uint16),tiles,False
getCurrentClaimerForTile(uint16),tiles,False
getCurrentBlockValueAndSellPriceForTile(uint16),tiles,False
getBlockValueBalance(),blockValueBalance,False
setBlockValueBalance(uint),blockValueBalance,False
getFeeBalance(),feeBalance,False
setFeeBalance(uint),feeBalance,False
getUserBattleValue(address),users,False
"setUserBattleValue(address,uint)",users,False
"verifyAmount(address,uint,uint,bool)",users,False
"calculateBattleBoost(uint16,address,address)","tiles, tiles, tiles, tiles, tiles, tiles, tiles, tiles",False
"censorUser(address,bool)",users,False
deleteTile(uint16),tiles,False
"setSellPrice(uint16,uint)",tiles,False
deleteOffer(uint16),tiles,False
getBountyBalance(),,False
"getTimeLeftToNextCollect(address,uint)",,False
"collectBounty(address,uint,uint)",,False
balanceOf(address),,False
ownerOf(uint256),,False
"safeTransferFrom(address,address,uint256)",,False
"addPrize(uint16,address,uint,uint,uint)",prizes,False
"removePrize(uint16,address,uint)",prizes,False
"claimPrize(address,uint16)","prizes, bwData",True
"constructor(address,address)","bwService, bwData, owner",True
function()payablepublicisOwner{}(),,False
"claimTilesForNewUser(bytes32,bytes,bytes32,bytes32,,address)","bwData, bwService",True
"claimTilesForExistingUser(,uint,bool)","bwService, bwService",True
"updateUser(bytes32,bytes,bytes32,bytes32)",bwData,True
"fortifyClaims(,uint,bool)","bwService, bwService",True
"attackTileForNewUser(uint16,bytes32,bytes,bytes32,bytes32,address)","bwData, bwService",True
"attackTileForExistingUser(uint16,uint,bool)","bwService, bwService",True
"moveBlockValue(uint8,uint8,uint8,uint8,uint)",bwService,True
withdrawBattleValue(uint),bwService,True
"transferBlockValueToBattleValue(uint16,uint)","bwData, bwData, bwData, bwData, BV_TO_BP_FEE, bwData, feeBalance, feeBalance, bwData, feeBalance, bwService, bwService",True
getLocalBountyBalance(uint16),bwService,False
getTimeLeftToNextLocalBountyCollect(uint16),"bwService, bwData",False
"collectLocalBounty(uint16,uint)","bwService, bwData",True
"createNewUser(bytes32,bytes,bytes32,bytes32,address)",bwData,True
"censorUser(address,bool)",bwData,False
setPaused(bool),paused,False
kill(),owner,False
withdrawFee(),"bwData, bwData, owner",True
getFee(),bwData,False
setBvToBpFee(uint),BV_TO_BP_FEE,False
depositBattleValue(address),bwService,False
"transferTileFromOwner(,address)","bwData, owner, bwData",True
"transferTokens(address,address)",,True
