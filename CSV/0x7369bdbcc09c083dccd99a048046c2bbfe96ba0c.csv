Function Name,State Variables Modified,Can Transfer Ether
"function()publicpayable{if(msg.value>0)emitDeposit(msg.sender,msg.value);}()",,True
"constructor(,uint)","isOwner, isOwner, owners, required",False
addOwner(address),"isOwner, owners",False
removeOwner(address),"isOwner, owners, owners, owners, owners, owners, owners, required, owners, owners",False
"replaceOwner(address,address)","owners, owners, owners, isOwner, isOwner",False
changeRequirement(uint),required,False
"submitTransaction(address,uint,bytes)",,False
confirmTransaction(uint),confirmations,True
revokeConfirmation(uint),confirmations,True
executeTransaction(uint),"transactions, transactions, transactions, transactions, transactions",True
isConfirmed(uint),"owners, confirmations, owners, required",False
getConfirmationCount(uint),"owners, confirmations, owners",False
"getTransactionCount(bool,bool)","transactionCount, transactions, transactions",False
getOwners(),owners,False
getConfirmations(uint),"owners, owners, confirmations, owners, owners",False
"getTransactionIds(uint,uint,bool,bool)","transactionCount, transactionCount, transactions, transactions",False
"tokenFallback(address,uint,bytes)",,False
"tokenFallbackBuyer(address,uint,address)",,False
"tokenFallbackExchange(address,uint,uint)",,False
burnTokens(address),,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(address,address,address)","escrow, namiMultiSigWallet, namiPresale",False
"transferForTeam(address,uint256)",,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
changeTransferable(),"TRANSFERABLE, TRANSFERABLE",False
changeEscrow(address),escrow,False
changeBinary(uint),binary,False
changeBinaryAddress(address),binaryAddress,False
getPrice(),binary,False
function()payablepublic{buy(msg.sender);}(),,True
buy(address),"currentPhase, binaryAddress, totalSupply, TOKEN_SUPPLY_LIMIT, balanceOf, balanceOf, totalSupply, totalSupply",True
burnTokens(address),"currentPhase, balanceOf, balanceOf, totalSupply, crowdsaleManager, totalSupply, currentPhase",False
setPresalePhase(),"currentPhase, currentPhase, currentPhase, currentPhase, crowdsaleManager, currentPhase, currentPhase, totalSupply, currentPhase",False
withdrawEther(uint),"namiMultiSigWallet, namiMultiSigWallet",True
"safeWithdraw(address,uint)",namiMultiSigWallet,True
setCrowdsaleManager(address),"currentPhase, crowdsaleManager",False
"migrateToken(address,address)",,False
migrateForInvestor(),,True
"transferToExchange(address,uint,uint)","balanceOf, balanceOf, balanceOf, balanceOf",True
"transferToBuyer(address,uint,address)","balanceOf, balanceOf, balanceOf, balanceOf",True
"constructor(address,address,address)","escrow, namiMultiSigWallet, NamiAddr",False
setController(address),"isController, isController",False
removeController(address),"isController, isController",False
changeMinNac(uint),minNac,False
changeEscrow(address),escrow,False
changeMinWithdraw(uint),minWithdraw,False
changeMaxWithdraw(uint),maxWithdraw,False
withdrawEther(uint),"namiMultiSigWallet, namiMultiSigWallet",True
withdrawNac(uint),"namiMultiSigWallet, NamiAddr, namiMultiSigWallet",True
addNacToNetf(uint),"NetfBalance, NetfBalance",False
removeNacFromNetf(uint),"NetfBalance, NetfBalance",False
changePause(),"isPause, isPause",False
"updatePriceFci(uint,uint)","timeExpires, priceFci, timeExpires",False
"buyFci(address,uint)","isPause, timeExpires, fciDecimals, priceFci, fciDecimals, priceFci, balanceOf, balanceOf, totalSupply, totalSupply, NetfBalance, NetfBalance",False
placeSellFciOrder(uint),balanceOf,True
"sellFci(address,uint)","isPause, timeExpires, priceFci, fciDecimals, priceFci, fciDecimals, balanceOf, balanceOf, totalSupply, totalSupply, NetfBalance, NetfBalance, NamiAddr",True
openNetfRevenueRound(uint),"NetfRevenue, currentNetfRound, NetfRevenue",False
depositNetfRevenue(uint),"NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound",False
withdrawNetfRevenue(uint),"NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound, NetfRevenue, currentNetfRound",False
latchTotalFci(uint),"isPause, NetfRevenue, NetfRevenue, NetfRevenue, totalSupply",False
"latchFciUserController(uint,address)","isPause, NetfRevenue, NetfRevenue, balanceOf, usersNETF, balanceOf",False
latchFciUser(uint),"isPause, NetfRevenue, NetfRevenue, balanceOf, usersNETF, balanceOf",True
changeWithdrawableNetfRe(uint),"isPause, NetfRevenue, NetfRevenue, isPause",False
"withdrawNacNetfReController(uint,address)","NetfRevenue, isPause, usersNETF, usersNETF, NetfRevenue, NetfRevenue, usersNETF, NetfRevenue, NamiAddr, usersNETF",True
withdrawNacNetfRe(uint),"NetfRevenue, isPause, usersNETF, usersNETF, NetfRevenue, NetfRevenue, usersNETF, NetfRevenue, NamiAddr, usersNETF",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
activateRound(uint),"NLFunds, NLFunds, currentRound",False
deactivateRound(uint),"NLFunds, NLFunds, NLFunds, NLFunds, NLFunds",False
activateSubRound(uint),"NLFunds, currentRound, NLFunds, currentRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, listSubRoundNLF, currentRound",False
depositToSubRound(uint),"currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound",False
withdrawFromSubRound(uint),"currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound",False
closeDepositSubRound(),"listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound, listSubRoundNLF, currentRound, currentSubRound",False
withdrawSubRound(uint),"listSubRoundNLF, currentRound, isWithdrawnSubRoundNLF, currentRound, membersNLF, currentRound, NamiAddr, listSubRoundNLF, currentRound, membersNLF, currentRound, NLFunds, currentRound, isWithdrawnSubRoundNLF, currentRound",True
addNacToNLF(uint),"NLFunds, currentRound, NLFunds, currentRound, NLFunds, currentRound, NLFunds, currentRound",False
removeNacFromNLF(uint),"NLFunds, currentRound, NLFunds, currentRound, NLFunds, currentRound, NLFunds, currentRound",False
changeWithdrawableRound(uint),"NLFunds, currentRound, NLFunds, NLFunds, NLFunds",False
withdrawRound(uint),"NLFunds, membersNLF, currentRound, membersNLF, currentRound, NamiAddr, NLFunds, currentRound, membersNLF, currentRound, NLFunds, currentRound, membersNLF, currentRound, membersNLF, currentRound",True
"withdrawRoundController(uint,address)","NLFunds, membersNLF, currentRound, membersNLF, currentRound, NamiAddr, NLFunds, currentRound, membersNLF, currentRound, NLFunds, currentRound, membersNLF, currentRound, membersNLF, currentRound",True
"tokenFallbackExchange(address,uint,uint)","minNac, minNac, NLFunds, currentRound, membersNLF, currentRound, membersNLF, currentRound, NLFunds, currentRound, NLFunds, currentRound, minNac",False
"withdrawToken(address,uint)","minWithdraw, maxWithdraw, NamiAddr",True
