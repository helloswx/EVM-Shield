Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
deposit(),,False
withdraw(uint256),,False
constructor(),owner,True
transferOwnership(address),,True
totalSupply(),totalSupply_,False
balanceOf(address),balances,False
"allowance(address,address)",allowed,False
"approve(address,uint256)",allowed,True
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"closeLoanNotifier(,,address,uint256,bool)",,False
"pushLoanOrderOnChain(,,bytes,bytes)",,False
"setLoanOrderDesc(bytes32,string)",,False
"updateLoanAsLender(bytes32,uint256,uint256,uint256)",,False
"takeLoanOrderOnChainAsTraderByDelegate(address,bytes32,address,uint256,address,bool)",,False
"getLenderInterestForOracle(address,address,address)",,False
oracleAddresses(address),,False
"tradeUserAsset(address,address,address,address,uint256,uint256,uint256)",,False
interestFeePercent(),,False
"getTokenAsset(address,uint256)",,False
function()externalpayable{}(),,False
mintWithEther(address),"loanTokenAddress, wethContract",False
"mint(address,uint256)",,False
"burnToEther(address,uint256)","loanTokenAddress, wethContract, wethContract",True
"burn(address,uint256)",loanTokenAddress,True
"borrowToken(uint256,uint256,address,address,bool)",,True
"borrowTokenFromEscrow(uint256,uint256,address,bool)",loanTokenAddress,True
"rolloverPosition(address,uint256,uint256,address)",loanTokenAddress,True
claimLoanToken(),"burntTokenReserveList, burntTokenReserveListIndex, nextOwedLender_, nextOwedLender_",True
settleInterest(),,False
wrapEther(),wethContract,False
donateAsset(address),"loanTokenAddress, bZxContract, bZxOracle",True
"transfer(address,uint256)","balances, balances, balances, balances, balances, burntTokenReserveListIndex, balances, checkpointPrices_, checkpointPrices_, burntTokenReserveListIndex, balances, checkpointPrices_, checkpointPrices_",True
"transferFrom(address,address,uint256)","allowed, balances, balances, balances, balances, balances, MAX_UINT, allowed, burntTokenReserveListIndex, balances, checkpointPrices_, checkpointPrices_, burntTokenReserveListIndex, balances, checkpointPrices_, checkpointPrices_",True
tokenPrice(),"lastSettleTime_, spreadMultiplier",False
checkpointPrice(address),checkpointPrices_,False
totalReservedSupply(),burntTokenReserved,False
marketLiquidity(),"totalAssetBorrow, totalAssetBorrow",False
borrowInterestRate(),"totalAssetBorrow, baseRate",False
supplyInterestRate(),totalAssetBorrow,False
nextLoanInterestRate(uint256),"lastSettleTime_, spreadMultiplier, loanTokenAddress",False
interestReceived(),spreadMultiplier,False
totalAssetSupply(),"lastSettleTime_, spreadMultiplier",False
getMaxEscrowAmount(uint256),"loanOrderData, loanOrderHashes",False
"getBorrowAmount(uint256,uint256,bool)","loanOrderData, loanOrderHashes",False
getLoanData(uint256),"loanOrderData, loanOrderHashes",False
getLeverageList(),leverageList,False
assetBalanceOf(address),,False
"closeLoanNotifier(,,address,uint256,bool)","loanOrderData, totalAssetBorrow, totalAssetBorrow, totalAssetBorrow, burntTokenReserveList, checkpointSupply_, tokenizedRegistry, loanTokenAddress",True
initLeverage(),"loanOrderHashes, loanTokenAddress, loanTokenAddress, bZxOracle, bZxContract, bZxContract, name, loanOrderData, leverageList, loanOrderHashes, leverageList",True
removeLeverage(uint256),"loanOrderHashes, leverageList, loanOrderData, leverageList, leverageList, leverageList, loanOrderData, loanOrderHashes, leverageList, leverageList, loanOrderHashes, loanOrderData",False
"setDemandCurve(uint256,uint256)","rateMultiplier, baseRate, baseRate, rateMultiplier",False
setInterestFeePercent(uint256),spreadMultiplier,False
setBZxContract(address),bZxContract,False
setBZxVault(address),bZxVault,False
setBZxOracle(address),bZxOracle,False
setTokenizedRegistry(address),tokenizedRegistry,False
setWETHContract(address),wethContract,False
setInitialPrice(uint256),initialPrice,False
"initialize(address,address,address,address,address,address,string,string)","isInitialized_, bZxContract, bZxVault, bZxOracle, wethContract, loanTokenAddress, tokenizedRegistry, name, symbol, decimals, loanTokenAddress, spreadMultiplier, initialPrice, isInitialized_",False
