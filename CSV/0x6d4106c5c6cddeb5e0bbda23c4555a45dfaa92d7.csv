Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint)",,False
balanceOf(address),,False
"constructor(address,address,uint,uint,uint)","beneficiary, dynamicLocktime, tokenReward, globalLocktime, exchangeRate, owner",True
"function()payablepublic{require(charged);require(msg.value>=10000000000);uintam=(msg.value*exchangeRate*100000000)/(1ether);require(tokenAvailable>=am);uintamount=msg.value;balanceOf[msg.sender]+=amount;amountRaised+=amount;tokenBalanceOf[msg.sender]+=am;tokenAvailable-=am;if(timelocksOf[msg.sender]==0){timelocksOf[msg.sender]=now+dynamicLocktime*1minutes;}emitFundTransfer(msg.sender,amount,exchangeRate,am,now,timelocksOf[msg.sender],true);founders.push(msg.sender);}()","charged, exchangeRate, tokenAvailable, balanceOf, amountRaised, tokenBalanceOf, tokenAvailable, timelocksOf, timelocksOf, dynamicLocktime, exchangeRate, timelocksOf, founders",True
doChargeCrowdsale(uint),"tokenAvailable, tokenReward, tokenAvailable, charged, charged",False
claimTokens(address),"tokenBalanceOf, lockType, timelocksOf, lockType, globalLocktime, tokenReward, tokenBalanceOf, tokenBalanceOf, tokenBalanceOf, balanceOf",True
transferRaisedFunds(uint),"beneficiary, amountRaised, beneficiary, amountRaised, exchangeRate",True
transferOwnership(address),owner,False
setExchangeRate(uint),"exchangeRate, exchangeRate",False
setGlobalLocktime(uint),"globalLocktime, globalLocktime",False
setDynamicLocktime(uint),"dynamicLocktime, dynamicLocktime",False
setLockType(uint),lockType,False
unlockTokensFor(address),timelocksOf,False
resetLockFor(address),timelocksOf,False
getLeftOver(uint),"tokenReward, beneficiary, tokenAvailable, beneficiary, tokenAvailable, tokenAvailable",True
