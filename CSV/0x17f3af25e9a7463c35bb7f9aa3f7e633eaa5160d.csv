Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),newOwner,False
transferOwnershipUnsafe(address),,True
claimOwnership(),newOwner,True
addAdmin(address),"admins, admins",False
removeAdmin(address),"admins, admins",False
addToWhitelist(),"isWhitelisted, isWhitelisted",True
removeFromWhitelist(),"isWhitelisted, isWhitelisted",True
constructor(),,False
setWhitelist(),"whitelist, whitelist, whitelist",False
constructor(address),,False
setTokenRecoverer(address),"tokenRecoverer, tokenRecoverer, tokenRecoverer",False
"recoverToken(address,address)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"approve(address,uint)",,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"constructor(address,address)",,False
"function()publicpayable{require(msg.data.length==0,""Fallback call with data"");depositProfit();}()",,True
setProfitDepositor(address),"profitDepositor, profitDepositor, profitDepositor",False
setProfitDistributor(address),"profitDistributor, profitDistributor, profitDistributor",False
depositProfit(),"totalSupply_, totalProfits, totalProfits",True
profitShareOwing(address),"totalSupplyIsFixed, totalSupply_, accounts, totalProfits, totalSupply_",False
updateProfitShare(address),"accounts, totalProfits, accounts",False
withdrawProfitShare(),,True
withdrawProfitShareTo(address),,True
withdrawProfitShares(),,False
setMinter(address),"minter, minter",False
"mint(address,uint)","accounts, numberOfInvestors, totalSupply_, totalSupply_, accounts, accounts",False
finishMinting(),totalSupplyIsFixed,False
"constructor(string,string,,address,address,address)","name, symbol",False
destruct(),owner,False
"recoverToken(address,address)","accounts, accounts, accounts, accounts, accounts, accounts",False
totalSupply(),totalSupply_,False
balanceOf(address),accounts,False
"allowance(address,address)",allowance_,False
"approve(address,uint)",,True
"increaseAllowance(address,uint)","allowance_, allowance_",True
"decreaseAllowance(address,uint)","allowance_, allowance_",True
"canTransfer(address,address,uint)","totalSupplyIsFixed, accounts, whitelist, whitelist",False
"canTransferFrom(address,address,address,uint)",allowance_,False
"transfer(address,uint)",,True
"transferFrom(address,address,uint)","allowance_, allowance_",True
"createNewToken(string,string,,address,address,address)","name, symbol, whitelist, profitDepositor, profitDistributor, tokenRecoverer, token, token",True
etherRate(),,False
"constructor(,,uint,uint,uint,uint,uint,uint,uint,uint,uint,address,address)","rateSource, token, tokenCapOfPublicSale, tokenCapOfPrivateSale, tokenPurchaseMinimum, tokenPurchaseLimit, tokenReservePerMill, tokenPrice, openingTime, closingTime, limitEndTime, companyWallet, reserveAccount, tokenRemainingForPublicSale, tokenRemainingForPrivateSale",False
"function()publicpayable{require(msg.data.length==0,""Fallback call with data"");buyTokens();}()",,True
"distributeTokensViaPublicSale(,)","tokenRemainingForPublicSale, tokenRemainingForPublicSale",False
"distributeTokensViaPrivateSale(,)","tokenRemainingForPrivateSale, tokenRemainingForPrivateSale",False
hasClosed(),closingTime,False
isOpen(),openingTime,False
timeRemaining(),closingTime,False
tokenSold(),"tokenCapOfPublicSale, tokenRemainingForPublicSale, tokenCapOfPrivateSale, tokenRemainingForPrivateSale",False
buyTokens(),"rateSource, tokenPrice, tokenRemainingForPublicSale, tokenPurchaseMinimum, limitEndTime, tokenPurchased, tokenPurchaseLimit, tokenPurchased, tokenRemainingForPublicSale, tokenRemainingForPublicSale, token",True
changeClosingTime(uint),"openingTime, openingTime, closingTime, closingTime",False
finalize(),"isFinalized, tokenReservePerMill, token, reserveAccount, tokenReservePerMill, token, isFinalized",False
"constructor(,,uint,uint,uint,uint,uint,uint,uint,uint,uint,uint,address,address)",tokenGoal,False
goalReached(),tokenGoal,False
distributeRefunds(),,False
claimRefund(),,True
finalize(),token,False
"createNewCrowdsale(,uint,,,)","token, tokenPrice",True
constructor(uint),"RATE_LIMIT, deploymentBlockNumber, rate",False
setWhitelist(),currentWhitelist,False
setTokenFactory(),tokenFactory,False
setCrowdsaleFactory(),crowdsaleFactory,False
setRateAdmin(address),"rateAdmin, rateAdmin, rateAdmin",False
setRate(uint),"rate, rate, RATE_LIMIT, rate, rate, rate",False
etherRate(),rate,False
projectsCount(),projects,False
"createNewProject(string,string,uint,,,,)","currentWhitelist, tokenFactory, crowdsaleFactory, tokenFactory, name, symbol, currentWhitelist, crowdsaleFactory, token, tokenPrice, token, token, projects, name, currentWhitelist, token, projects, currentWhitelist, token",True
