Function Name,State Variables Modified,Can Transfer Ether
"receiveEthersTo(address,string)",,False
"receiveTokensTo(address,string,int256,address,uint256,string)",,False
closeAccrualPeriod(),,False
PARTS_PER(),,False
abs(int256),,False
neg(int256),,False
toNonZeroInt256(uint256),,False
toInt256(uint256),,False
toUInt256(int256),,False
isNonZeroPositiveInt256(int256),,False
isPositiveInt256(int256),,False
isNonZeroNegativeInt256(int256),,False
isNegativeInt256(int256),,False
"clamp(int256,int256,int256)",,False
"clampMin(int256,int256)",,False
"clampMax(int256,int256)",,False
"clamp(uint256,uint256,uint256)",,False
"clampMin(uint256,uint256)",,False
"clampMax(uint256,uint256)",,False
destructor(),,False
disableSelfDestruction(),selfDestructionDisabled,True
triggerSelfDestruction(),selfDestructionDisabled,True
destructor(),deployer,False
setDeployer(address),"deployer, deployer, deployer",False
setOperator(address),"operator, operator, operator",False
registerBeneficiary(address),"beneficiaryIndexByAddress, beneficiaries, beneficiaryIndexByAddress, beneficiaries",False
deregisterBeneficiary(address),"beneficiaryIndexByAddress, beneficiaryIndexByAddress, beneficiaries, beneficiaries, beneficiaries, beneficiaries, beneficiaryIndexByAddress, beneficiaries, beneficiaries, beneficiaryIndexByAddress",False
isRegisteredBeneficiary(address),beneficiaryIndexByAddress,False
registeredBeneficiariesCount(),beneficiaries,False
registerBeneficiary(address),,False
"registerFractionalBeneficiary(address,int256)","totalBeneficiaryFraction, _beneficiaryFractionMap, totalBeneficiaryFraction, totalBeneficiaryFraction",False
deregisterBeneficiary(address),"totalBeneficiaryFraction, totalBeneficiaryFraction, _beneficiaryFractionMap, _beneficiaryFractionMap",False
beneficiaryFraction(address),_beneficiaryFractionMap,False
setCommunityVote(),"communityVoteFrozen, communityVote, communityVote",False
freezeCommunityVote(),communityVoteFrozen,False
constructor(address),,False
isDoubleSpenderWallet(address),,False
getMaxDriipNonce(),maxDriipNonce,False
getMaxNullNonce(),,False
isDataAvailable(),,False
setServiceActivationTimeout(uint256),serviceActivationTimeout,False
registerService(address),,False
registerServiceDeferred(address),"serviceActivationTimeout, serviceActivationTimeout",False
deregisterService(address),"registeredServicesMap, registeredServicesMap",False
"enableServiceAction(address,string)","registeredServicesMap, registeredServicesMap, registeredServicesMap, registeredServicesMap",False
"disableServiceAction(address,string)","registeredServicesMap, registeredServicesMap",False
isRegisteredService(address),registeredServicesMap,False
isRegisteredActiveService(address),registeredServicesMap,False
"isEnabledServiceAction(address,string)",registeredServicesMap,False
constructor(address),,False
settlementsCount(),settlements,False
settlementsCountByWallet(address),walletSettlementIndices,False
"settlementByWalletAndIndex(address,uint256)","walletSettlementIndices, settlements, walletSettlementIndices",False
"settlementByWalletAndNonce(address,uint256)","walletNonceSettlementIndex, settlements, walletNonceSettlementIndex",False
"initSettlement(string,bytes32,address,uint256,address,uint256)","walletNonceSettlementIndex, walletNonceSettlementIndex, settlements, settlements, settlements, settlements, settlements, settlements, settlements, settlements, settlements, walletSettlementIndices, walletSettlementIndices, walletNonceSettlementIndex, walletNonceSettlementIndex",False
"isSettlementRoleDone(address,uint256,)","walletNonceSettlementIndex, settlements, settlements",False
"setSettlementRoleDone(address,uint256,,bool)","walletNonceSettlementIndex, settlements, settlements",False
setMaxDriipNonce(uint256),"maxDriipNonce, maxDriipNonce",False
updateMaxDriipNonceFromCommunityVote(),"communityVote, maxDriipNonce, maxDriipNonce",False
"maxNonceByWalletAndCurrency(address,)",walletCurrencyMaxNonce,False
"setMaxNonceByWalletAndCurrency(address,,uint256)",walletCurrencyMaxNonce,False
"totalFee(address,,address,)",totalFeesMap,False
"setTotalFee(address,,address,,)",totalFeesMap,False
isFungible(),,False
"receive(address,address,uint256,address,uint256)",,False
"approve(address,uint256,address,uint256)",,False
"dispatch(address,address,uint256,address,uint256)",,False
getReceiveSignature(),,False
getApproveSignature(),,False
getDispatchSignature(),,False
setTransferControllerManager(),"transferControllerManager, transferControllerManager",True
constructor(address),,False
"function()publicpayable{_receiveEthersTo(indexByWallet(msg.sender)-1,SafeMathIntLib.toNonZeroInt256(msg.value));}()",,True
"receiveEthersTo(address,string)",,False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)",,False
hashName(string),,False
"depositByIndices(uint256,uint256)",partners,False
"depositByName(string,uint)",,False
"depositByNameHash(bytes32,uint)",,False
"depositByWallet(address,uint)",,False
depositsCountByIndex(uint256),partners,False
depositsCountByName(string),,False
depositsCountByNameHash(bytes32),,False
depositsCountByWallet(address),,False
"activeBalanceByIndex(uint256,address,uint256)",partners,False
"activeBalanceByName(string,address,uint256)",,False
"activeBalanceByNameHash(bytes32,address,uint256)",,False
"activeBalanceByWallet(address,address,uint256)",,False
"stagedBalanceByIndex(uint256,address,uint256)",partners,False
"stagedBalanceByName(string,address,uint256)",,False
"stagedBalanceByNameHash(bytes32,address,uint256)",,False
"stagedBalanceByWallet(address,address,uint256)",,False
partnersCount(),partners,False
"registerByName(string,uint256,address,bool,bool)",,False
"registerByNameHash(bytes32,uint256,address,bool,bool)",,False
indexByNameHash(bytes32),_indexByNameHash,False
indexByName(string),,False
indexByWallet(address),_indexByWallet,False
isRegisteredByName(string),_indexByNameHash,False
isRegisteredByNameHash(bytes32),_indexByNameHash,False
isRegisteredByWallet(address),_indexByWallet,False
feeByIndex(uint256),partners,False
feeByName(string),,False
feeByNameHash(bytes32),,False
feeByWallet(address),,False
"setFeeByIndex(uint256,uint256)",partners,False
"setFeeByName(string,uint256)",,False
"setFeeByNameHash(bytes32,uint256)",,False
"setFeeByWallet(address,uint256)",,False
walletByIndex(uint256),"partners, partners",False
walletByName(string),partners,False
walletByNameHash(bytes32),partners,False
"setWalletByIndex(uint256,address)",partners,False
"setWalletByName(string,address)",,False
"setWalletByNameHash(bytes32,address)",,False
"setWalletByWallet(address,address)",,False
"stage(int256,address,uint256)","partners, partners, partners, partners, partners, partners, partners",True
"withdraw(int256,address,uint256,string)","partners, partners",True
constructor(address),,False
"function()publicpayable{receiveEthersTo(msg.sender,"""");}()",,True
"receiveEthersTo(address,string)",txHistory,False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)",txHistory,True
"periodAccrualBalance(address,uint256)",,False
"aggregateAccrualBalance(address,uint256)",,False
periodCurrenciesCount(),,False
"periodCurrenciesByIndices(uint256,uint256)",,False
aggregateCurrenciesCount(),,False
"aggregateCurrenciesByIndices(uint256,uint256)",,False
depositsCount(),txHistory,False
deposit(uint),txHistory,False
closeAccrualPeriod(),"totalBeneficiaryFraction, beneficiaries, beneficiaries, beneficiaries, beneficiaries",True
constructor(address),,False
"registerTransferController(string,address)","registeredTransferControllers, registeredTransferControllers",False
"reassociateTransferController(string,string,address)","registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers",False
"registerCurrency(address,string)","registeredCurrencies, registeredCurrencies",False
deregisterCurrency(address),"registeredCurrencies, registeredCurrencies, registeredCurrencies",False
blacklistCurrency(address),"registeredCurrencies, registeredCurrencies",False
whitelistCurrency(address),"registeredCurrencies, registeredCurrencies",False
"transferController(address,string)","registeredTransferControllers, registeredTransferControllers, registeredCurrencies, registeredCurrencies, registeredTransferControllers, registeredCurrencies",False
