Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",_allowed,True
"transferFrom(address,address,uint256)","_allowed, _allowed, _allowed",True
"increaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
"decreaseAllowance(address,uint256)","_allowed, _allowed, _allowed",True
owner(),_owner,False
isOwner(),_owner,True
renounceOwnership(),"_owner, _owner",False
transferOwnership(address),,True
constructor(),"creator, tokenContract, creator, firstUnlockDate, secondUnlockDate",True
function()payablepublic{revert();}(),,False
allocateTokenForAdvisor(),,False
withdrawTokens(),"firstUnlockDate, advisors, secondUnlockDate, firstUnlockDate, tokenContract, tokenContract",True
"constructor(address,address)","creator, tokenContract, creator, firstUnlockDate, secondUnlockDate, thirdUnlockDate, approver1, approver2",True
function()payablepublic{revert();}(),,False
allocateTokenForTeam(),,False
withdrawTokens(),"firstUnlockDate, members, thirdUnlockDate, secondUnlockDate, firstUnlockDate, tokenContract, tokenContract",True
rejectWithdrawal(address),members,True
canBurn(address),members,False
getMemberTokenRemain(address),members,False
burnMemberToken(address),members,False
"constructor(address,address,address,address,address,address,address,address,address,address,uint)","admin, fundWallet, airdropWallet, treasuryWallet, partnerWallet, lotto645JackpotWallet, lotto655Jackpot1Wallet, lotto655Jackpot2Wallet, saleState, sellingTime, teamWallet, advisorWallet, sellingTime",True
getSaleState(),"saleState, sellingTime",False
function()externalpayableisInSale{require(fundWallet!=address(0));if(saleState==ICOData.SaleStates.InPresale&&now>=sellingTime){returnpurchaseTokenInPresale();}elseif(saleState==ICOData.SaleStates.InPublicSale&&now>=sellingTime){returnpurchaseTokenInPublicSale();}revert();}(),"fundWallet, saleState, sellingTime, saleState, sellingTime",False
getCurrentPublicBracket(),"saleState, publicBrackets, currentPublicBracketIndex, currentPublicBracketIndex",False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
changeWalletAddress(address),"fundWallet, fundWallet",False
changeAdminAddress(address),"admin, admin",False
enableTransfer(),"isTransferable, isTransferable",False
"transferPrivateSale(address,uint256)","saleState, privateSaleRemain, privateSaleRemain, privateSaleRemain",True
"setPublicPrice(uint,uint256)","publicBrackets, currentPublicBracketIndex, publicBrackets",False
"setMinAcceptedInPublicSale(uint,uint256)","publicBrackets, currentPublicBracketIndex, publicBrackets",False
changeToPublicSale(),saleState,False
setPresalePrice(uint256),"presaleBracket, presaleBracket",False
"startPresale(uint256,uint)","saleState, presaleBracket, isSelling, saleState, sellingTime, sellingTime",False
setMinAcceptedAmountInPresale(uint256),"presaleBracket, presaleBracket",False
burnMemberToken(address),"teamWallet, teamWallet, teamWallet, teamWallet, teamWallet, teamWallet",False
