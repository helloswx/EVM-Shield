Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
implementsERC721(),,False
totalSupply(),,False
balanceOf(address),,False
ownerOf(uint256),,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"transfer(address,uint256)",,False
"addNewSampleType(string,uint)","numOfCommon, numOfRare, numOfLegendary, numOfCommon, sampleTypes, numOfSampleTypes, numOfSampleTypes",False
getType(uint),"numOfCommon, numOfRare, numOfLegendary",False
"transfer(address,uint256)","tokensForOwner, tokensForOwner, tokensForApproved",True
"approve(address,uint256)","tokensForOwner, tokensForApproved",True
"transferFrom(address,address,uint256)","tokensForOwner, tokensForApproved",True
"approveAndSell(uint,uint)","marketplaceContract, marketplaceContract",True
"composeJingle(address,,,string,string,)","numOfJingles, uniqueJingles, tokensForOwner, tokensOwned, samplesInJingle, settings, tokenPosInArr, tokensOwned, jinglesInfo, numOfJingles, numOfJingles, numOfJingles",False
"addSoundEffect(uint,)",soundEffects,True
implementsERC721(),,False
totalSupply(),numOfJingles,False
balanceOf(address),tokensOwned,False
ownerOf(uint256),tokensForOwner,False
"tokenOfOwnerByIndex(address,uint256)",tokensOwned,False
getSamplesForJingle(uint),samplesInJingle,False
getAllJingles(address),tokensOwned,False
getMetaInfo(uint),"jinglesInfo, jinglesInfo",False
setCryptoJinglesContract(address),"cryptoJingles, cryptoJingles",False
setMarketplaceContract(address),"marketplaceContract, marketplaceContract",False
Sample(address),sampleStorage,False
"mint(address,uint)","sampleStorage, numOfSamples, numOfSamples, numOfSamples",False
"mintForSampleRegitry(address,uint32)","sampleRegistry, numOfSamples, numOfSamples, numOfSamples",True
"removeSample(address,uint)","tokensOwned, tokenPosInArr, tokensOwned, tokensOwned, tokenPosInArr, tokensOwned, tokensOwned, tokensForOwner",False
getSamplesForOwner(address),tokensOwned,False
getTokenType(uint),tokenType,False
"isTokenOwner(uint,address)",tokensForOwner,False
getAllSamplesForOwner(address),"tokensOwned, tokenType",False
setCryptoJinglesContract(address),"cryptoJingles, cryptoJingles",False
setSampleRegistry(address),sampleRegistry,False
"CryptoJingles(address,address)","sampleContract, jingleContract",False
"buySamples(uint,address)",sampleContract,False
"composeJingle(string,,)","jingleContract, sampleContract, isAlreadyUsed, isAlreadyUsed, sampleTypes, sampleContract, sampleContract, jingleContract, sampleTypes, authors, settings",True
setAuthorName(string),authors,True
"randomGen(bytes32,uint)",,False
withdraw(uint),,True
Marketplace(address),"jingleContract, ownerBalance",False
"sell(address,uint,uint)","sellOrders, sellOrders, numOrders, jinglesOnSale, positionOfJingle, jinglesOnSale, jingleContract",True
buy(uint),"sellOrders, sellOrders, sellOrders, numOrders, jingleContract, sellOrders, sellOrders, ownerBalance",True
cancel(uint),"sellOrders, sellOrders, sellOrders, numOrders, jingleContract",True
getAllJinglesOnSale(),jinglesOnSale,False
withdraw(uint),ownerBalance,True
