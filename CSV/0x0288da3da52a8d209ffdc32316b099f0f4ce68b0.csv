Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
renounceOwnership(),"owner, owner",False
pause(),paused,False
unpause(),paused,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
"increaseApproval(address,uint)",,False
"decreaseApproval(address,uint)",,False
constructor(uint256),"name, decimals, symbol, exchangeRate",True
setExchangeRate(uint256),exchangeRate,False
sellpause(),sellPaused,False
unsellpause(),sellPaused,False
function()payablewhenSellNotPausedwhenNotPausedpublic{require(msg.value>=0.1ether);uint256count=msg.value.div(0.1ether).mul(exchangeRate);balances[msg.sender]=balances[msg.sender].add(count);balances[owner]=balances[owner].sub(count);}(),"exchangeRate, owner, owner",True
withdrawAll(),,True
withdrawAmount(uint256),,True
