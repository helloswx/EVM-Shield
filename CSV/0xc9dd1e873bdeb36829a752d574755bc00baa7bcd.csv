Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)","balances, balances, balances, balances",True
balanceOf(address),balances,False
"transferFrom(address,address,uint256)","balances, balances, balances, balances",True
"approve(address,uint256)",,True
"allowance(address,address)",,False
"increaseApproval(address,uint)",,True
"decreaseApproval(address,uint)",,True
Ownable(),owner,True
transferOwnership(address),owner,False
ChargCoinContract(),"balances, totalSupply",True
function()payablepublic{require(msg.value!=0);require(crowdsaleState!=state.crowdsaleEnded);boolstateChanged=checkCrowdsaleState();if(crowdsaleState==state.crowdsale){createTokens(msg.sender);}else{refundTransaction(stateChanged);}}(),"crowdsaleState, crowdsaleState",True
createTokens(address),"maxCap, ethRaised, maxCap, ethRaised, ethRaised, minCap, minCap, ethRaised, ethRaised, maxCap, ethRaised, maxCap, contributorList, contributorList, ethRaised, contributorList, multisig",True
"transferToContributor(address,uint256)","balances, owner, balances, owner, balances, balances",False
calculateEthToChargcoin(uint),"ethRaised, ethRaised, maxCap",False
getAmountBonus(uint),,False
getPrice(),,False
batchReturnEthIfFailed(uint),"crowdsaleState, ethRaised, minCap, contributorList, balances",True
setMultisigAddress(address),multisig,False
"registerNode(uint256,uint256)","authorized, rateOfCharging, rateOfParking, authorized",True
blockNode(address),authorized,False
updateChargingRate(uint256),rateOfCharging,True
updateParkingRate(uint256),rateOfCharging,True
"chargeOn(address,uint)","authorized, chargingSwitches, rateOfCharging, balances, chargingSwitches, rateOfCharging, balances, balances, reservedFundsCharging, reservedFundsCharging",True
chargeOff(address),"chargingSwitches, chargingSwitches, chargingSwitches, chargingSwitches, chargingSwitches, balances, balances, reservedFundsCharging, reservedFundsCharging, reservedFundsCharging, balances, balances, reservedFundsCharging, reservedFundsCharging, chargingSwitches, chargingSwitches, chargingSwitches, chargingSwitches, chargingSwitches, chargingSwitches",True
"parkingOn(address,uint)","authorized, parkingSwitches, balances, rateOfParking, parkingSwitches, rateOfParking, balances, balances, reservedFundsParking, reservedFundsParking",True
parkingOff(address),"parkingSwitches, parkingSwitches, parkingSwitches, parkingSwitches, parkingSwitches, balances, balances, reservedFundsParking, reservedFundsParking, reservedFundsParking, balances, balances, reservedFundsParking, reservedFundsParking, parkingSwitches, parkingSwitches, parkingSwitches, parkingSwitches, parkingSwitches, parkingSwitches",True
setETHUSDPrice(uint),"dashboardAddress, ETHUSDPRICE",True
setCHGUSDPrice(uint),"dashboardAddress, CHGUSDPRICE",True
calculateCHGAmountToEther(uint),"ETHUSDPRICE, CHGUSDPRICE",False
balances(address),contractAddress,False
currentBalance(),contractAddress,False
"function()payablepublic{uintcalculatedAmount=calculateCHGAmountToEther(msg.value);ChargCoinContractc=ChargCoinContract(contractAddress);if(currentBalance()<calculatedAmount){revert();}if(!c.transfer(msg.sender,calculatedAmount)){revert();}}()",contractAddress,True
