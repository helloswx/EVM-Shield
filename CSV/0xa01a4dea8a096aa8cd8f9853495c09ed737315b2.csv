Function Name,State Variables Modified,Can Transfer Ether
owned(),owner,True
transferOwnership(address),owner,False
"transfer(address,uint256)",,False
"RailzTokenSale(,address)","presalestartTime, token, owner",True
"function()payablepublicvalidGasPrice{require(msg.sender!=address(0));require(msg.value!=0);require(msg.value>=0.1ether);require(isContributionAllowed());contributors[msg.sender]=contributors[msg.sender].add(msg.value);weiRaised=weiRaised.add(msg.value);uint256numberOfTokens=0;if(isPreTokenSaleActive()){numberOfTokens=msg.value/presalesTokenPriceInWei;numberOfTokens=numberOfTokens*(1e18);require((numberOfTokens+numberOfTokensAllocated)<=presalesCap);tokensAllocated[msg.sender]=tokensAllocated[msg.sender].add(numberOfTokens);numberOfTokensAllocated=numberOfTokensAllocated.add(numberOfTokens);forwardFunds();emitContributionReceived(msg.sender,msg.value,numberOfTokens);}elseif(isTokenSaleActive()){numberOfTokens=msg.value/publicsalesTokenPriceInWei;numberOfTokens=numberOfTokens*(1e18);require((numberOfTokens+numberOfTokensAllocated)<=(presalesCap+publicsalesCap));tokensAllocated[msg.sender]=tokensAllocated[msg.sender].add(numberOfTokens);numberOfTokensAllocated=numberOfTokensAllocated.add(numberOfTokens);forwardFunds();emitContributionReceived(msg.sender,msg.value,numberOfTokens);}checkifCapHasReached();}()","weiRaised, weiRaised, presalesTokenPriceInWei, numberOfTokensAllocated, presalesCap, tokensAllocated, tokensAllocated, numberOfTokensAllocated, numberOfTokensAllocated, publicsalesTokenPriceInWei, numberOfTokensAllocated, presalesCap, publicsalesCap, tokensAllocated, tokensAllocated, numberOfTokensAllocated, numberOfTokensAllocated",True
isContributionAllowed(),,False
transferToken(address),"tokensAllocated, tokensAllocated, token",True
"manualBatchTransferToken(,)",token,True
batchTransferToken(),"tokensAllocated, tokensAllocated, token",True
"refundContribution(address,uint256)",,True
setGasPrice(uint256),maxGasPrice,False
