Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
renounceOwnership(),"owner, owner",False
transferOwnership(address),,True
supportsInterface(bytes4),,False
constructor(),InterfaceId_ERC165,False
supportsInterface(bytes4),supportedInterfaces,False
balanceOf(address),,False
ownerOf(uint256),,False
exists(uint256),,False
"approve(address,uint256)",,False
getApproved(uint256),,False
"setApprovalForAll(address,bool)",,False
"isApprovedForAll(address,address)",,False
"transferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,False
totalSupply(),,False
"tokenOfOwnerByIndex(address,uint256)",,False
tokenByIndex(uint256),,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
"onERC721Received(address,address,uint256,bytes)",,False
constructor(),,False
"setDnsDomains(string,string,string)","dnsDomains, dnsDomains, dnsDomains",False
isActive(uint32),points,False
getKeys(uint32),points,False
getKeyRevisionNumber(uint32),points,False
hasBeenLinked(uint32),points,False
isLive(uint32),points,False
getContinuityNumber(uint32),points,False
getSpawnCount(uint32),points,False
getSpawned(uint32),points,False
hasSponsor(uint32),points,False
getSponsor(uint32),points,False
"isSponsor(uint32,uint32)",points,False
getSponsoringCount(uint32),sponsoring,False
getSponsoring(uint32),sponsoring,False
isEscaping(uint32),points,False
getEscapeRequest(uint32),points,False
"isRequestingEscapeTo(uint32,uint32)",points,False
getEscapeRequestsCount(uint32),escapeRequests,False
getEscapeRequests(uint32),escapeRequests,False
activatePoint(uint32),points,False
"setKeys(uint32,bytes32,bytes32,uint32)",points,False
incrementContinuityNumber(uint32),points,False
registerSpawned(uint32),points,False
loseSponsor(uint32),points,False
"setEscapeRequest(uint32,uint32)",,False
cancelEscape(uint32),points,False
doEscape(uint32),points,False
getPrefix(uint32),,False
getPointSize(uint32),,False
getOwner(uint32),rights,False
"isOwner(uint32,address)",rights,False
getOwnedPointCount(address),pointsOwnedBy,False
getOwnedPoints(address),pointsOwnedBy,False
"getOwnedPointAtIndex(address,uint256)",pointsOwnedBy,False
getManagementProxy(uint32),rights,False
"isManagementProxy(uint32,address)",rights,False
"canManage(uint32,address)",rights,False
getManagerForCount(address),managerFor,False
getManagerFor(address),managerFor,False
getSpawnProxy(uint32),rights,False
"isSpawnProxy(uint32,address)",rights,False
"canSpawnAs(uint32,address)",rights,False
getSpawningForCount(address),spawningFor,False
getSpawningFor(address),spawningFor,False
getVotingProxy(uint32),rights,False
"isVotingProxy(uint32,address)",rights,False
"canVoteAs(uint32,address)",rights,False
getVotingForCount(address),votingFor,False
getVotingFor(address),votingFor,False
getTransferProxy(uint32),rights,True
"isTransferProxy(uint32,address)",rights,True
"canTransfer(uint32,address)","rights, operators",True
getTransferringForCount(address),transferringFor,True
getTransferringFor(address),transferringFor,True
"isOperator(address,address)",operators,False
"setOwner(uint32,address)","rights, pointOwnerIndexes, pointsOwnedBy, owner, owner, owner, pointOwnerIndexes, owner, owner, pointOwnerIndexes, rights, pointsOwnedBy, pointOwnerIndexes, pointsOwnedBy",False
"setManagementProxy(uint32,address)","rights, managerForIndexes, managerFor, managerForIndexes, managerForIndexes, managerFor, managerForIndexes",False
"setSpawnProxy(uint32,address)","rights, spawningForIndexes, spawningFor, spawningForIndexes, spawningForIndexes, spawningFor, spawningForIndexes",False
"setVotingProxy(uint32,address)","rights, votingForIndexes, votingFor, votingForIndexes, votingForIndexes, votingFor, votingForIndexes",False
"setTransferProxy(uint32,address)","rights, transferringForIndexes, transferringFor, transferringForIndexes, transferringForIndexes, transferringFor, transferringForIndexes",True
"setOperator(address,address,bool)",operators,False
constructor(),azimuth,False
"constructor(uint256,uint256)",,False
"reconfigure(uint256,uint256)","pollDuration, pollCooldown",False
incrementTotalVoters(),"totalVoters, totalVoters, totalVoters",False
getUpgradeProposals(),upgradeProposals,False
getUpgradeProposalCount(),upgradeProposals,False
getDocumentProposals(),documentProposals,False
getDocumentProposalCount(),documentProposals,False
getDocumentMajorities(),documentMajorities,False
"hasVotedOnUpgradePoll(uint8,address)",upgradePolls,False
"hasVotedOnDocumentPoll(uint8,bytes32)",documentPolls,False
startUpgradePoll(address),"upgradeHasAchievedMajority, upgradePolls, upgradeProposals",False
startDocumentPoll(bytes32),"documentHasAchievedMajority, documentPolls, documentProposals",False
"castUpgradeVote(uint8,address,bool)",upgradePolls,False
"castDocumentVote(uint8,bytes32,bool)",documentPolls,False
updateUpgradePoll(address),"upgradeHasAchievedMajority, upgradePolls, upgradeHasAchievedMajority",False
updateDocumentPoll(bytes32),"documentHasAchievedMajority, documentPolls, documentHasAchievedMajority, documentMajorities",False
constructor(),,False
"addClaim(uint32,string,string,bytes)","claims, claims",False
"removeClaim(uint32,string,string)",claims,False
clearClaims(uint32),"azimuth, azimuth, claims",True
"findClaim(uint32,string,string)",claims,False
onUpgrade(),"previousEcliptic, azimuth, polls",True
"constructor(address,,,)",claims,False
balanceOf(address),azimuth,False
ownerOf(uint256),"azimuth, azimuth",False
exists(uint256),azimuth,False
"safeTransferFrom(address,address,uint256)",,False
"safeTransferFrom(address,address,uint256,bytes)",,True
"transferFrom(address,address,uint256)",azimuth,True
"approve(address,uint256)",,False
"setApprovalForAll(address,bool)",azimuth,True
getApproved(uint256),"azimuth, azimuth",False
"isApprovedForAll(address,address)",azimuth,False
name(),,False
symbol(),,False
tokenURI(uint256),,False
"configureKeys(uint32,bytes32,bytes32,uint32,bool)","azimuth, azimuth",False
"spawn(uint32,address)","azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth",True
"transferPoint(uint32,address,bool)","azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, azimuth, claims",True
"escape(uint32,uint32)",azimuth,False
cancelEscape(uint32),azimuth,False
adopt(uint32),"azimuth, azimuth, azimuth, azimuth",True
reject(uint32),"azimuth, azimuth, azimuth, azimuth",True
detach(uint32),"azimuth, azimuth, azimuth, azimuth",True
"getSpawnLimit(uint32,uint256)",azimuth,False
"canEscapeTo(uint32,uint32)","azimuth, azimuth, azimuth, azimuth",False
"setManagementProxy(uint32,address)",azimuth,False
"setSpawnProxy(uint16,address)",azimuth,False
"setVotingProxy(uint8,address)",azimuth,False
"setTransferProxy(uint32,address)","azimuth, owner, azimuth, owner, azimuth, owner",True
"startUpgradePoll(uint8,)",polls,False
"startDocumentPoll(uint8,bytes32)",polls,False
"castUpgradeVote(uint8,,bool)",polls,False
"castDocumentVote(uint8,bytes32,bool)",polls,False
updateUpgradePoll(),polls,False
updateDocumentPoll(bytes32),polls,False
"createGalaxy(uint8,address)","azimuth, polls",True
"setDnsDomains(string,string,string)",azimuth,False
constructor(),,False
"constructor(,,,,uint256)","conditions, livelines, deadlines, timestamps, escapeHatchDate",False
"register(address,,uint16,uint256)","commitments, conditions",False
"deposit(address,uint16)",commitments,False
"withdrawForfeited(address,uint8,address)",commitments,False
"withdrawOverdue(address,address)","escapeHatchDate, commitments",False
approveCommitmentTransfer(address),"commitments, commitments, commitments",True
transferCommitment(address),"commitments, commitments, commitments, commitments, commitments",True
withdrawToSelf(uint8),,True
"withdraw(uint8,address)",commitments,True
forfeit(uint8),"commitments, deadlines, timestamps",True
analyzeCondition(uint8),"timestamps, livelines, deadlines, timestamps, conditions, azimuth, azimuth, timestamps",False
"withdrawLimit(address,uint8)","commitments, timestamps",False
verifyBalance(address),commitments,False
getBatches(address),commitments,False
"getBatch(address,uint8)",commitments,False
getWithdrawn(address),commitments,False
"getWithdrawnFromBatch(address,uint8)",commitments,False
getForfeited(address),commitments,False
"hasForfeitedBatch(address,uint8)",commitments,False
getRemainingStars(address),commitments,False
getConditionsState(),"conditions, livelines, deadlines, timestamps",False
