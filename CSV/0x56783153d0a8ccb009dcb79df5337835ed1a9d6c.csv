Function Name,State Variables Modified,Can Transfer Ether
"transfer(address,uint)",,False
"transferFrom(address,address,uint256)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,False
"increaseApproval(address,uint)",,False
balanceOf(address),,False
"getReturn(,,uint256)",,False
"convert(,,uint256,uint256)",,False
getTotalLoans(),,False
getOracle(uint),,False
getBorrower(uint),,False
getCosigner(uint),,False
ownerOf(uint256),,False
getCreator(uint),,False
getAmount(uint),,False
getPaid(uint),,False
getDueTime(uint),,False
"getApprobation(uint,address)",,False
getStatus(uint),,False
isApproved(uint),,False
getPendingAmount(uint),,False
getCurrency(uint),,False
"cosign(uint,uint256)",,False
approveLoan(uint),,False
"transfer(address,uint256)",,False
takeOwnership(uint256),,False
"withdrawal(uint,address,uint256)",,False
url(),,False
"cost(address,uint256,bytes,bytes)",,False
"requestCosign(address,uint256,bytes,bytes)",,False
"claim(address,uint256,bytes)",,False
name(),,False
symbol(),,False
totalSupply(),,False
balanceOf(address),,False
ownerOf(uint256),,False
"approve(address,uint256)",,False
takeOwnership(uint256),,False
"transfer(address,uint256)",,False
"setApprovalForAll(address,bool)",,False
getApproved(uint256),,False
"isApprovedForAll(address,address)",,False
tokenMetadata(uint256),,False
Ownable(),owner,True
transferTo(address),owner,False
url(),,False
"getRate(bytes32,bytes)",,False
addCurrency(string),currencies,False
supported(bytes32),currencies,False
"withdrawTokens(,address,uint256)",lockedTokens,True
name(),,False
symbol(),,False
totalSupply(),activeLoans,False
balanceOf(address),lendersBalance,False
tokensOfOwner(address),"loans, loans, loans",False
tokenMetadata(uint256),loans,False
tokenMetadataHash(uint256),loans,False
NanoLoanEngine(),"owner, rcn, loans",True
"createLoan(,address,bytes32,uint256,uint256,uint256,uint256,uint256,uint256,string)","deprecated, loans, identifierToIndex, identifierToIndex",True
ownerOf(uint256),"owner, loans",False
getTotalLoans(),loans,False
getOracle(uint),loans,False
getBorrower(uint),loans,False
getCosigner(uint),loans,False
getCreator(uint),loans,False
getAmount(uint),loans,False
getPunitoryInterest(uint),loans,False
getInterestTimestamp(uint),loans,False
getPaid(uint),loans,False
getInterestRate(uint),loans,False
getInterestRatePunitory(uint),loans,False
getDueTime(uint),loans,False
getDuesIn(uint),loans,False
getCancelableAt(uint),loans,False
"getApprobation(uint,address)",loans,False
getStatus(uint),loans,False
getLenderBalance(uint),loans,False
getApproved(uint),loans,False
getCurrency(uint),loans,False
getExpirationRequest(uint),loans,False
getInterest(uint),loans,False
getIdentifier(uint),loans,False
isApproved(uint),loans,False
approveLoan(uint),loans,True
approveLoanIdentifier(bytes32),identifierToIndex,False
"registerApprove(bytes32,uint8,bytes32,bytes32)","identifierToIndex, loans",False
"lend(uint,bytes,,bytes)","loans, activeLoans, lendersBalance, rcn",True
"cosign(uint,uint256)","loans, rcn",True
destroy(uint),"loans, lendersBalance, activeLoans",True
destroyIdentifier(bytes32),identifierToIndex,False
"transfer(address,uint256)","loans, lendersBalance, lendersBalance",True
takeOwnership(uint256),,True
"transferFrom(address,address,uint256)",loans,True
"approve(address,uint256)",loans,True
getPendingAmount(uint),,False
getRawPendingAmount(uint),loans,False
addInterest(uint),loans,False
"pay(uint,uint256,address,bytes)","loans, lendersBalance, activeLoans, rcn, rcn",True
"convertRate(,bytes32,bytes,uint256)","RCN_DECIMALS, RCN_DECIMALS, PRECISION",False
"withdrawal(uint,address,uint256)","loans, rcn, rcn",True
setDeprecated(bool),deprecated,False
"pay(,,,bytes,)","I_ENGINE, rcn, rcn, I_MARGIN_SPEND, rcn, rcn, rcn, rcn",False
"requiredLendSell(,,,bytes,bytes,)","I_ENGINE, rcn, I_MARGIN_SPEND",False
"requiredPaySell(,,,bytes,)","I_ENGINE, rcn, I_MARGIN_SPEND",False
"lend(,,,bytes,bytes,)","I_ENGINE, rcn, rcn, I_MARGIN_SPEND, rcn, rcn, rcn, rcn, rcn, rcn",True
"withdrawTokens(,address,uint256)",,True
"withdrawEther(address,uint256)",,True
function()externalpayable{}(),,False
