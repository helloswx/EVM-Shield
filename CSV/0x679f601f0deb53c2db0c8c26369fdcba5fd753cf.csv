Function Name,State Variables Modified,Can Transfer Ether
formula(),,False
gasPriceLimit(),,False
quickConverter(),,False
"calculatePurchaseReturn(uint256,uint256,uint32,uint256)",,False
"calculateSaleReturn(uint256,uint256,uint32,uint256)",,False
gasPrice(),,False
"convert(,uint256,uint256)",,False
"convertFor(,uint256,uint256,address)",,False
name(),,False
symbol(),,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
owner(),,False
transferOwnership(address),,False
acceptOwnership(),,False
"withdrawTokens(,address,uint256)",,False
deposit(),,False
withdraw(uint256),,False
"withdrawTo(address,uint256)",,False
disableTransfers(bool),,False
"issue(address,uint256)",,False
"destroy(address,uint256)",,False
convertibleTokenCount(),,False
convertibleToken(uint16),,False
"getReturn(,,uint256)",,False
"convert(,,uint256,uint256)",,False
"change(,,uint256,uint256)",,False
Owned(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
Utils(),,False
TokenHolder(),,False
"withdrawTokens(,address,uint256)",,True
SmartTokenController(),token,False
transferTokenOwnership(address),token,True
acceptTokenOwnership(),token,False
disableTokenTransfers(bool),token,False
"withdrawFromToken(,address,uint256)",token,False
Managed(),manager,True
transferManagement(address),"manager, newManager",False
acceptManagement(),"newManager, manager, newManager, manager, newManager, newManager",True
"BancorConverter(,,uint32,,uint32)","extensions, maxConversionFee",False
connectorTokenCount(),connectorTokens,False
convertibleTokenCount(),,False
convertibleToken(uint16),"token, connectorTokens",False
setExtensions(),extensions,False
setQuickBuyPath(),quickBuyPath,False
clearQuickBuyPath(),quickBuyPath,False
getQuickBuyPathLength(),quickBuyPath,False
disableConversions(bool),conversionsEnabled,False
setConversionFee(uint32),"conversionFee, conversionFee",False
getConversionFeeAmount(uint256),"conversionFee, MAX_CONVERSION_FEE",False
"addConnector(,uint32,bool)","token, connectors, totalConnectorWeight, MAX_WEIGHT, connectors, connectors, connectors, connectors, connectors, connectorTokens, totalConnectorWeight",False
"updateConnector(,uint32,bool,uint256)","connectors, totalConnectorWeight, MAX_WEIGHT, totalConnectorWeight, totalConnectorWeight",False
"disableConnectorPurchases(,bool)",connectors,False
getConnectorBalance(),connectors,False
"getReturn(,,uint256)","token, token, token",False
"getPurchaseReturn(,uint256)","connectors, token, extensions",False
"getSaleReturn(,uint256)",token,False
"convert(,,uint256,uint256)","token, token",False
"buy(,uint256,uint256)","connectors, token",True
"sell(,uint256,uint256)","token, token, connectors, token",True
"quickConvert(,uint256,uint256)","extensions, token, token, token, quickConverter, quickConverter, quickConverter",True
"change(,,uint256,uint256)",,False
"function()payablepublic{quickConvert(quickBuyPath,msg.value,1);}()",quickBuyPath,False
"BancorConverterExtensions(,,)","formula, gasPriceLimit, quickConverter",False
setFormula(),formula,False
setGasPriceLimit(),gasPriceLimit,False
setQuickConverter(),quickConverter,False
BancorFormula(),"maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray, maxExpArray",False
"calculatePurchaseReturn(uint256,uint256,uint32,uint256)","MAX_WEIGHT, MAX_WEIGHT, MAX_WEIGHT",False
"calculateSaleReturn(uint256,uint256,uint32,uint256)","MAX_WEIGHT, MAX_WEIGHT, MAX_WEIGHT",False
BancorGasPriceLimit(uint256),gasPrice,False
setGasPrice(uint256),gasPrice,False
BancorPriceFloor(),token,False
sell(),"token, token, allowance, allowance, TOKEN_PRICE_N, TOKEN_PRICE_D",True
withdraw(uint256),,True
function()publicpayable{}(),,False
BancorQuickConverter(),,False
"registerEtherToken(,bool)",etherTokens,False
"convertFor(,uint256,uint256,address)","etherTokens, etherTokens",True
"claimAndConvertFor(,uint256,uint256,address)",,True
"convert(,uint256,uint256)",,True
"claimAndConvert(,uint256,uint256)",,True
"CrowdsaleController(,uint256,address,address,bytes32)","startTime, endTime, startTime, DURATION, beneficiary, btcs, realEtherCapHash",False
"computeRealCap(uint256,uint256)",,False
"enableRealCap(uint256,uint256)","totalEtherCap, totalEtherCap",False
computeReturn(uint256),"TOKEN_PRICE_D, TOKEN_PRICE_N",False
contributeETH(),,False
contributeBTCs(),,False
function()payablepublic{contributeETH();}(),,False
"ERC20Token(string,string,uint8)","name, symbol, decimals",False
"transfer(address,uint256)","balanceOf, balanceOf, balanceOf, balanceOf",True
"transferFrom(address,address,uint256)","allowance, allowance, balanceOf, balanceOf, balanceOf, balanceOf",True
"approve(address,uint256)","allowance, allowance",True
EtherToken(),,False
deposit(),"balanceOf, balanceOf, totalSupply, totalSupply",True
withdraw(uint256),,True
"withdrawTo(address,uint256)","balanceOf, balanceOf, totalSupply, totalSupply",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
function()publicpayable{deposit();}(),,False
"SmartToken(string,string,uint8)",,False
disableTransfers(bool),transfersEnabled,True
"issue(address,uint256)","totalSupply, totalSupply, balanceOf, balanceOf",False
"destroy(address,uint256)","owner, balanceOf, balanceOf, totalSupply, totalSupply",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
