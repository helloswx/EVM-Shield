Function Name,State Variables Modified,Can Transfer Ether
propose(bytes),"committeeStatus, committeeStatus, committeeStatus",True
dismiss(),,False
vote(),"ballot, ballot, committeeStatus, committeeStatus, ballot, committeeStatus",True
transferOwnership(address),"owner, owner, owner",True
addOwner(address),"owner, owner, committeeStatus",False
removeOwner(address),"owner, committeeStatus, committeeStatus, owner, committeeStatus",False
pause(),paused,False
unpause(),paused,False
upgrade(address),"implementation, implementation",False
balanceOf(address),balances,False
"allowance(address,address)",allowed,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
"freezeAccount(address,uint256)",frozenExpired,False
unfreezeAccount(address),,False
"constructor(address,address,address,address,address)",opened,False
"initExchanger(string,string,uint256,uint256,address,address,address,address,address)","opened, tokenPerEth, tokenPerEth",True
setExchangeRate(uint256),"opened, tokenPerEth, tokenPerEth",True
getExchangerRate(),tokenPerEth,False
exchangeEtherToToken(),"opened, tokenPerEth, tokenPerEth, tokenPerEth",True
exchangeTokenToEther(uint256),"opened, tokenPerEth, tokenPerEth, tokenPerEth, tokenPerEth",True
"withdrawToken(address,uint256)",,True
"withdrawEther(address,uint256)",,True
closeExchanger(),opened,False
"constructor(address,address,address,address,address)",,False
"function()payableexternal{addresslocalImpl=implementation;require(localImpl!=address(0x0));assembly{letptr:=mload(0x40)switchcalldatasizecase0{}default{calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,localImpl,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}default{return(ptr,size)}}}}()",implementation,True
