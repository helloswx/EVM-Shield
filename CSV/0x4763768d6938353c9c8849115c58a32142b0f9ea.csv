Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
DeLottery(),,True
function()publicpayablewhenNotPaused{require(!isContract(msg.sender));require(msg.value>=ticketPrice);uintavailableTicketsToBuy=maxTickets-getTicketsCount();require(availableTicketsToBuy>0);uintticketsBought=msg.value.div(ticketPrice);uintticketsToBuy;uintrefund=0;if(ticketsBought>availableTicketsToBuy){ticketsToBuy=availableTicketsToBuy;refund=(ticketsBought-availableTicketsToBuy).mul(ticketPrice);}else{ticketsToBuy=ticketsBought;}for(uint16i=0;i<ticketsToBuy;i++){gamblers.push(msg.sender);}prizeFund=prizeFund.add(ticketsToBuy.mul(ticketPrice));refund=refund.add(msg.value%ticketPrice);if(refund>0){msg.sender.transfer(refund);}}(),"ticketPrice, maxTickets, ticketPrice, ticketPrice, prizeFund, prizeFund, ticketPrice, ticketPrice",True
"calculateWinnerPrize(uint,uint)",,False
calculateWinnersCount(uint),,False
runLottery(),"QUORUM, prizeFund, stage, prizeFund, stage",True
getTicketsCount(),,False
setTicketPrice(uint),"ticketPrice, nextTicketPrice, nextTicketPrice",False
setMaxTickets(uint),maxTickets,False
"setAsLotteryRunner(address,bool)",,False
"withdrawEther(address,uint)",,True
