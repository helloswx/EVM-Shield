Function Name,State Variables Modified,Can Transfer Ether
destructor(),,False
disableSelfDestruction(),selfDestructionDisabled,True
triggerSelfDestruction(),selfDestructionDisabled,True
destructor(),deployer,False
setDeployer(address),"deployer, deployer, deployer",False
setOperator(address),"operator, operator, operator",False
setServiceActivationTimeout(uint256),serviceActivationTimeout,False
registerService(address),,False
registerServiceDeferred(address),"serviceActivationTimeout, serviceActivationTimeout",False
deregisterService(address),"registeredServicesMap, registeredServicesMap",False
"enableServiceAction(address,string)","registeredServicesMap, registeredServicesMap, registeredServicesMap, registeredServicesMap",False
"disableServiceAction(address,string)","registeredServicesMap, registeredServicesMap",False
isRegisteredService(address),registeredServicesMap,False
isRegisteredActiveService(address),registeredServicesMap,False
"isEnabledServiceAction(address,string)",registeredServicesMap,False
abs(int256),,False
neg(int256),,False
toNonZeroInt256(uint256),,False
toInt256(uint256),,False
toUInt256(int256),,False
isNonZeroPositiveInt256(int256),,False
isPositiveInt256(int256),,False
isNonZeroNegativeInt256(int256),,False
isNegativeInt256(int256),,False
"clamp(int256,int256,int256)",,False
"clampMin(int256,int256)",,False
"clampMax(int256,int256)",,False
PARTS_PER(),,False
constructor(address),updateDelayBlocksByBlockNumber,False
setOperationalModeExit(),operationalMode,False
isOperationalModeNormal(),operationalMode,False
isOperationalModeExit(),operationalMode,False
updateDelayBlocks(),updateDelayBlocksByBlockNumber,False
updateDelayBlocksCount(),updateDelayBlocksByBlockNumber,False
"setUpdateDelayBlocks(uint256,uint256)",updateDelayBlocksByBlockNumber,False
confirmationBlocks(),confirmationBlocksByBlockNumber,False
confirmationBlocksCount(),confirmationBlocksByBlockNumber,False
"setConfirmationBlocks(uint256,uint256)",confirmationBlocksByBlockNumber,False
tradeMakerFeesCount(),tradeMakerFeeByBlockNumber,False
"tradeMakerFee(uint256,int256)",tradeMakerFeeByBlockNumber,False
"setTradeMakerFee(uint256,int256,,)",tradeMakerFeeByBlockNumber,False
tradeTakerFeesCount(),tradeTakerFeeByBlockNumber,False
"tradeTakerFee(uint256,int256)",tradeTakerFeeByBlockNumber,False
"setTradeTakerFee(uint256,int256,,)",tradeTakerFeeByBlockNumber,False
paymentFeesCount(),paymentFeeByBlockNumber,False
"paymentFee(uint256,int256)",paymentFeeByBlockNumber,False
"setPaymentFee(uint256,int256,,)",paymentFeeByBlockNumber,False
"currencyPaymentFeesCount(address,uint256)",currencyPaymentFeeByBlockNumber,False
"currencyPaymentFee(uint256,address,uint256,int256)","currencyPaymentFeeByBlockNumber, currencyPaymentFeeByBlockNumber",False
"setCurrencyPaymentFee(uint256,address,uint256,int256,,)",currencyPaymentFeeByBlockNumber,False
tradeMakerMinimumFeesCount(),tradeMakerMinimumFeeByBlockNumber,False
tradeMakerMinimumFee(uint256),tradeMakerMinimumFeeByBlockNumber,False
"setTradeMakerMinimumFee(uint256,int256)",tradeMakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFeesCount(),tradeTakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFee(uint256),tradeTakerMinimumFeeByBlockNumber,False
"setTradeTakerMinimumFee(uint256,int256)",tradeTakerMinimumFeeByBlockNumber,False
paymentMinimumFeesCount(),paymentMinimumFeeByBlockNumber,False
paymentMinimumFee(uint256),paymentMinimumFeeByBlockNumber,False
"setPaymentMinimumFee(uint256,int256)",paymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFeesCount(address,uint256)",currencyPaymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFee(uint256,address,uint256)","currencyPaymentMinimumFeeByBlockNumber, currencyPaymentMinimumFeeByBlockNumber",False
"setCurrencyPaymentMinimumFee(uint256,address,uint256,int256)",currencyPaymentMinimumFeeByBlockNumber,False
"feeCurrenciesCount(address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"feeCurrency(uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"setFeeCurrency(uint256,address,uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
walletLockTimeout(),walletLockTimeoutByBlockNumber,False
"setWalletLockTimeout(uint256,uint256)",walletLockTimeoutByBlockNumber,False
cancelOrderChallengeTimeout(),cancelOrderChallengeTimeoutByBlockNumber,False
"setCancelOrderChallengeTimeout(uint256,uint256)",cancelOrderChallengeTimeoutByBlockNumber,False
settlementChallengeTimeout(),settlementChallengeTimeoutByBlockNumber,False
"setSettlementChallengeTimeout(uint256,uint256)",settlementChallengeTimeoutByBlockNumber,False
fraudStakeFraction(),fraudStakeFractionByBlockNumber,False
"setFraudStakeFraction(uint256,uint256)",fraudStakeFractionByBlockNumber,False
walletSettlementStakeFraction(),walletSettlementStakeFractionByBlockNumber,False
"setWalletSettlementStakeFraction(uint256,uint256)",walletSettlementStakeFractionByBlockNumber,False
operatorSettlementStakeFraction(),operatorSettlementStakeFractionByBlockNumber,False
"setOperatorSettlementStakeFraction(uint256,uint256)",operatorSettlementStakeFractionByBlockNumber,False
operatorSettlementStake(),operatorSettlementStakeByBlockNumber,False
"setOperatorSettlementStake(uint256,int256,address,uint256)",operatorSettlementStakeByBlockNumber,False
setEarliestSettlementBlockNumber(uint256),"earliestSettlementBlockNumber, earliestSettlementBlockNumber",False
disableEarliestSettlementBlockNumberUpdate(),earliestSettlementBlockNumberUpdateDisabled,False
setConfiguration(),"configuration, configuration",False
"clamp(uint256,uint256,uint256)",,False
"clampMin(uint256,uint256)",,False
"clampMax(uint256,uint256)",,False
constructor(address),"depositedBalanceType, DEPOSITED_BALANCE_TYPE, settledBalanceType, SETTLED_BALANCE_TYPE, stagedBalanceType, STAGED_BALANCE_TYPE, _allBalanceTypes, settledBalanceType, _allBalanceTypes, depositedBalanceType, _allBalanceTypes, stagedBalanceType, _activeBalanceTypes, settledBalanceType, _activeBalanceTypes, depositedBalanceType",False
"get(address,bytes32,address,uint256)",walletMap,False
"getByIndices(address,bytes32,address,uint256,uint256,uint256)",walletMap,False
"getAll(address,bytes32,address,uint256)",walletMap,False
"idsCount(address,bytes32,address,uint256)",walletMap,False
"hasId(address,bytes32,int256,address,uint256)",walletMap,False
"set(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"setIds(address,bytes32,,address,uint256)",walletMap,False
"add(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"sub(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"hasInUseCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"hasEverUsedCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"fungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"fungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"fungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastFungibleRecord(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"nonFungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastNonFungibleRecord(address,bytes32,address,uint256)",walletMap,False
trackedBalanceTypesCount(),trackedBalanceTypes,False
trackedWalletsCount(),trackedWallets,False
allBalanceTypes(),_allBalanceTypes,False
activeBalanceTypes(),_activeBalanceTypes,False
"trackedWalletsByIndices(uint256,uint256)","trackedWallets, trackedWallets, trackedWallets",False
setBalanceTracker(),"balanceTrackerFrozen, balanceTracker, balanceTracker",False
freezeBalanceTracker(),balanceTrackerFrozen,False
constructor(address),,False
proposalsCount(),proposals,False
"initiateProposal(address,uint256,int256,int256,,uint256,bool)",,False
"terminateProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"terminateProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"disqualifyProposal(address,,address,uint256,uint256,bytes32,string)","proposalIndexByWalletCurrency, proposals, proposals, configuration, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"hasProposal(address,)",proposalIndexByWalletCurrency,False
"hasProposalTerminated(address,)","proposalIndexByWalletCurrency, proposals",False
"hasProposalExpired(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalReferenceBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDefinitionBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalExpirationTime(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStatus(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStageAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalTargetBalanceAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalWalletInitiated(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationChallenger(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateKind(address,)","proposalIndexByWalletCurrency, proposals",False
