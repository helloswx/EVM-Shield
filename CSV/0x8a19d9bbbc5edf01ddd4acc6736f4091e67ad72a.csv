Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint)",,False
Owned(),owner,True
transferOwnership(address),owner,False
getOwner(),owner,False
AlsIco(),alsToken,False
getPrice(),"tokensSold, oneThousandAls, tokensSold, oneThousandAls, tokensSold, oneThousandAls, tokensSold, oneThousandAls",False
"function()payablepubliconlyAfterStartonlyBeforeEnd{uint256availableTokens=alsToken.balanceOf(this);require(availableTokens>0);uint256etherAmount=msg.value;require(etherAmount>0);uint256price=getPrice();uint256tokenAmount=safeMul(etherAmount,price);if(tokenAmount<=availableTokens){amountRaised=safeAdd(amountRaised,etherAmount);tokensSold=safeAdd(tokensSold,tokenAmount);alsToken.transfer(msg.sender,tokenAmount);FundTransfer(msg.sender,etherAmount,true);}else{uint256etherToSpend=safeDiv(availableTokens,price);amountRaised=safeAdd(amountRaised,etherToSpend);tokensSold=safeAdd(tokensSold,availableTokens);alsToken.transfer(msg.sender,availableTokens);FundTransfer(msg.sender,etherToSpend,true);uint256amountToRefund=safeSub(etherAmount,etherToSpend);msg.sender.transfer(amountToRefund);}}()","alsToken, amountRaised, amountRaised, tokensSold, tokensSold, alsToken, amountRaised, amountRaised, tokensSold, tokensSold, alsToken",True
withdrawEther(uint),"owner, owner",True
