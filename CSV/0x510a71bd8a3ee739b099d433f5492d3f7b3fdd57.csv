Function Name,State Variables Modified,Can Transfer Ether
OwnedToken(),owner,True
transferOwnership(address),owner,False
"NamedOwnedToken(string,string)","name, symbol",False
"changeName(string,string)","name, symbol",False
"TSBToken(string,string)","tokenDecimals, decimals, tokenDecimalsLeft, startRebuyTime, endSaleTime",False
"transfer(address,uint256)",,True
balanceOf(address),balances,False
totalSupply(),_totalSupply,False
"transferFrom(address,address,uint256)","allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"deleteTokens(address,uint256)",,False
function()publicpayable{}(),,False
WithdrawLeftToOwner(uint),owner,True
"mintToken(address,uint256)","balances, tokenDecimals, paidETH, accrueDividendsPerXTokenETH, accrueCouponsPerXTokenETH, _totalSupply, owner",False
finishMinting(),"mintingFinished, endSaleTime, startRebuyTime, endSaleTime",False
WithdrawDividendsAndCoupons(),,True
WithdrawDividendsAndCouponsTo(address),,True
"accrueDividendandCoupons(uint,uint)","_totalSupply, tokenDecimals, accrueDividendsPerXTokenETH, accrueDividendsPerXTokenETH, accrueCouponsPerXTokenETH, accrueCouponsPerXTokenETH",False
setTokenPrice(uint),tokenPriceETH,False
InformRebuy(uint),,True
"InformRebuyTo(uint,address)",,False
StartRebuy(),rebuyStarted,False
doRebuy(),,True
doRebuyTo(address),,False
"TSBCrowdFundingContract(uint,uint,string,string)","bonusCapUSD, bonusCapUSD, USDDecimals",False
"SetStartTime(uint,uint)","startTime, bonusEndTime, endTime",False
assignTokenContract(address),"tokenReward, tokenReward",True
"function()publicpayable{boolwithinPeriod=now>=startTime&&now<=endTime;boolnonZeroPurchase=msg.value!=0;require(withinPeriod&&nonZeroPurchase&&(crowdSaleState==CrowdSaleState.NotFinished));uintbonuspos=0;if(now<=bonusEndTime){bytes32code=sha3(msg.data);bonuspos=bonusesMapPos[code];}ReceiveAmount(msg.sender,msg.value,0,now,bonuspos);}()","startTime, endTime, crowdSaleState, bonusEndTime, bonusesMapPos",True
"AddBTCTransactionFromArray(,,,)",,False
"AddBTCTransaction(address,uint,uint,bytes4)","startTime, endTime, bonusEndTime, bonusesMapPos",False
"SetCryptoPrice(uint,uint)","ETHPrice, BTCPrice",False
"convertToUSD(uint,uint)","ETHPrice, BTCPrice, PriceDecimals",False
collectedSum(),"ETHCollected, BTCCollected",False
checkGoalReached(),"amountRaisedUSD, amountRaisedUSD, fundingGoalUSD, USDDecimals, crowdSaleState, TokenAmountToPay, amountRaisedUSD, owner, amountRaisedUSD, crowdSaleState",False
checkMaxCapReached(),"amountRaisedUSD, amountRaisedUSD, fundingMaxCapUSD, USDDecimals, crowdSaleState, TokenAmountToPay, amountRaisedUSD, owner, amountRaisedUSD",False
DistributeNextNTokens(uint),"BonusesDistributed, DistributionNextPos, balanceList, balanceList, DistributionNextPos, balanceList, balanceList, TokenAmountToPay, DistributionNextPos, balanceList, balanceList, priceUSD, tokenReward, balanceList, balanceList, balanceList, balanceList, TokenAmountToPay, DistributionNextPos",False
safeWithdrawal(),"crowdSaleState, balanceMapPos, balanceList, balanceList, balanceList",True
killContract(),"endTime, selfDestroyTime, tokenReward, owner, owner",True
"AddBonusToListFromArray(,,)",,False
"AddBonusToList(bytes32,uint,uint)","bonusesMapPos, bonusesList, bonusesList, bonusesList, bonusesMapPos",False
calcNextNBonuses(uint),"crowdSaleState, BonusesDistributed, BonusCalcPos, bonusesList, bonusesList, bonusCapUSD, BonusCalcPos, bonusesList, bonusesList, balanceList, bonusesList, bonusesList, bonusesList, bonusesList, priceUSD, bonusesList, balanceList, bonusesList, BonusesDistributed, bonusCapUSD, BonusCalcPos, bonusesList, BonusesDistributed",False
