Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
balanceOf(address),,False
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
owned(),owner,True
changeOwner(address),,False
setOwner(),owner,True
Crowdsale(),"purseExchange, AgreementUrlRu, AgreementHashRu, AgreementUrlEn, AgreementHashEn, fiatCost, currency, rate, currency, fiatCost, startPREICO, periodPREICO, start, period, softcap, hardcap, bounty, waitTokensPeriod, waittokens, totalSupply, balanceOf, totalSupply",False
setCurrency(uint),"currency, rate, currency, fiatCost",False
statusICO(),"startPREICO, startPREICO, periodPREICO, startPREICO, periodPREICO, start, start, start, period, hardcap, start, period, softcap, start, start, period, hardcap, start, period, softcap, start, period, waitTokensPeriod, start, period, waitTokensPeriod, softcap",False
correctPreICOPeriod(uint),periodPREICO,False
"fromOtherCurrencies(uint256,address)","fiatCost, fiatCost, balanceOf, balanceOf, balanceOf, balanceOf",False
"toReserved(address,uint256)",,False
isReserved(address),,False
refund(),"userBalances, userBalances",True
"transferMoneyForTaskSolutions(string,uint)","currency, consumptionPointer, consumptionPointer, consumptionPointer",True
showMoneyTransfer(uint),,False
openClosedToken(),"balanceOf, balanceOf, waittokens, balanceOf, balanceOf, waittokens, waittokens",False
finishPREICO(),periodPREICO,False
finishICO(),"softcap, period, hardcap, totalSupply, bounty, waittokens, balanceOf, balanceOf, bounty, balanceOf, balanceOf, bounty, bounty, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf, balanceOf",True
"function()publicpayable{uintallMoney=msg.value;uint256tokens=0;uint256returnedMoney=0;uint256maxToken;uint256accessTokens;uint256restMoney;uint256calcMoney;if(preICOreserved[msg.sender]>0){PREICOcap=PREICOcap.add(preICOreserved[msg.sender]);preICOreserved[msg.sender]=0;}uintICOstatus=statusICO();if(ICOstatus==1){maxToken=PREICOcap-PayToken;tokens=rate.mul(allMoney).add(rate.mul(allMoney).mul(bonusPREICO).div(100)).div(1ether);accessTokens=tokens;if(tokens>maxToken){accessTokens=maxToken;returnedMoney=allMoney.sub(allMoney.mul(accessTokens).div(tokens));allMoney=allMoney.sub(returnedMoney);}restMoney=allMoney.mul(restrictedPREICOpersent).div(100);restricted.transfer(restMoney);calcMoney=allMoney-restMoney;multisigMoney=multisigMoney.add(calcMoney);userBalances[msg.sender]=userBalances[msg.sender].add(calcMoney);}elseif(ICOstatus==3){maxToken=hardcap-PayToken;tokens=rate.mul(allMoney).div(1ether);accessTokens=tokens;if(tokens>maxToken){accessTokens=maxToken;returnedMoney=allMoney.sub(allMoney.mul(accessTokens).div(tokens));allMoney=allMoney.sub(returnedMoney);}restMoney=allMoney.mul(restrictedPercent).div(100);calcMoney=allMoney-restMoney;restrictedMoney=restrictedMoney.add(restMoney);multisigMoney=multisigMoney.add(calcMoney);userBalances[msg.sender]=userBalances[msg.sender].add(allMoney);}if(accessTokens>0){balanceOf[msg.sender]=balanceOf[msg.sender].add(accessTokens);balanceOf[this]=balanceOf[this].sub(accessTokens);PayToken=PayToken.add(accessTokens);emitTransfer(this,msg.sender,accessTokens);}if(returnedMoney>0)msg.sender.transfer(returnedMoney);}()","rate, rate, userBalances, userBalances, hardcap, rate, userBalances, userBalances, balanceOf, balanceOf, balanceOf, balanceOf",True
StoneToken(),,False
"transfer(address,uint256)","balanceOf, balanceOf, balanceOf",True
"transferFrom(address,address,uint256)","balanceOf, allowed, balanceOf, balanceOf, balanceOf, balanceOf, allowed, allowed",True
CrowdsaleStoneToken(),,False
