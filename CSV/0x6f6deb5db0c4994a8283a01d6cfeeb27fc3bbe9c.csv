Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"transfer(address,uint)","owner, owner, owner, owner",True
balanceOf(address),,False
"transferFrom(address,address,uint)",,True
"approve(address,uint)",,True
"allowance(address,address)",,False
SmartBillions(),"owner, animator, owner, dividendPeriod, dividends, dividends",True
hashesLength(),hashes,False
walletBalanceOf(address),,False
walletPeriodOf(address),,False
walletTimeOf(address),,False
betValueOf(address),,False
betHashOf(address),,False
betBlockNumberOf(address),,False
dividendsBlocks(),"investStart, hashFirst, hashesSize, dividendPeriod, hashesSize, hashFirst, hashesSize",False
changeOwner(address),owner,True
changeAnimator(address),animator,True
setInvestStart(uint),"investStart, hashFirst, investStart",False
setBetMax(uint),hashBetMax,False
resetBet(),"hashNext, hashBetSum",False
coldStore(uint),"investBalance, walletBalance, investBalance, investBalanceGot, coldStoreLast, coldStoreLast",True
hotStore(),walletBalance,True
houseKeeping(),"investStart, investStart, hashesSize, investStart, hashFirst, hashFirst, hashesSize, dividends, dividends, dividendPeriod, investStart, dividendPeriod, dividends, dividendPeriod",False
payWallet(),walletBalance,True
investDirect(),owner,False
invest(address),"investStart, investStart, hashesSize, investBalance, investBalanceMax, investBalanceMax, investBalance, investBalanceMax, investBalance, investBalance, investBalanceMax, investBalanceGot, investBalanceMax, investStart, investBalance, investBalanceGot, owner, walletBalance, owner, walletBalance, owner, dividendPeriod, owner, animator, totalSupply, owner, animator",True
disinvest(),"investStart, investBalance",True
payDividends(),investStart,True
betOf(address),"hashesSize, hashFirst",False
won(),"hashesSize, hashFirst, maxWin, maxWin",True
function()payableexternal{if(msg.value>0){if(investStart>1){invest(owner);}else{play();}return;}if(investStart==0&&balances[msg.sender]>0){commitDividend(msg.sender);}won();}(),"investStart, owner, investStart",True
play(),,True
playRandom(address),,True
"playSystem(uint,address)","hashBetMax, investStart, dividends, dividendPeriod, walletBalance, hashNext, hashNext, hashBetSum, hashBetSum, hashBetMax, hashNext, hashBetSum, hashBetSum, hashNext, hashNext, hashNext",True
addHashes(uint),"hashFirst, hashesSize, hashes, hashesSize, hashes, hashesSize, hashes, hashes, hashes, hashes, hashesSize, hashFirst, hashLast, hashFirst, hashes",False
addHashes128(),,False
putHash(),"hashLast, hashFirst, hashes, hashesSize, hashLast",False
putHashes(uint),,False
