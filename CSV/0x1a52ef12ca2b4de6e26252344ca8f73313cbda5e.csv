Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
"receiveApproval(address,uint256,address,bytes)",,False
"transferFrom(address,address,uint256)","allowance, allowance",True
"transfer(address,uint256)",,True
"mintToken(address,uint256)","balances, totalSupply",False
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balances, balances, totalSupply",True
"burnFrom(address,uint256)","balances, allowance, balances, allowance, totalSupply",True
balanceOf(address),balances,False
"allowance(address,address)",allowance,False
JWCToken(),"totalSupply, tokenPreSale, tokenPublicSale, tokenReserve, tokenTeamSupporter, tokenAdvisorPartners",False
setIcoContract(address),icoContract,False
"sell(address,uint256)","icoContract, balances, balances",True
"sellSpecialTokensForPreSale(address,uint256)","icoContract, balances, balances, tokenPreSale, tokenPreSale, totalSupply, totalSupply",True
"sellSpecialTokensForPublicSale(address,uint256)","icoContract, balances, balances, tokenPublicSale, tokenPublicSale, totalSupply, totalSupply",True
"payBonusAffiliate(address,uint256)","icoContract, balances, balances, totalSupply, totalSupply",True
Affiliate(),"isAffiliate, affiliateLevel, affiliateRate",False
enableAffiliate(),"isAffiliate, isAffiliate",False
disableAffiliate(),"isAffiliate, isAffiliate",False
getAffiliateLevel(),affiliateLevel,False
setAffiliateLevel(uint256),affiliateLevel,False
getReferrerAddress(address),referral,False
getRefereeAddress(address),"referralCount, referralCount, referral, referralIndex, referralIndex",False
"setReferralAddress(address,address)","referralIndex, referralCount, referral, referralCount, referralBalance",False
getAffiliateRate(uint256),affiliateRate,False
"setAffiliateRate(uint256,uint256)",affiliateRate,False
balanceAffiliateOf(address),referralBalance,False
payAffiliateToAddress(address),,False
Bonus(),isBonus,False
enableBonus(),"isBonus, isBonus",False
disableBonus(),"isBonus, isBonus",False
getBonusByTime(),"phasePresale_From, phasePresale_To, phasePublicSale1_From, phasePublicSale1_To, phasePublicSale2_From, phasePublicSale2_To, phasePublicSale3_From, phasePublicSale3_To",False
getBonusByETH(uint256),"phasePresale_From, phasePresale_To, decimals, decimals",False
balanceBonusOf(address),bonusAccountBalances,False
payBonusToAddress(address),,False
IcoContract(address),"tokenAddress, tokenAddress, totalTokenSale, tokenRemainPreSale, tokenRemainPublicSale, isFinalized",False
changeETH2Token(uint256),"maxGasRefund, minContribution, tokenExchangeRate, tokenRemainPreSale, tokenRemainPublicSale",False
"function()publicpayablewhenNotPaused{require(!isFinalized);require(msg.sender!=address(0));uint256etherRecev=msg.value+maxGasRefund;require(etherRecev>=minContribution);uint256tokens=etherRecev.mul(tokenExchangeRate);uint256phaseICO=getCurrentICOPhase();require(phaseICO!=0);uint256tokenRemain=0;if(phaseICO==1){tokenRemain=tokenRemainPreSale;}elseif(phaseICO==2||phaseICO==3||phaseICO==4){tokenRemain=tokenRemainPublicSale;}require(tokenRemain>0);if(tokenRemain<tokens){uint256tokensToIncrease=tokens.sub(tokenRemain);ccc.sell(msg.sender,tokenRemain);if(phaseICO==1){ccc.sellSpecialTokensForPreSale(msg.sender,tokensToIncrease);}elseif(phaseICO==2||phaseICO==3||phaseICO==4){ccc.sellSpecialTokensForPublicSale(msg.sender,tokensToIncrease);}tokenRemain=0;}else{ccc.sell(msg.sender,tokens);tokenRemain=tokenRemain.sub(tokens);}if(phaseICO==1){tokenRemainPreSale=tokenRemain;}elseif(phaseICO==2||phaseICO==3||phaseICO==4){tokenRemainPublicSale=tokenRemain;}ethFundDeposit.transfer(this.balance);if(isBonus){uint256bonusByETH=getBonusByETH(etherRecev);uint256bonusTokenByETH=bonusByETH.mul(tokenExchangeRate);uint256bonusTokenByTime=tokens.mul(getBonusByTime()).div(100);if(bonusAccountBalances[msg.sender]==0){bonusAccountIndex[bonusAccountCount]=msg.sender;bonusAccountCount++;}uint256bonusToken=bonusTokenByTime+bonusTokenByETH;bonusAccountBalances[msg.sender]=bonusAccountBalances[msg.sender].add(bonusToken);}if(isAffiliate){addresschild=msg.sender;for(uint256i=0;i<affiliateLevel;i++){uint256giftToken=affiliateRate[i].mul(tokens).div(100);addressparent=referral[child];if(parent!=address(0x00)){referralBalance[child]=referralBalance[child].add(giftToken);}child=parent;}}}()","isFinalized, maxGasRefund, minContribution, tokenExchangeRate, tokenRemainPreSale, tokenRemainPublicSale, tokenRemainPreSale, tokenRemainPublicSale, ethFundDeposit, isBonus, tokenExchangeRate, bonusAccountBalances, bonusAccountIndex, bonusAccountCount, bonusAccountCount, bonusAccountBalances, bonusAccountBalances, isAffiliate, affiliateLevel, affiliateRate, referral, referralBalance, referralBalance",True
payAffiliateToAddress(address),"referral, referralBalance, referralBalance",False
payBonusToAddress(address),"bonusAccountBalances, bonusAccountBalances",False
finalize(),"isFinalized, isFinalized, ethFundDeposit",True
getCurrentICOPhase(),"phasePresale_From, phasePresale_To, phasePublicSale1_From, phasePublicSale1_To, phasePublicSale2_From, phasePublicSale2_To, phasePublicSale3_From, phasePublicSale3_To",False
getTokenSold(),"tokenRemainPreSale, tokenRemainPreSale, tokenRemainPublicSale",False
setTokenExchangeRate(uint256),tokenExchangeRate,False
setMinContribution(uint256),minContribution,False
setEthFundDeposit(address),ethFundDeposit,False
setMaxGasRefund(uint256),maxGasRefund,False
