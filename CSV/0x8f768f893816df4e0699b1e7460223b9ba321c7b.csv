Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),,True
pause(),paused,False
unpause(),paused,False
currentTime(),,False
terminate(),saleClosed,False
setRate(uint),rate,False
ownerUnlockFund(),fundingGoalReached,False
changeStartTime(uint256),startTime,False
changeEndTime(uint256),endTime,False
changeMinContribution(uint256),"minContribution, decimals",False
constructor(),owner,True
totalSupply(),totalSupply_,False
"transfer(address,uint256)","balances, balances, balances, balances, balances",True
balanceOf(address),balances,False
"transferFrom(address,address,uint256)","balances, allowed, balances, balances, balances, balances, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint256)","allowed, allowed, allowed",True
"decreaseApproval(address,uint256)","allowed, allowed, allowed, allowed",True
burn(uint256),,True
"burnFrom(address,uint256)","allowed, allowed, allowed",True
transferOwnership(address),,True
constructor(address),"totalSupply_, INITIAL_SUPPLY, adminAllowance, ADMIN_ALLOWANCE, balances, adminAllowance, adminAllowance, adminAddr, adminAddr, adminAllowance",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","adminAddr, adminAllowance, adminAllowance",True
"constructor(address,uint,uint,uint,uint,uint,uint,address,address)","beneficiary, fundingGoal, fundingCap, minContribution, startTime, endTime, rate, tokenReward, manager, decimals, tokenReward",False
"function()publicpayablewhenNotPausedbeforeDeadlineafterStartTimesaleNotClosednonReentrant{require(msg.value>=minContribution,""Value should be greater than minimum contribution"");require(isApprovedUser(msg.sender),""Only the approved users are allowed to participate in ICO"");uintamount=msg.value;uintcurrentBalance=balanceOf[msg.sender];balanceOf[msg.sender]=currentBalance.add(amount);amountRaised=amountRaised.add(amount);uintnumTokens=amount.mul(rate);if(tokenReward.transferFrom(tokenReward.owner(),msg.sender,numTokens)){emitFundTransfer(msg.sender,amount,true);checkFundingGoal();checkFundingCap();}else{revert(""Transaction Failed. Please try again later."");}}()","minContribution, balanceOf, balanceOf, amountRaised, amountRaised, rate, tokenReward, tokenReward",True
"ownerAllocateTokens(address,uint,uint)","tokenReward, tokenReward, balanceOf, balanceOf, amountRaised, amountRaised",True
ownerSafeWithdrawal(),"fundingGoalReached, beneficiary, beneficiary",True
safeWithdrawal(),"fundingGoalReached, balanceOf, balanceOf, refundAmount, refundAmount",True
approveUser(address),approvedUsers,False
disapproveUser(address),approvedUsers,False
changeManager(address),manager,False
changeTokenAddress(address),tokenReward,False
