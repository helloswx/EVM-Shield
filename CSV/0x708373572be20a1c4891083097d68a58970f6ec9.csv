Function Name,State Variables Modified,Can Transfer Ether
setLock(bool),,False
"mint(address,uint256)",,False
"demint(address,uint256)",,False
decimals(),,False
totalSupply(),,False
balanceOf(address),,False
advanceState(),,False
transferOwnership(address),"owner, owner",False
balanceOf(address),managedTokenLedger,False
totalSupply(),managedTokenLedger,False
constructor(address),managedTokenLedger,False
"setNameAndTicker(string,string)","name, symbol",False
setBonusState(uint256),bonusState,False
setLedger(address),managedTokenLedger,False
function()publicpayablestateTransitionnotHalted{require(msg.value>0);require(ICOstate==ICOStateEnum.Started);assert(ICOBuy());}(),ICOstate,False
finalize(),"ICOstate, owner, ICOcollected, TakedFunds",True
setHalt(bool),halted,False
getBonusMultipierInPercents(uint256),"ICOamountBonusLimits, ICOamountBonusLimits, ICOamountBonusMultipierInPercent",False
recoverLeftoversICO(),"ICOstate, weiToRecoverICO, weiToRecoverICO",True
refundICO(address),"ICOstate, weiForRefundICO, weiForRefundICO, balancesForICO, balancesForICO, managedTokenLedger",True
withdrawFunds(),"Softcap, ICOcollected, owner, ICOcollected, TakedFunds, TakedFunds, ICOcollected",True
setSoftCap(uint256),Softcap,False
setHardCap(uint256),Hardcap,False
setEndDate(uint256),ICOend,False
"manualSendTokens(address,uint256)","managedTokenLedger, balancesForICO, balancesForICO, ICOtokensSold, ICOtokensSold",False
