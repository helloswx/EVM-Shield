Function Name,State Variables Modified,Can Transfer Ether
Controlled(),controller,True
changeController(address),controller,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
"onBurn(address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
"MiniMeToken(address,address,uint,string,uint8,string,bool)","tokenFactory, name, decimals, symbol, parentToken, parentSnapShotBlock, transfersEnabled, creationBlock",True
"transfer(address,uint256)",transfersEnabled,True
"transferFrom(address,address,uint256)","controller, transfersEnabled",True
balanceOf(address),,False
"approve(address,uint256)","transfersEnabled, controller, controller",True
"allowance(address,address)",,False
"approveAndCall(address,uint256,bytes)",,True
totalSupply(),,False
"balanceOfAt(address,uint)","parentToken, parentToken, parentSnapShotBlock",False
totalSupplyAt(uint),"parentToken, parentToken, parentSnapShotBlock",False
totalPledgedFees(),,False
totalPledgedFeesAt(uint),"parentToken, parentToken, parentSnapShotBlock",False
pledgeFees(uint),,False
reducePledgedFees(uint),,False
"createCloneToken(string,uint8,string,uint,bool)",tokenFactory,True
"generateTokens(address,uint)",,False
"destroyTokens(address,uint)",,False
enableTransfers(bool),transfersEnabled,True
function()publicpayable{require(isContract(controller));require(TokenController(controller).proxyPayment.value(msg.value)(msg.sender));}(),"controller, controller",True
claimTokens(address),"controller, controller, controller",True
"createCloneToken(address,uint,string,uint8,string,bool)",,True
"constructor(address,address,uint,string,uint8,string,bool,address)",terminator,False
recycle(),"terminator, terminator",True
"createDestructibleCloneToken(address,uint,string,uint8,string,bool)",,True
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
"constructor(address,address)","tokenFactory, nectarToken, admins, isDelegate",True
"startTokenVotes(,uint,uint,uint,)","MAX_CANDIDATES, isWinner, consideredTokens, tokenBatches, tokenBatches, tokenBatches, tokenBatches, tokenExists, consideredTokens, yesVotes, lastVote, tokenExists, tokenFactory, nectarToken, nectarToken",False
"vote(uint,uint)","myDelegate, isWinner, consideredTokens, tokenBatches, tokenBatches, tokenBatches, lastVote, consideredTokens, yesVotes, lastVote, consideredTokens, lastVote, consideredTokens, isDelegate, myVotes, myVotes, votesSpentThisRound, yesVotes, votesSpentThisRound, consideredTokens",True
unregisterAsDelegate(),"isDelegate, allDelegates, allDelegates, allDelegates, allDelegates, allDelegates, allDelegates, allDelegates, allDelegates, isDelegate",True
registerAsDelegate(bytes32),"myDelegate, isDelegate, isDelegate, allDelegates, allDelegates",True
undelegateVote(),"myDelegate, myDelegate, myVotes, myVotes, myVotes, myVotes, myVotes, myVotes, myVotes, myVotes, myDelegate",True
delegateVote(address),"isDelegate, isDelegate, myDelegate, myDelegate, myVotes",True
delegateCount(),allDelegates,False
getWinners(),"tokenBatches, tokenBatches, tokenBatches, consideredTokens, isWinner, consideredTokens, isWinner, consideredTokens, consideredTokens, consideredTokens, isWinner, consideredTokens, consideredTokens, consideredTokens, isWinner, consideredTokens, consideredTokens, isWinner, consideredTokens, consideredTokens",False
numberOfProposals(),tokenBatches,False
addAdmin(address),admins,False
removeAdmin(address),admins,False
proposal(uint),"tokenBatches, tokenBatches",True
getConsideredTokens(),"consideredTokens, consideredTokens, isWinner, consideredTokens, consideredTokens",False
getVotes(),"consideredTokens, consideredTokens",False
getCurrentVotes(uint),"tokenBatches, tokenBatches, yesVotes, lastVote, consideredTokens, yesVotes, lastVote, consideredTokens",False
isAdmin(address),admins,False
proxyPayment(address),,False
"onTransfer(address,address,uint)",,False
"onApprove(address,address,uint)",,False
gaveVote(address),"tokenBatches, tokenBatches, votesSpentThisRound, myDelegate, votesSpentThisRound",False
