Function Name,State Variables Modified,Can Transfer Ether
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
function()publicpayable{revert();}(),,False
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
"mint(address,uint256)","totalSupply, totalSupply",False
finishMinting(),mintingFinished,False
countOfAddresses(),addresses,False
"mint(address,uint256)",,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
retrieveTokens(address),owner,True
finishMinting(uint),"invested, buyBackInvestedValue, tokensAfterCrowdsale, totalSupply, startBuyBackDate, endBuyBackDate, startBuyBackDate, toBuyBack, tokensAfterCrowdsale",False
lockAddress(address),lockAddresses,False
unlockAddress(address),lockAddresses,False
payDividendsManually(),"dividends, dividends, dividends, ethToDividendsNeeds, ethToDividendsNeeds",True
resetDividendsCalculation(),"dividendsCalculated, dividendsPayed",False
payDividends(uint),"dividendsPayed, dividendsCalculated, dividendsPayedIndex, addresses, addresses, dividendsPayedIndex, lockAddresses, dividends, dividends, dividends, ethToDividendsNeeds, ethToDividendsNeeds, dividendsPayedIndex, dividendsPayedIndex, addresses, dividendsPayedIndex, dividendsPayed, dividendsCalculated",True
"calculateDividends(uint,uint)","dividendsCalculated, dividendsIndex, addresses, addresses, dividendsIndex, invested, PERCENT_RATE, totalSupply, ethToDividendsNeeds, ethToDividendsNeeds, dividends, dividends, dividendsIndex, dividendsIndex, addresses, dividendsIndex, dividendsCalculated, dividendsPayed",False
withdraw(),owner,True
deposit(),,False
function()publicpayable{deposit();}(),,False
setHardcap(uint),hardcap,False
setStart(uint),start,False
setWallet(address),wallet,False
setPrice(uint),price,False
setMinInvestedLimit(uint),minInvestedLimit,False
milestonesCount(),milestones,False
"addMilestone(uint,uint)",milestones,False
end(),"start, milestones, milestones",False
getMilestoneBonus(),"start, milestones, milestones",False
"createTokensManually(address,uint)","start, token",False
createTokens(),"start, invested, hardcap, wallet, invested, invested, price, DIVIDER, PERCENT_RATE, token",True
finishMinting(),"token, invested, token, owner",True
function()externalpayable{createTokens();}(),,False
retrieveTokens(address),wallet,True
MilkCoinTokenCrowdsale(),,True
