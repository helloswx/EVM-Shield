Function Name,State Variables Modified,Can Transfer Ether
"function()publicpayable{if(msg.value>0)emitDeposit(msg.sender,msg.value);}()",,True
"constructor(,uint)","isOwner, isOwner, owners, required",False
addOwner(address),"isOwner, owner, owners, owner, owner",False
removeOwner(address),"isOwner, owner, owners, owners, owner, owners, owners, owners, owners, required, owners, owners, owner",False
"replaceOwner(address,address)","owners, owners, owner, owners, isOwner, owner, isOwner, owner",False
changeRequirement(uint),required,False
"submitTransaction(address,uint,bytes)",,False
confirmTransaction(uint),confirmations,True
revokeConfirmation(uint),confirmations,True
executeTransaction(uint),"transactions, transactions, transactions, transactions, transactions",True
isConfirmed(uint),"owners, confirmations, owners, required",False
getConfirmationCount(uint),"owners, confirmations, owners",False
"getTransactionCount(bool,bool)","transactionCount, transactions, transactions",False
getOwners(),owners,False
getConfirmations(uint),"owners, owners, confirmations, owners, owners",False
"getTransactionIds(uint,uint,bool,bool)","transactionCount, transactionCount, transactions, transactions",False
burnTokens(address),,False
"tokenFallback(address,uint,bytes)",,False
"tokenFallbackBuyer(address,uint,address)",,False
"tokenFallbackExchange(address,uint,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(address,address,address)","escrow, namiMultiSigWallet, namiPresale",False
"transferForTeam(address,uint256)",,True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","allowance, allowance",True
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
changeTransferable(),"TRANSFERABLE, TRANSFERABLE",False
changeEscrow(address),escrow,False
changeBinary(uint),binary,False
changeBinaryAddress(address),binaryAddress,False
getPrice(),binary,False
function()payablepublic{buy(msg.sender);}(),,True
buy(address),"currentPhase, binaryAddress, totalSupply, TOKEN_SUPPLY_LIMIT, balanceOf, balanceOf, totalSupply, totalSupply",True
burnTokens(address),"currentPhase, balanceOf, balanceOf, totalSupply, crowdsaleManager, totalSupply, currentPhase",False
setPresalePhase(),"currentPhase, currentPhase, currentPhase, currentPhase, crowdsaleManager, currentPhase, currentPhase, totalSupply, currentPhase",False
withdrawEther(uint),"namiMultiSigWallet, namiMultiSigWallet",True
"safeWithdraw(address,uint)",namiMultiSigWallet,True
setCrowdsaleManager(address),"currentPhase, crowdsaleManager",False
"migrateToken(address,address)",,False
migrateForInvestor(),,True
"transferToExchange(address,uint,uint)","balanceOf, balanceOf, balanceOf, balanceOf",True
"transferToBuyer(address,uint,address)","balanceOf, balanceOf, balanceOf, balanceOf",True
"canCall(address,address,bytes4)",,False
DSAuth(),owner,True
setOwner(address),"owner, owner",False
setAuthority(),"authority, authority",False
stop(),stopped,False
start(),stopped,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"approve(address,uint)",,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
DSTokenBase(uint),,True
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,True
"transferFrom(address,address,uint)",,True
"approve(address,uint)",,True
DSToken(bytes32),symbol,False
approve(address),,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,True
"push(address,uint)",,True
"pull(address,uint)",,True
"move(address,address,uint)",,True
mint(uint),,True
burn(uint),,True
"mint(address,uint)",,False
"burn(address,uint)",,True
setName(bytes32),name,False
"constructor(address,address,address,address)","escrow, namiMultiSigWallet, NamiAddr, DaiAddress",False
changeEscrow(address),escrow,False
changeMinWithdraw(uint),minWithdraw,False
changeMaxWithdraw(uint),maxWithdraw,False
"withdrawEther(uint,address)",namiMultiSigWallet,True
withdrawNac(uint),"namiMultiSigWallet, NamiAddr, namiMultiSigWallet",True
withdrawDai(uint),"namiMultiSigWallet, DaiAddress, namiMultiSigWallet",True
setController(address),"isController, isController",False
removeController(address),"isController, isController",False
"withdrawToken(address,uint)","minWithdraw, maxWithdraw, DaiAddress",True
