Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
"receiveApproval(address,uint256,address,bytes)",,False
constructor(),owner,True
transferOwnership(address),newOwner,False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
constructor(),"symbol, name, decimals, crowdsaleEnabled, ethPerToken, bonusMinEth, bonusPct, owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint)",,True
"approve(address,uint)",,True
"transferFrom(address,address,uint)",,True
"allowance(address,address)",,False
"approveAndCall(address,uint,bytes)",,True
"transferAnyERC20Token(address,uint)",owner,True
"function()publicpayable{require(crowdsaleEnabled);uintethValue=msg.value;uinttokens=ethValue.mul(ethPerToken);if(bonusPct>0&&ethValue>=bonusMinEth){uintbonus=tokens.div(100).mul(bonusPct);emitBonus(msg.sender,bonus);tokens=tokens.add(bonus);}balances[owner]=balances[owner].sub(tokens);balances[msg.sender]=balances[msg.sender].add(tokens);emitTransfer(owner,msg.sender,tokens);}()","crowdsaleEnabled, ethPerToken, bonusPct, bonusMinEth, bonusPct, owner, owner, owner",True
enableCrowdsale(),crowdsaleEnabled,False
disableCrowdsale(),crowdsaleEnabled,False
setTokenPrice(uint),ethPerToken,False
"setBonus(uint,uint)","bonusMinEth, bonusPct",False
burn(uint256),,True
withdraw(uint),owner,True
