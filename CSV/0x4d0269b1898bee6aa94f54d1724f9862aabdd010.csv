Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"mint(address,uint256)",,False
finishMinting(),mintingFinished,False
pause(),paused,False
unpause(),paused,False
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,False
"increaseApproval(address,uint)",,False
"decreaseApproval(address,uint)",,False
REBToken(),,False
checkBalanceTier(address),,False
"LockTokenAllocation(,uint256,uint256,uint256)","REB, unlockedAt, canSelfDestruct, totalLockTokenAllocation",False
"addLockTokenAllocation(address,uint256)","lockedAllocations, allocatedTokens, allocatedTokens, allocatedTokens, totalLockTokenAllocation, lockedAllocations",False
unlock(),"REB, unlockedAt, tokensCreated, tokensCreated, REB, lockedAllocations, lockedAllocations, REB",True
kill(),"canSelfDestruct, REB, REB, owner",True
"Crowdsale(uint256,address,)","rate, wallet, token",False
function()externalpayable{buyTokens(msg.sender);}(),,True
buyTokens(address),"weiRaised, weiRaised",True
"TimedCrowdsale(uint256,uint256)","openingTime, closingTime",False
hasClosed(),closingTime,False
finalize(),"isFinalized, isFinalized",False
addToWhitelist(address),whitelist,False
addManyToWhitelist(),whitelist,False
removeFromWhitelist(address),whitelist,False
"REBCrowdsale(uint256,uint256,,uint256,address,address)","bountyWallet, token",False
setRate(uint256),"rate, rate",False
"mintTokensFor(address,uint256)","token, TOTAL_TOKENS_FOR_CROWDSALE",False
"setTeamAndAdvisorAndAirdropAddresses(address,address,address)","teamReserve, advisorReserve, airdrop, teamReserve, advisorReserve, airdrop",False
hasClosed(),"token, PUBLIC_CROWDSALE_SOFT_CAP",False
