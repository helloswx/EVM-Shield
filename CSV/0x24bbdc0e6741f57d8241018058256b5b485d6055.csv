Function Name,State Variables Modified,Can Transfer Ether
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
"transfer(address,uint)",,False
"approve(address,uint)",,False
"transferFrom(address,address,uint)",,False
enableWhitelist(),,False
"setMaximumInvest(address,uint)",,False
constructor(),owner,True
"constructor(bytes32,bytes32,uint,uint,uint)","symbol, name, decimals, priceRate, minimumInvest, decimals, owner, owner, owner, owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint)",,True
"approve(address,uint)",,True
"transferFrom(address,address,uint)",,True
"allowance(address,address)",,False
enableWhitelist(),,False
disableWhitelist(),,False
getWhitelist(),,False
getBalances(),,False
getBalancesAndMaxLimit(),,False
closeCrowdsale(),,False
safeWithdrawal(),,True
immediateWithdrawal(),,True
burnTokens(uint),"owner, owner, owner",False
mintTokens(uint),"owner, owner, owner",False
transferOwnership(address),"owner, owner, owner",True
"setMaximumInvest(address,uint)",,False
setMinimumInvest(uint),minimumInvest,False
setPriceRate(uint),priceRate,False
"function()payableonlyWhitelistpublic{require(!crowdsaleClosed);uintamount=msg.value;require(amount>=minimumInvest);require(amount.div(priceRate)>0);require(maxInvestLimitList[msg.sender]>=amount||maxInvestLimitList[msg.sender]==0);uinttoken_amount=(amount.div(priceRate))*10**18;amountRaised=amountRaised.add(amount);balances[owner]=balances[owner].sub(token_amount);balances[msg.sender]=balances[msg.sender].add(token_amount);emitTransfer(owner,msg.sender,token_amount);}()","minimumInvest, priceRate, priceRate, owner, owner, owner",True
