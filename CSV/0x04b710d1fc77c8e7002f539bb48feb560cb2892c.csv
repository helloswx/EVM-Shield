Function Name,State Variables Modified,Can Transfer Ether
getVersion(),,False
"init(,bytes32,uint256,,address,bytes16)",,False
"getSponsor(,uint)",,True
"submitVote(,bytes32,bytes)",,True
"submitProxyVote(,,bytes)",,False
"setEndTime(,uint64)",,False
getNextPrice(bytes32),,False
noteBallotDeployed(bytes32),,False
upgradeMe(address),,False
"getDArbitraryData(,bytes32,bytes)",,False
constructor(address),_payTo,False
payoutAll(),,False
constructor(address),,False
setPayTo(address),,False
getPayTo(),,False
constructor(),owner,True
setOwner(address),owner,False
reclaimToken(),owner,False
getNextPrice(bytes32),commBallotPriceWei,False
noteBallotDeployed(bytes32),"upgrades, ballotLog",True
upgradeMe(address),"upgrades, upgrades",True
getBallotLogN(address),ballotLog,False
setPriceWei(uint),commBallotPriceWei,False
controller(),,False
constructor(),,True
isAdmin(address),currAdminEpoch,False
getAdminLogN(),,False
getAdminLog(uint),,False
upgradeMeAdmin(address),owner,True
"setAdmin(address,bool)",owner,True
incAdminEpoch(),"currAdminEpoch, currAdminEpoch",True
"constructor(bytes32,,)","ensNode, ens, resolver",False
setAddr(address),,False
returnToOwner(),"ens, ensNode, owner",False
fwdToENS(bytes),ens,True
fwdToResolver(bytes),resolver,True
constructor(),,False
"setPermissions(address,bool)",,False
"upgradePermissionedSC(address,address)",,False
upgradeMe(address),,True
hasPermissions(address),,False
doLockdown(),adminLockdown,False
getUpgradePointer(),,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
getVersion(),,False
getNamespace(),,False
getBBLibVersion(),,False
getNBallots(),,False
"initBallot(bytes32,uint256,,address,bytes24)",,False
sponsor(uint),,False
"submitVote(uint,bytes32,bytes)",,False
"submitProxyVote(,bytes)",,False
"getDetails(uint,address)",,False
"getVote(uint,uint)",,False
getTotalSponsorship(uint),,False
getSponsorsN(uint),,False
"getSponsor(uint,uint)",,False
getCreationTs(uint),,False
"revealSeckey(uint,bytes32)",,False
"setEndTime(uint,uint64)",,False
setDeprecated(uint),,False
"setBallotOwner(uint,address)",,False
constructor(),,False
getVersion(),,False
getNamespace(),,False
getBBLibVersion(),,False
getNBallots(),,False
"initBallot(bytes32,uint256,,address,bytes24)",,False
sponsor(uint),,False
"submitVote(uint,bytes32,bytes)",,True
"submitProxyVote(,bytes)",,False
"getDetails(uint,address)",,False
"getVote(uint,uint)",,True
"getSequenceNumber(uint,address)",,False
getTotalSponsorship(uint),,False
getSponsorsN(uint),,False
"getSponsor(uint,uint)",,False
getCreationTs(uint),,False
"revealSeckey(uint,bytes32)",,False
"setEndTime(uint,uint64)",,False
setDeprecated(uint),,False
"setBallotOwner(uint,address)",,False
addBBFarm(),,False
"setABackend(bytes32,address)",,False
"deprecateBBFarm(uint8,)",,False
getPayments(),,False
getBackend(),,False
getBBFarm(uint8),,False
getBBFarmID(bytes4),,False
getCommAuction(),,False
"dInit(address,bool)",,False
"setDEditor(bytes32,address,bool)",,False
setDNoEditors(bytes32),,False
"setDOwner(bytes32,address)",,False
dOwnerErc20Claim(bytes32),,False
"setDErc20(bytes32,address)",,False
"dAddCategory(bytes32,bytes32,bool,uint)",,False
"dDeprecateCategory(bytes32,uint)",,False
dUpgradeToPremium(bytes32),,False
dDowngradeToBasic(bytes32),,False
"dSetArbitraryData(bytes32,bytes,bytes)",,False
"dSetCommunityBallotsEnabled(bytes32,bool)",,False
dDisableErc20OwnerClaim(bytes32),,False
"dAddBallot(bytes32,uint,uint256)",,False
"dDeployCommunityBallot(bytes32,bytes32,bytes32,uint128)",,False
"dDeployBallot(bytes32,bytes32,bytes32,uint256)",,False
"constructor(,,,,)",ensOwnerPx,False
doUpgrade(address),"ensOwnerPx, ensOwnerPx",False
addBBFarm(),,False
"setABackend(bytes32,address)",,False
"deprecateBBFarm(uint8,)",,False
getPayments(),,False
getBackend(),,False
getBBFarm(uint8),,False
getBBFarmID(bytes4),,False
getCommAuction(),,False
getVersion(),,False
"dInit(address,bool)",,True
"setDEditor(bytes32,address,bool)",,False
setDNoEditors(bytes32),,False
"setDOwner(bytes32,address)",,False
dOwnerErc20Claim(bytes32),,True
"setDErc20(bytes32,address)",,False
"dAddCategory(bytes32,bytes32,bool,uint)",,False
"dDeprecateCategory(bytes32,uint)",,False
dUpgradeToPremium(bytes32),,False
dDowngradeToBasic(bytes32),,False
"dSetArbitraryData(bytes32,bytes,bytes)",,True
"dSetCommunityBallotsEnabled(bytes32,bool)",,False
dDisableErc20OwnerClaim(bytes32),,False
"dAddBallot(bytes32,uint,uint256)",,False
"dDeployCommunityBallot(bytes32,bytes32,bytes32,uint128)",,True
"dDeployBallot(bytes32,bytes32,bytes32,uint256)",,False
getGDemocsN(),,False
getGDemoc(uint),,False
getGErc20ToDemocs(address),,False
"dAdd(bytes32,address,bool)",,False
"emergencySetDOwner(bytes32,address)",,False
"dInit(address,address,bool)",,False
"setDOwner(bytes32,address)",,False
"setDOwnerFromClaim(bytes32,address)",,False
"setDEditor(bytes32,address,bool)",,False
setDNoEditors(bytes32),,False
"setDErc20(bytes32,address)",,False
"dSetArbitraryData(bytes32,bytes,bytes)",,False
"dSetEditorArbitraryData(bytes32,bytes,bytes)",,False
"dAddCategory(bytes32,bytes32,bool,uint)",,False
"dDeprecateCategory(bytes32,uint)",,False
"dSetCommunityBallotsEnabled(bytes32,bool)",,False
dDisableErc20OwnerClaim(bytes32),,False
"dAddBallot(bytes32,uint,uint256,bool)",,False
getDOwner(bytes32),,False
"isDEditor(bytes32,address)",,False
getDHash(bytes13),,False
getDInfo(bytes32),,False
getDErc20(bytes32),,False
"getDArbitraryData(bytes32,bytes)",,False
"getDEditorArbitraryData(bytes32,bytes)",,False
getDBallotsN(bytes32),,False
"getDBallotID(bytes32,uint)",,False
getDCountedBasicBallotsN(bytes32),,False
"getDCountedBasicBallotID(bytes32,uint256)",,False
getDCategoriesN(bytes32),,False
"getDCategory(bytes32,uint)",,False
getDCommBallotsEnabled(bytes32),,False
getDErc20OwnerClaimEnabled(bytes32),,False
constructor(),,False
getVersion(),,False
getGDemocsN(),,False
getGDemoc(uint),,False
getGErc20ToDemocs(address),,False
"dAdd(bytes32,address,bool)",,True
"emergencySetDOwner(bytes32,address)",,False
"dInit(address,address,bool)",,False
"setDOwner(bytes32,address)",,False
"setDOwnerFromClaim(bytes32,address)",,False
"setDEditor(bytes32,address,bool)",,False
setDNoEditors(bytes32),,False
"setDErc20(bytes32,address)",,False
"dSetArbitraryData(bytes32,bytes,bytes)",,False
"dSetEditorArbitraryData(bytes32,bytes,bytes)",,False
"dAddCategory(bytes32,bytes32,bool,uint)",,False
"dDeprecateCategory(bytes32,uint)",,False
"dSetCommunityBallotsEnabled(bytes32,bool)",,False
dDisableErc20OwnerClaim(bytes32),,False
"dAddBallot(bytes32,uint,uint256,bool)",,False
getDOwner(bytes32),,False
"isDEditor(bytes32,address)",,False
getDHash(bytes13),,False
getDInfo(bytes32),,False
getDErc20(bytes32),,False
"getDArbitraryData(bytes32,bytes)",,False
"getDEditorArbitraryData(bytes32,bytes)",,False
getDBallotsN(bytes32),,False
"getDBallotID(bytes32,uint256)",,False
getDCountedBasicBallotsN(bytes32),,False
"getDCountedBasicBallotID(bytes32,uint256)",,False
getDCategoriesN(bytes32),,False
"getDCategory(bytes32,uint)",,False
getDCommBallotsEnabled(bytes32),,False
getDErc20OwnerClaimEnabled(bytes32),,False
emergencySetOwner(address),,False
weiBuysHowManySeconds(uint),,False
weiToCents(uint),,False
centsToWei(uint),,False
payForDemocracy(bytes32),,False
doFreeExtension(bytes32),,False
downgradeToBasic(bytes32),,False
upgradeToPremium(bytes32),,False
accountInGoodStanding(bytes32),,False
getSecondsRemaining(bytes32),,False
getPremiumStatus(bytes32),,False
getFreeExtension(bytes32),,False
getAccount(bytes32),,False
getDenyPremium(bytes32),,False
"giveTimeToDemoc(bytes32,uint,bytes32)",,False
setPayTo(address),,False
setMinorEditsAddr(address),,False
setBasicCentsPricePer30Days(uint),,False
setBasicBallotsPer30Days(uint),,False
setPremiumMultiplier(uint8),,False
setWeiPerCent(uint),,False
"setFreeExtension(bytes32,bool)",,False
"setDenyPremium(bytes32,bool)",,False
setMinWeiForDInit(uint),,False
getBasicCentsPricePer30Days(),,False
getBasicExtraBallotFeeWei(),,False
getBasicBallotsPer30Days(),,False
getPremiumMultiplier(),,False
getPremiumCentsPricePer30Days(),,False
getWeiPerCent(),,False
getUsdEthExchangeRate(),,False
getMinWeiForDInit(),,False
getPaymentLogN(),,False
getPaymentLog(uint),,False
emergencySetOwner(address),"emergencyAdmin, owner",True
constructor(address),emergencyAdmin,False
getVersion(),,False
function()payablepublic{_getPayTo().transfer(msg.value);}(),,True
weiBuysHowManySeconds(uint),,False
weiToCents(uint),,False
centsToWei(uint),,False
payForDemocracy(bytes32),,True
doFreeExtension(bytes32),,False
downgradeToBasic(bytes32),,False
upgradeToPremium(bytes32),,False
accountInGoodStanding(bytes32),,False
getSecondsRemaining(bytes32),,False
getPremiumStatus(bytes32),,False
getFreeExtension(bytes32),,False
getAccount(bytes32),,False
getDenyPremium(bytes32),,False
"giveTimeToDemoc(bytes32,uint,bytes32)",,False
setPayTo(address),,False
setMinorEditsAddr(address),minorEditsAddr,False
setBasicCentsPricePer30Days(uint),,False
setBasicBallotsPer30Days(uint),,False
setPremiumMultiplier(uint8),,False
setWeiPerCent(uint),,False
"setFreeExtension(bytes32,bool)",,False
"setDenyPremium(bytes32,bool)",,False
setMinWeiForDInit(uint),,False
getBasicCentsPricePer30Days(),,False
getBasicExtraBallotFeeWei(),,False
getBasicBallotsPer30Days(),,False
getPremiumMultiplier(),,False
getPremiumCentsPricePer30Days(),,False
getWeiPerCent(),,False
getUsdEthExchangeRate(),,False
getMinWeiForDInit(),,False
getPaymentLogN(),,False
getPaymentLog(uint),,False
"setSubnodeOwner(bytes32,bytes32,address)",,False
"setResolver(bytes32,address)",,False
"setOwner(bytes32,address)",,False
"setTTL(bytes32,uint64)",,False
owner(bytes32),,False
resolver(bytes32),,False
ttl(bytes32),,False
"setSubnodeOwner(bytes32,bytes32,address)",,False
"setResolver(bytes32,address)",,False
"setOwner(bytes32,address)",,False
"setTTL(bytes32,uint64)",,False
owner(bytes32),,False
resolver(bytes32),,False
ttl(bytes32),,False
constructor(),ens,False
"setAddr(bytes32,address)",,False
"setContent(bytes32,bytes32)",,False
"setName(bytes32,string)",,False
"setABI(bytes32,uint256,bytes)",,False
"setPubkey(bytes32,bytes32,bytes32)",,False
"setText(bytes32,string,string)",,False
"text(bytes32,string)",,False
pubkey(bytes32),,False
"ABI(bytes32,uint256)",,False
name(bytes32),,False
content(bytes32),,False
addr(bytes32),,False
supportsInterface(bytes4),,False
