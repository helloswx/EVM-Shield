Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"nfsPoolTransfer(address,uint256)","nfsPoolLeft, nfsPoolLeft",True
"function()publicpayable{require(0.0001ether<=msg.value,""min limit eth 0.0001"");require(sPeriodEndDate>=now,""Sell tokens all periods ended"");uint256tokensCount;uint256ethUsdRate=oracle.getEthUsdRate();boolisSecondPeriodNow=now>=sPerDate;boolisSecondPeriodTokensLimitReached=soldTokensCount>=(totalSupply_-sPeriodSoldTokensLimit-nfsPoolCount);if(isSecondPeriodNow||isSecondPeriodTokensLimitReached){tokensCount=msg.value*ethUsdRate/tokenSecondPeriodPrice;}else{tokensCount=msg.value*ethUsdRate/tokenStartPrice;uint256sPeriodTokensCount=reminderCalc(soldTokensCount+tokensCount,totalSupply_-sPeriodSoldTokensLimit-nfsPoolCount);if(sPeriodTokensCount>0){tokensCount-=sPeriodTokensCount;uint256weiLeft=sPeriodTokensCount*tokenStartPrice/ethUsdRate;tokensCount+=weiLeft*ethUsdRate/tokenSecondPeriodPrice;}}require(tokensCount>0,""tokens count must be positive"");require((soldTokensCount+tokensCount)<=(totalSupply_-nfsPoolCount),""tokens limit"");balances[msg.sender]+=tokensCount;soldTokensCount+=tokensCount;emitTransfer(address(0),msg.sender,tokensCount);}()","sPeriodEndDate, oracle, sPerDate, soldTokensCount, sPeriodSoldTokensLimit, nfsPoolCount, ethUsdRate, tokenSecondPeriodPrice, ethUsdRate, tokenStartPrice, soldTokensCount, sPeriodSoldTokensLimit, nfsPoolCount, tokenStartPrice, ethUsdRate, ethUsdRate, tokenSecondPeriodPrice, soldTokensCount, nfsPoolCount, soldTokensCount",True
setOracleAddress(address),oracle,False
"transfer(address,uint256)",transfersAllowDate,True
"transferFrom(address,address,uint256)",transfersAllowDate,True
update(uint256),ethUsdRate,False
getEthUsdRate(),ethUsdRate,False
constructor(),"name, symbol, decimals, decimals, tokenStartPrice, nfsPoolCount, decimals, nfsPoolLeft, nfsPoolCount, tokenSecondPeriodPrice, sPerDate, sPeriodEndDate, sPeriodSoldTokensLimit, nfsPoolCount, decimals, transfersAllowDate",True
getCurrentPhase(),"sPerDate, soldTokensCount, sPeriodSoldTokensLimit, nfsPoolCount, transfersAllowDate, sPeriodEndDate",True
getIsSecondPhaseByTime(),sPerDate,False
getRemainingDaysToSecondPhase(),sPerDate,False
getRemainingDaysToThirdPhase(),transfersAllowDate,True
getIsSecondPhaseEndedByTime(),sPeriodEndDate,False
getIsSecondPhaseBySoldedTokens(),"soldTokensCount, sPeriodSoldTokensLimit, nfsPoolCount",False
getIsThirdPhase(),transfersAllowDate,True
getBalance(address),,False
getWeiBalance(),,False
"EthToOwner(address,uint)",,True
