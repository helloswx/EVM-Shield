Function Name,State Variables Modified,Can Transfer Ether
constructor(),superAdmin,True
transferSuperAdminOwnership(address),"superAdmin, superAdmin",False
transferCanaryOwnership(address),"canary, canary",False
addValidator(address),"validators, validators, qtyValidators",False
revokeValidator(address),"validators, validators, qtyValidators, qtyValidators",False
addInitiator(address),"initiators, initiators, qtyInitiators",False
revokeInitiator(address),"initiators, initiators, qtyInitiators",False
setLogicContract(address),logic_contract,False
"function()payablepublic{addresstarget=logic_contract;assembly{letptr:=mload(0x40)calldatacopy(ptr,0,calldatasize)letresult:=delegatecall(gas,target,ptr,calldatasize,0,0)letsize:=returndatasizereturndatacopy(ptr,0,size)switchresultcase0{revert(ptr,size)}case1{return(ptr,size)}}}()",logic_contract,True
constructor(),"qtyInitiators, qtyValidators",False
setScoringThreshold(uint),,False
"propose(bytes32,string)","proposals, maxValidators, proposals",True
getIpfsAddress(bytes32),ipfsAddresses,False
getProposedIpfs(bytes32),proposals,False
howManyVoters(bytes32),proposals,False
"vote(bytes32,bool)","proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, ipfsAddresses, ipfsAddresses, proposals, ipfsAddresses",True
getTotalQtyIpfsAddresses(),,False
getOneByOneRootHash(uint),,False
isConsensusObtained(uint),"qtyValidators, qtyValidators",False
getProposals(uint),proposals,False
getTimestampProposal(bytes32),proposals,False
getQtyValidators(),qtyValidators,False
getValidatorAddress(int),validators,False
getStatusForRootHash(bytes32),ipfsAddresses,False
