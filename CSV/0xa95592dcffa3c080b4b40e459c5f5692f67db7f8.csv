Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
totalSupply(),,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
"ElyERC20(uint256,string,uint8,string,bool,bool)","standard, locked, name, symbol, decimals, creationBlock",True
"transfer(address,uint256)",locked,True
"approve(address,uint256)",locked,False
"increaseApproval(address,uint)",locked,False
"decreaseApproval(address,uint)",locked,False
"transferFrom(address,address,uint256)",locked,True
"MintingERC20(uint256,uint256,string,uint8,string,bool,bool)","standard, minters, maxSupply",True
addMinter(address),minters,False
removeMinter(address),minters,False
"mint(address,uint256)","locked, maxSupply",False
"ElyToken(address,bool)","bountyAddress, standard, maxSupply, decimals, decimals, bountyAddress",False
setICO(address),ico,False
setPrivateSale(address),privateSale,False
setLockupContract(address),lockupContract,False
setLocked(bool),locked,False
freezing(bool),"ico, ico, ico, transferFrozen",True
"mint(address,uint256)","owner, ico, ico",True
"transferAllowed(address,uint256)","transferFrozen, lockupContract",True
"transfer(address,uint)","bountyAddress, bountyAddress, lockupContract",True
"transferFrom(address,address,uint)","bountyAddress, bountyAddress, lockupContract",True
burnTokens(uint256),"maxSupply, maxSupply, maxSupply",False
"burnInvestorTokens(address,uint256)",,False
Multivest(),,False
setAllowedMultivest(address),allowedMultivests,False
unsetAllowedMultivest(address),allowedMultivests,False
"multivestBuy(address,uint256)",,False
"multivestBuy(address,uint8,bytes32,bytes32)",,True
"SellableToken(address,address,address,uint256,uint256)","token, etherHolder, compensationAddress, token, etherPriceInUSD, maxTokenSupply, priceUpdateAt",False
"function()publicpayable{require(true==whitelist[msg.sender]&&buy(msg.sender,msg.value)==true);}()",whitelist,True
setTokenContract(address),token,False
isActive(),"maxTokenSupply, soldTokens, maxTokenSupply",False
withinPeriod(),"startTime, endTime",False
setEtherHolder(address),etherHolder,False
"updateWhitelist(address,bool)",whitelist,False
"mint(address,uint256)",,False
setEtherPriceInUSD(string),,False
setEtherInUSD(string),,False
"ICO(address,address,address,uint256,uint256)","tiers, DECIMALS, tiers, DECIMALS, tiers, DECIMALS, tiers, DECIMALS, startTime, endTime",False
setPrivateSale(address),privateSale,False
setLockupContract(address),lockupContract,False
"changePreICODates(uint256,uint256)","tiers, PRE_ICO_TIER",False
"changeICODates(uint8,uint256,uint256)","tiers, tiers, ICO_TIER_FIRST, startTime, ICO_TIER_LAST, endTime",False
burnUnsoldTokens(),"tiers, PRE_ICO_TIER, preICOStats, token, tiers, PRE_ICO_TIER, preICOStats, preICOStats, endTime, maxTokenSupply, soldTokens, token, maxTokenSupply, soldTokens, maxTokenSupply, soldTokens",False
transferEthers(),,True
transferCompensationEthers(),compensationAddress,True
getActiveTier(),"tiers, tiers, tiers, tiers",False
"calculateTokensAmount(uint256,bool)","tiers, endTime, startTime, PRE_ICO_TIER, etherPriceInUSD, tiers, minPurchase, minPurchase, etherPriceInUSD, DECIMALS, tiers",False
calculateEthersAmount(uint256),"tiers, endTime, startTime, PRE_ICO_TIER, tiers, minPurchase, tiers, etherPriceInUSD",False
getMinEthersInvestment(),"minPurchase, etherPriceInUSD",False
getStats(),"start, startTime, endTime, soldTokens, soldTokens, preICOStats, privateSale, privateSale, maxSupply, maxTokenSupply, minPurchase, softCap, hardCap, tiers, tiers, tiers, tiers, tiers",False
isRefundPossible(),"tiers, startTime, collectedUSD, softCap",False
refund(),"etherBalances, token, icoBalances, icoLockedBalance, lockupContract, icoLockedBalance, etherBalances",True
"PrivateSale(address,address,address,uint256,uint256,uint256,uint256)","startTime, endTime",False
"changeSalePeriod(uint256,uint256)","startTime, endTime",False
burnUnsoldTokens(),"endTime, maxTokenSupply, soldTokens, token, maxTokenSupply, soldTokens, maxTokenSupply, soldTokens",False
calculateTokensAmount(uint256),"etherPriceInUSD, minPurchase, price",False
calculateEthersAmount(uint256),"price, minPurchase, price, etherPriceInUSD",False
getMinEthersInvestment(),"minPurchase, etherPriceInUSD",False
getStats(),"start, startTime, endTime, soldTokens, maxSupply, maxTokenSupply, minPurchase, softCap, hardCap, price",False
"Referral(address,address)","token, tokenHolder",False
setTokenContract(address),token,False
setLockupContract(address),lockupContract,False
setTokenHolder(address),tokenHolder,False
"multivestMint(address,uint256,uint8,bytes32,bytes32)","DECIMALS, claimed, totalSupply, token, totalSupply, totalSupply, claimed, lockupContract",True
claimUnsoldTokens(),"tokenHolder, totalSupply, totalSupply, token, totalSupply, totalSupply",True
"LockupContract(address,address,address)","token, ico, referral",False
setTokenContract(address),token,False
setICO(address),ico,False
setRefferal(address),referral,False
setLockPeriod(uint256),lockPeriod,False
setContributionLockPeriod(uint256),contributionLockPeriod,False
"log(address,uint256)","referral, token, lockedAmount, lockedAmount",True
"decreaseAfterBurn(address,uint256)","ico, lockedContributions, lockedContributions",True
"logLargeContribution(address,uint256)","ico, lockedContributions, lockedContributions",True
"isTransferAllowed(address,uint256)","ico, lockPeriod, token, lockedAmount",False
"checkLargeContributionsLock(address,uint256)","ico, contributionLockPeriod, token, lockedContributions",False
"TokenVesting(address,uint256,uint256,uint256,bool)","beneficiary, revocable, duration, cliff, start",False
release(),"token, released, token, released, token, token, beneficiary",False
revoke(),"revocable, revoked, token, token, token, revoked, token, token, owner",False
releasableAmount(),"token, released, token",False
vestedAmount(),"token, released, token, cliff, start, duration, revoked, token, start, duration",False
"PeriodicTokenVesting(address,uint256,uint256,uint256,uint256,bool)",periods,False
vestedAmount(),"token, released, token, cliff, start, duration, periods, revoked, token, periods, start, duration, periods",False
setICOEndTime(uint256),icoEndTime,False
"vestingMint(,,uint256)",,False
"createVesting(address,uint256,uint256,uint256,uint256,bool)",vestings,False
"revokeVesting(,)",token,False
