Function Name,State Variables Modified,Can Transfer Ether
Owned(),owner,True
transferOwnership(address),"owner, newOwner",False
acceptOwnership(),"newOwner, owner, newOwner, owner, newOwner, newOwner",True
totalSupply(),,False
"mintTokens(address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"allowance(address,address)",,False
"function()publicnoReentrancypayable{require(msg.value!=0);require(crowdsaleState!=state.crowdsaleEnded);boolstateChanged=checkCrowdsaleState();if(crowdsaleState==state.priorityPass){if(contributorList[msg.sender].isActive){processTransaction(msg.sender,msg.value);}else{refundTransaction(stateChanged);}}elseif(crowdsaleState==state.openedPriorityPass){if(contributorList[msg.sender].isActive){processTransaction(msg.sender,msg.value);}else{refundTransaction(stateChanged);}}elseif(crowdsaleState==state.crowdsale){processTransaction(msg.sender,msg.value);}else{refundTransaction(stateChanged);}}()","crowdsaleState, crowdsaleState, contributorList, crowdsaleState, contributorList, crowdsaleState",True
"editContributors(,)","contributorList, contributorList, contributorList, contributorList, contributorIndexes, nextContributorIndex, nextContributorIndex",False
"salvageTokensFromContract(address,address,uint)",,True
withdrawEth(),"ethRaised, minCap, pendingEthWithdrawal",False
pullBalance(),"multisigAddress, pendingEthWithdrawal, multisigAddress, pendingEthWithdrawal, pendingEthWithdrawal",True
claimEthIfFailed(),"crowdsaleEndedTime, ethRaised, minCap, contributorList, contributorList",True
batchReturnEthIfFailed(uint),"crowdsaleEndedTime, ethRaised, minCap, contributorIndexes, contributorList",True
withdrawRemainingBalanceForManualRecovery(),"crowdsaleEndedTime, contributorIndexes, multisigAddress",True
setMultisigAddress(address),multisigAddress,False
setToken(address),,False
claimCoreTeamsTokens(address),"crowdsaleState, ownerHasClaimedTokens, maxTokenSupply, presaleBonusTokensClaimed, presaleBonusTokens, ownerHasClaimedTokens",False
claimPresaleTokens(),"presaleBonusAddress, crowdsaleState, presaleBonusTokensClaimed, presaleBonusAddressColdStorage, presaleBonusTokens, presaleBonusTokensClaimed",True
getTokenAddress(),,False
FutouristCrowdsale(),"presaleStartTime, presaleUnlimitedStartTime, crowdsaleStartTime, crowdsaleEndedTime, minCap, maxCap, maxP1Cap, maxTokenSupply, presaleBonusTokens, presaleBonusAddress, presaleBonusAddressColdStorage",False
