Function Name,State Variables Modified,Can Transfer Ether
constructor(),"owner, AdminAddress, PromotionalAddress",True
setStartTime(uint256),"owner, startCalled, startTime, startCalled",True
setOpenPortalTime(uint256),"owner, openTime, PortalOpen",True
"setFeesAdress(uint,address)","AdminAddress, PromotionalAddress",False
buy(address),"AdminAddress, PromotionalAddress, investors, investorsNumber, investmentsNumber",True
"purchaseFor(address,address)",,False
function()externalpayable{if(msg.value==0){exit();}elseif(msg.value==0.01ether){reinvest();}elseif(msg.value==0.001ether){withdraw();}elseif(msg.value==0.0001ether){faucet();}else{buy(bytes2address(msg.data));}}(),,False
reinvest(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
exit(),tokenBalanceLedger_,True
withdraw(),"payoutsTo_, magnitude, referralBalance_, referralBalance_",True
sell(uint256),"tokenBalanceLedger_, exitFee_, tokenSupply_, tokenSupply_, tokenBalanceLedger_, tokenBalanceLedger_, profitPerShare_, magnitude, payoutsTo_, tokenSupply_, profitPerShare_, profitPerShare_, magnitude, tokenSupply_",True
"transfer(address,uint256)",tokenBalanceLedger_,True
FaucetForInvestor(address),,False
faucet(),investors,True
totalEthereumBalance(),,False
totalSupply(),tokenSupply_,False
myTokens(),,True
myDividends(bool),referralBalance_,True
balanceOf(address),tokenBalanceLedger_,False
dividendsOf(address),"profitPerShare_, tokenBalanceLedger_, payoutsTo_, magnitude",False
sellPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_, exitFee_",False
buyPrice(),"tokenSupply_, tokenPriceInitial_, tokenPriceIncremental_",False
calculateTokensReceived(uint256),,False
calculateEthereumReceived(uint256),"tokenSupply_, exitFee_",False
calculateUntaxedEthereumReceived(uint256),tokenSupply_,False
entryFee(),,False
isStarted(),"startTime, startTime",False
isPortalOpened(),"openTime, openTime",False
