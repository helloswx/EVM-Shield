Function Name,State Variables Modified,Can Transfer Ether
setOwner(address),"owner, owner",False
setSaler(address),"saler, saler",False
pause(),paused,False
unpause(),paused,False
totalSupply(),,False
decimals(),,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),totalSupply,False
decimals(),decimals,False
balanceOf(address),,False
"transfer(address,uint256)",,True
"allowance(address,address)",allowed,False
"approve(address,uint256)",allowed,True
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
burn(uint256),"totalSupply, totalSupply",True
"constructor(address,address,address)","name, symbol, decimals, totalSupply, decimals, addrTeam, addrSale, addrMine, totalSupply, totalSupply, totalSupply, teamLocked",False
"transfer(address,uint256)","addrTeam, tokenAngel, tokenPrivate",True
"transferFrom(address,address,uint256)","addrTeam, tokenAngel, tokenPrivate",True
balanceOfUnlocked(address),"release, release, release, addrTeam, DAY_180, teamLocked, DAY_180, DAY_360, teamLocked, DAY_360, DAY_720, teamLocked, tokenAngel, DAY_120, tokenAngel, DAY_120, DAY_150, tokenAngel, DAY_150, DAY_180, tokenAngel, tokenPrivate, DAY_90, tokenPrivate",True
"transferToken(uint8,address,uint256)","tokenAngel, tokenAngel, tokenPrivate, tokenPrivate, tokenCrowd, tokenCrowd, addrSale, addrSale, addrSale",False
burnToken(uint256),"addrSale, addrSale, totalSupply, totalSupply, addrSale",False
tokenRelease(),"release, release, DAY_10, release",True
"constructor(address,address)","token, beneficiary, token, angelGoal, privGoal, angelSoftCap",False
"function()externalnotPausedpayable{require(stage<Stage.Finalized);updateStageByTime();uint256tokens=msg.value.mul(getPrice());if(stage==Stage.Angel){require(msg.value>=MIN_ANGLE&&angelSaled.add(tokens)<=angelGoal);token.transferToken(0,msg.sender,tokens);angelSaled=angelSaled.add(tokens);recvEthers[msg.sender]=recvEthers[msg.sender].add(msg.value);emitRecvEther(msg.sender,msg.value);}elseif(stage==Stage.Private){require(msg.value>=MIN_PRIV&&privSaled.add(tokens)<=privGoal);token.transferToken(1,msg.sender,tokens);privSaled=privSaled.add(tokens);recvEthers[msg.sender]=recvEthers[msg.sender].add(msg.value);emitRecvEther(msg.sender,msg.value);}elseif(stage==Stage.Crowd){require(privSaled.add(tokens)<=privGoal);token.transferToken(2,msg.sender,tokens);privSaled=privSaled.add(tokens);recvEthers[msg.sender]=recvEthers[msg.sender].add(msg.value);emitRecvEther(msg.sender,msg.value);}updateStageBySaled();if(stage==Stage.Finalized){token.tokenRelease();if(angelSaled<angelGoal){token.burnToken(angelGoal.sub(angelSaled));}if(privSaled<privGoal){token.burnToken(privGoal.sub(privSaled));}}}()","stage, stage, MIN_ANGLE, angelSaled, angelGoal, token, angelSaled, angelSaled, recvEthers, recvEthers, stage, MIN_PRIV, privSaled, privGoal, token, privSaled, privSaled, recvEthers, recvEthers, stage, privSaled, privGoal, token, privSaled, privSaled, recvEthers, recvEthers, stage, token, angelSaled, angelGoal, token, angelGoal, angelSaled, privSaled, privGoal, token, privGoal, privSaled",True
getPrice(),"stage, stage, stage, stageBegin, DAY_10, DAY_10, DAY_20, DAY_20, DAY_30",False
getStageInfo(),"stageBegin, stage, angelGoal, angelSaled, stage, stage, privGoal, privSaled, stageBegin, stageLength, stageBegin, stageLength, stage",False
setStageLength(uint256),"stageBegin, stageLength",False
withdrawEther(uint256),"beneficiary, beneficiary",True
refundEther(),"stage, recvEthers, recvEthers",True
