Function Name,State Variables Modified,Can Transfer Ether
Ownable(),owner,True
transferOwnership(address),"owner, owner",False
pause(),paused,False
unpause(),paused,False
"receiveApproval(address,uint256,address,bytes)",,False
"transferFrom(address,address,uint256)","allowance, allowance",True
"transfer(address,uint256)",,True
"mintToken(address,uint256)","balances, totalSupply",False
"approve(address,uint256)",allowance,True
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),"balances, balances, totalSupply",True
"burnFrom(address,uint256)","balances, allowance, balances, allowance, totalSupply",True
balanceOf(address),balances,False
"allowance(address,address)",allowance,False
JWCToken(),"totalSupply, tokenPreSale, tokenPublicSale, tokenReserve, tokenTeamSupporter, tokenAdvisorPartners",False
setIcoContract(address),icoContract,False
"sell(address,uint256)","icoContract, balances, balances",True
"payBonusAffiliate(address,uint256)","icoContract, balances, balances, totalSupply, totalSupply",True
Bonus(),isBonus,False
enableBonus(),"isBonus, isBonus",False
disableBonus(),"isBonus, isBonus",False
getTimeBonus(),"phasePresale_From, phasePresale_To, phasePublicSale1_From, phasePublicSale1_To, phasePublicSale2_From, phasePublicSale2_To, phasePublicSale3_From, phasePublicSale3_To",False
getBonusByETH(uint256),"decimals, decimals, decimals, decimals, decimals",False
balanceBonusOf(address),bonusAccountBalances,False
payBonus(),,False
Affiliate(),"isAffiliate, affiliateLevel, affiliateRate",False
enableAffiliate(),"isAffiliate, isAffiliate",False
disableAffiliate(),"isAffiliate, isAffiliate",False
getAffiliateLevel(),affiliateLevel,False
setAffiliateLevel(uint256),affiliateLevel,False
getReferrerAddress(address),referral,False
getRefereeAddress(address),"referralCount, referralCount, referral, referralIndex, referralIndex",False
"setReferralAddress(address,address)","referralIndex, referralCount, referral, referralCount, referralBalance",False
getAffiliateRate(uint256),affiliateRate,False
"setAffiliateRate(uint256,uint256)",affiliateRate,False
balanceAffiliateOf(address),referralBalance,False
payAffiliate(),,False
IcoContract(address),"tokenAddress, tokenAddress, totalTokenSale, tokenRemainPreSale, tokenRemainPublicSale, isFinalized",False
changeETH2Token(uint256),"maxGasRefund, minContribution, tokenRemainPreSale, tokenRemainPublicSale",False
"function()publicpayablewhenNotPaused{require(!isFinalized);require(msg.sender!=address(0));uint256etherRecev=msg.value+maxGasRefund;require(etherRecev>=minContribution);tokenExchangeRate=getTokenExchangeRate();uint256tokens=etherRecev.mul(tokenExchangeRate);uint256phaseICO=getCurrentICOPhase();require(phaseICO!=0);uint256tokenRemain=0;if(phaseICO==1){tokenRemain=tokenRemainPreSale;}elseif(phaseICO==2||phaseICO==3||phaseICO==4){tokenRemain=tokenRemainPublicSale;}require(tokenRemain>0);if(tokenRemain<tokens){uint256tokensToRefund=tokens.sub(tokenRemain);uint256etherToRefund=tokensToRefund/tokenExchangeRate;msg.sender.transfer(etherToRefund);tokens=tokenRemain;etherRecev=etherRecev.sub(etherToRefund);tokenRemain=0;}else{tokenRemain=tokenRemain.sub(tokens);}if(phaseICO==1){tokenRemainPreSale=tokenRemain;}elseif(phaseICO==2||phaseICO==3||phaseICO==4){tokenRemainPublicSale=tokenRemain;}ccc.sell(msg.sender,tokens);ethFundDeposit.transfer(this.balance);if(isBonus){uint256bonusAmountETH=getBonusByETH(etherRecev);uint256bonusAmountTokens=bonusAmountETH.mul(tokenExchangeRate);if(maxAmountBonus>0){if(maxAmountBonus>=bonusAmountTokens){maxAmountBonus-=bonusAmountTokens;}else{bonusAmountTokens=maxAmountBonus;maxAmountBonus=0;}}else{bonusAmountTokens=0;}uint256bonusTimeToken=tokens.mul(getTimeBonus())/100;if(maxTimeBonus>0){if(maxTimeBonus>=bonusTimeToken){maxTimeBonus-=bonusTimeToken;}else{bonusTimeToken=maxTimeBonus;maxTimeBonus=0;}}else{bonusTimeToken=0;}if(bonusAccountBalances[msg.sender]==0){bonusAccountIndex[bonusAccountCount]=msg.sender;bonusAccountCount++;}uint256bonusTokens=bonusAmountTokens+bonusTimeToken;bonusAccountBalances[msg.sender]=bonusAccountBalances[msg.sender].add(bonusTokens);}if(isAffiliate){addresschild=msg.sender;for(uint256i=0;i<affiliateLevel;i++){uint256giftToken=affiliateRate[i].mul(tokens)/100;if(maxAffiliate<=0){break;}else{if(maxAffiliate>=giftToken){maxAffiliate-=giftToken;}else{giftToken=maxAffiliate;maxAffiliate=0;}}addressparent=referral[child];if(parent!=address(0x00)){referralBalance[child]=referralBalance[child].add(giftToken);}child=parent;}}}()","isFinalized, maxGasRefund, minContribution, tokenExchangeRate, tokenExchangeRate, tokenRemainPreSale, tokenRemainPublicSale, tokenExchangeRate, tokenRemainPreSale, tokenRemainPublicSale, ethFundDeposit, isBonus, tokenExchangeRate, maxAmountBonus, maxAmountBonus, maxAmountBonus, maxAmountBonus, maxAmountBonus, maxTimeBonus, maxTimeBonus, maxTimeBonus, maxTimeBonus, maxTimeBonus, bonusAccountBalances, bonusAccountIndex, bonusAccountCount, bonusAccountCount, bonusAccountBalances, bonusAccountBalances, isAffiliate, affiliateLevel, affiliateRate, maxAffiliate, maxAffiliate, maxAffiliate, maxAffiliate, maxAffiliate, referral, referralBalance, referralBalance",True
payAffiliate(),"indexPaidAffiliate, referralCount, referralCount, indexPaidAffiliate, referralIndex",False
payAffiliate1Address(address),"referral, referralBalance, referralBalance",False
payBonus(),"indexPaidBonus, bonusAccountCount, bonusAccountCount, indexPaidBonus, bonusAccountIndex",False
payBonus1Address(address),"bonusAccountBalances, bonusAccountBalances",False
finalize(),"isFinalized, isFinalized, ethFundDeposit",True
getTokenExchangeRate(),"tokenExchangeRate, phasePresale_To, phasePresale_From, phasePublicSale3_To",False
getCurrentICOPhase(),"phasePresale_From, phasePresale_To, phasePublicSale1_From, phasePublicSale1_To, phasePublicSale2_From, phasePublicSale2_To, phasePublicSale3_From, phasePublicSale3_To",False
getTokenSold(),"tokenRemainPreSale, tokenRemainPreSale, tokenRemainPublicSale",False
setTokenExchangeRate(uint256),tokenExchangeRate,False
setMinContribution(uint256),minContribution,False
setEthFundDeposit(address),ethFundDeposit,False
setMaxGasRefund(uint256),maxGasRefund,False
