Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"allowance(address,address)",,False
burn(uint256),"totalSupply, totalSupply",True
ACLManaged(),,False
setOpsAddress(address),opsAddress,False
setAdminAddress(address),adminAddress,False
isOwner(address),owner,False
isOps(address),opsAddress,False
isOpsOrAdmin(address),"opsAddress, adminAddress",False
isOwnerOrOpsOrAdmin(address),"opsAddress, adminAddress, owner",False
Ledger(),"tokenContract, canClaimPresaleTokens, canClaimPartnerTokens, canClaimPresaleBonusTokensPhase1, canClaimPresaleBonusTokensPhase2, canClaimPartnerBonusTokensPhase1, canClaimPartnerBonusTokensPhase2",False
function()externalpayable{claimTokens();}(),,False
"revokeAllocation(address,uint8)","presaleAllocations, presaleAllocations, presaleAllocations, partnerAllocations, partnerAllocations, partnerAllocations, tokenContract, totalPrivateAllocation, totalPrivateAllocation, totalPrivateAllocation, tokenContract, crowdsaleContract",True
"addAllocation(address,uint256,uint256,uint8)","presaleAllocations, presaleAllocations, presaleAllocations, partnerAllocations, partnerAllocations, partnerAllocations, totalPrivateAllocation, totalPrivateAllocation",False
claimTokens(),"presaleAllocations, canClaimPresaleTokens, partnerAllocations, canClaimPartnerTokens, tokenContract, tokenContract",True
claimBonus(),"presaleAllocations, canClaimPresaleBonusTokensPhase1, partnerAllocations, canClaimPartnerBonusTokensPhase1, canClaimPresaleBonusTokensPhase2, canClaimPartnerBonusTokensPhase2, tokenContract, tokenContract",True
setCanClaimPresaleTokens(bool),"canClaimPresaleTokens, canClaimPresaleTokens",True
setCanClaimPartnerTokens(bool),"canClaimPartnerTokens, canClaimPartnerTokens",True
setCanClaimPresaleBonusTokensPhase1(bool),"canClaimPresaleBonusTokensPhase1, canClaimPresaleBonusTokensPhase1",True
setCanClaimPresaleBonusTokensPhase2(bool),"canClaimPresaleBonusTokensPhase2, canClaimPresaleBonusTokensPhase2",True
setCanClaimPartnerBonusTokensPhase1(bool),"canClaimPartnerBonusTokensPhase1, canClaimPartnerBonusTokensPhase1",True
setCanClaimPartnerBonusTokensPhase2(bool),"canClaimPartnerBonusTokensPhase2, canClaimPartnerBonusTokensPhase2",True
setCrowdsaleContract(),"crowdsaleContract, crowdsaleContract, crowdsaleContract",True
"Crowdsale(,,address)","START_TIMESTAMP, END_TIMESTAMP, TOKEN_SALE_SUPPLY, MIN_CONTRIBUTION_WEIS, MAX_CONTRIBUTION_WEIS, INITIAL_TOKENS_PER_ETHER, ledgerContract, tokenContract, startTimestamp, endTimestamp, tokensPerEther, minContribution, maxContribution, wallet, totalTokensSold, weiRaised, isFinalized",False
setTokensPerEther(uint256),"tokensPerEther, tokensPerEther, tokensPerEther",True
setStartTimestamp(uint256),"endTimestamp, startTimestamp, startTimestamp, startTimestamp",True
setEndTimestamp(uint256),"startTimestamp, endTimestamp, endTimestamp, endTimestamp",True
updateWallet(address),"wallet, wallet, wallet",True
setMinContribution(uint256),"maxContribution, minContribution, minContribution, minContribution",True
setMaxContribution(uint256),"minContribution, maxContribution, maxContribution, maxContribution",True
function()externalpayable{purchaseTokens();}(),,False
"revokePresale(address,uint8)","ledgerContract, totalTokensSold, totalTokensSold, totalTokensSold",False
"addPresale(address,uint256,uint256,uint8)","J8T_DECIMALS_FACTOR, J8T_DECIMALS_FACTOR, tokenContract, ledgerContract, tokenContract, ledgerContract, totalTokensSold, totalTokensSold, tokenContract",True
purchaseTokens(),"hasContributed, minContribution, maxContribution, totalTokensSold, TOKEN_SALE_SUPPLY, TOKEN_SALE_SUPPLY, totalTokensSold, tokensPerEther, J8T_DECIMALS_FACTOR, ETH_DECIMALS_FACTOR, ETH_DECIMALS_FACTOR, totalTokensSold, totalTokensSold, tokensPerEther, weiRaised, weiRaised, tokenContract, wallet, hasContributed, totalTokensSold, TOKEN_SALE_SUPPLY",True
"updateWhitelist(address,)",whitelist,True
"updateWhitelist_batch(,)",whitelist,True
currentTime(),,False
saleHasFinished(),"isFinalized, endTimestamp, totalTokensSold, TOKEN_SALE_SUPPLY",False
finalize(),,False
saleSupply(),tokenContract,False
