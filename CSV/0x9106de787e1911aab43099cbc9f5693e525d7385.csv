Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),"owner, owner",False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transferAndCall(address,uint,bytes)",,False
constructor(address),wallet,False
"function()publicpayable{require(contributionStarted,""Contribution phase hasn't started"");require(whitelist[msg.sender],""You are not whitelisted"");contribute(msg.sender,msg.value);wallet.transfer(msg.value);}()","contributionStarted, whitelist, wallet",True
"setContribution(address,uint256)",,True
whitelistWallet(address),"locked, whitelist",False
startContribution(),"contributionStarted, contributionStarted",False
"setOwnerShare(address,uint256)","locked, distributionActive, owners, whitelist, totalOwners, totalOwners, valuation",False
"sendOwnership(address,uint256)","owners, owners, distributionActive, precisionMinimum, valuation, whitelist, totalOwners, totalOwners, valuation",True
lockShares(),"locked, locked",False
distributeTokens(address),"distributionActive, distributionActive, tokenBalance, distributionMinimum, totalDistributions, distributions, totalDistributions, totalReturned, totalDistributions",False
claimTokens(address),"owners, distributions, totalDistributions, distributionActive, tokenBalance, tokenBalance, totalDistributions, distributionActive, totalOwners",False
"withdrawTokens(address,uint256)","owners, distributions, totalDistributions, distributionActive, tokenBalance, tokenBalance",True
setDistributionMinimum(uint256),distributionMinimum,False
setEthWallet(address),wallet,False
isWhitelisted(address),whitelist,False
getOwnerBalance(address),owners,True
getOwner(address),owners,False
getCurrentOwners(),,False
getOwnerAddress(uint),,False
"hasClaimed(address,uint256)",distributions,False
