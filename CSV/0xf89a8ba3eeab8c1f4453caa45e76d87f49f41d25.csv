Function Name,State Variables Modified,Can Transfer Ether
transferOwnership(address),"owner, owner",False
constructor(),authorized,True
"setAuthorized(address,bool)",authorized,False
"setBlocked(address,bool)",blocked,False
start(),started,False
stop(),started,False
balanceOf(address),,False
"transfer(address,uint256)",,False
"allowance(address,address)",,False
"transferFrom(address,address,uint256)",,False
"approve(address,uint256)",,False
"transfer(address,uint256)",,True
balanceOf(address),,False
"transferFrom(address,address,uint256)","allowed, allowed, allowed",True
"approve(address,uint256)",allowed,True
"allowance(address,address)",allowed,False
"increaseApproval(address,uint)","allowed, allowed, allowed",True
"decreaseApproval(address,uint)","allowed, allowed, allowed, allowed",True
getMyFreeCoin(address),,False
"transfer(address,uint256)",,True
"transferCustom(address,uint256,uint256)",,True
"transferFrom(address,address,uint256)",,True
"approve(address,uint256)",,True
"increaseApproval(address,uint)",allowed,True
"decreaseApproval(address,uint)",,False
"approveAndCall(address,uint256,bytes)",,True
burn(uint256),,True
"burnFrom(address,uint256)","allowed, allowed, allowed",True
"originTransfer(address,uint256)",,True
originBurn(uint256),,False
ETH(uint),,False
EUR(uint),,False
updatedAt(uint),,False
constructor(),"totalSupply, decimals, initialSupply, totalSupply, totalSupply, price",True
"function()publicpayable{uint256am=msg.value;if(now>=firstSaleStart&&now<=firstSaleEnd){uint256token=TokenToSend(am,3);if(token<=firstSale){addLog(msg.sender,now,token,1);transferFunction(owner,msg.sender,token);firstSale=firstSale.sub(token);investorToken=investorToken.add(token);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token);uint256tm=token/10**uint256(decimals);addLogRefund(msg.sender,now,am,token,tm.mul(3).div(100));}else{revert();}}elseif(now>=preICOStart&&now<=preICOEnd){uint256token1=TokenToSend(am,4);if(token1<=preICO){addLog(msg.sender,now,token1,2);transferFunction(owner,msg.sender,token1);investorToken=investorToken.add(token1);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token1);preICO=preICO.sub(token1);addLogRefund(msg.sender,now,am,token1,(token1/10**uint(decimals)).mul(4).div(100));}else{revert();}}elseif(now>=ICOStep1&&now<=ICOStep1E){uint256token2=TokenToSend(am,5);if((icoLog[msg.sender].add(token2))<=maxICOToken&&token2<=ICO){icoLog[msg.sender]=icoLog[msg.sender].add(token2);addLog(msg.sender,now,token2,3);transferFunction(owner,msg.sender,token2);investorToken=investorToken.add(token2);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token2);ICO=ICO.sub(token2);addLogRefund(msg.sender,now,am,token2,(token2/10**uint(decimals)).mul(5).div(100));}else{revert();}}elseif(now>=ICOStep2&&now<=ICOStep2E){uint256token3=TokenToSend(am,6);if((icoLog[msg.sender].add(token3))<=maxICOToken&&token3<=ICO){icoLog[msg.sender]=icoLog[msg.sender].add(token3);addLog(msg.sender,now,token3,3);transferFunction(owner,msg.sender,token3);investorToken=investorToken.add(token3);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token3);ICO=ICO.sub(token3);addLogRefund(msg.sender,now,am,token3,(token3/10**uint(decimals)).mul(6).div(100));}else{revert();}}elseif(now>=ICOStep3&&now<=ICOStep3E){uint256token4=TokenToSend(am,7);if((icoLog[msg.sender].add(token4))<=maxICOToken&&token4<=ICO){icoLog[msg.sender]=icoLog[msg.sender].add(token4);addLog(msg.sender,now,token4,3);transferFunction(owner,msg.sender,token4);investorToken=investorToken.add(token4);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token4);ICO=ICO.sub(token4);addLogRefund(msg.sender,now,am,token4,(token4/10**uint(decimals)).mul(7).div(100));}else{revert();}}elseif(now>=ICOStep4&&now<=ICOStep4E){uint256token5=TokenToSend(am,8);if((icoLog[msg.sender].add(token5))<=maxICOToken&&token5<=ICO){icoLog[msg.sender]=icoLog[msg.sender].add(token5);addLog(msg.sender,now,token5,3);transferFunction(owner,msg.sender,token5);investorToken=investorToken.add(token5);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token5);ICO=ICO.sub(token5);addLogRefund(msg.sender,now,am,token5,(token5/10**uint(decimals)).mul(8).div(100));}else{revert();}}elseif(now>=ICOStepEnd&&now<=ICOEnd){uint256token6=TokenToSend(am,10);if(ICOFinal<=0){ICOFinal=firstSale.add(preICO).add(ICO);firstSale=0;preICO=0;ICO=0;}if((icoLog[msg.sender].add(token6))<=maxICOToken&&token6<=ICOFinal){icoLog[msg.sender]=icoLog[msg.sender].add(token6);addLog(msg.sender,now,token6,3);transferFunction(owner,msg.sender,token6);ICOFinal=ICOFinal.sub(token6);investorToken=investorToken.add(token6);investorLogToken[msg.sender]=investorLogToken[msg.sender].add(token6);addLogRefund(msg.sender,now,am,token6,(token6/10**uint(decimals)).mul(10).div(100));}else{revert();}}else{revert();}}()","firstSaleStart, firstSaleEnd, firstSale, owner, firstSale, firstSale, investorToken, investorToken, decimals, preICOStart, preICOEnd, preICO, owner, investorToken, investorToken, preICO, preICO, decimals, ICOStep1, ICOStep1E, maxICOToken, ICO, owner, investorToken, investorToken, ICO, ICO, decimals, ICOStep2, ICOStep2E, maxICOToken, ICO, owner, investorToken, investorToken, ICO, ICO, decimals, ICOStep3, ICOStep3E, maxICOToken, ICO, owner, investorToken, investorToken, ICO, ICO, decimals, ICOStep4, ICOStep4E, maxICOToken, ICO, owner, investorToken, investorToken, ICO, ICO, decimals, ICOStepEnd, ICOEnd, ICOFinal, ICOFinal, firstSale, preICO, ICO, firstSale, preICO, ICO, maxICOToken, ICOFinal, owner, ICOFinal, ICOFinal, investorToken, investorToken, decimals",True
firstWithdraw(),"investorWithdraw, firstWithdrawA, ICOEnd, totalEarned, softCap, price, softCap, firstWithdrawA, teamWallet, decimals, ICOFinal, ICOFinal, teamWallet, owner, teamWallet",True
withdraw(),"investorWithdraw, firstWithdrawA, secondWithdrawTime, lastWithdrawTime, teamWallet",True
_modTapProposal(uint256),"ICOEnd, TotalAgreeVotes, TotalDisagreeVotes, tempTap",False
Armageddon(),"ICOEnd, TotalAgreeVotes, TotalDisagreeVotes",False
"_customProposal(string,uint256)","ICOEnd, TotalAgreeVotes, TotalDisagreeVotes",False
_ProposalVote(bool),,False
_tallyingVotes(),"proposalNumber, proposalNumber",False
burnout(string),burnoutActive,True
getBurnout(uint256),"burnoutLog, burnoutLog, burnoutLog, burnoutLog",False
refundEther(uint),"investorWithdraw, withdrawPrice, owner, decimals, decimals, totalEarned, totalEarned",True
"addBitcoin(uint256,uint256)","totalBitcoinReceived, totalBitcoinReceived, totalEarned, totalEarned",False
"removeBitcoin(uint256,uint256)","totalBitcoinReceived, totalBitcoinReceived, totalEarned, totalEarned",False
historyOfProposal(uint256),,False
