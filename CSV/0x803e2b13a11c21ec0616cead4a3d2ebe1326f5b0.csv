Function Name,State Variables Modified,Can Transfer Ether
"transferFrom(address,address,uint)",,False
"burnFrom(address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"transfer(address,uint)",,False
"transferFrom(address,address,uint)",,False
"approve(address,uint)",,False
"allowance(address,address)",,False
decimals(),,False
"getSanityRate(,)",,False
"handleFees(uint,address,address)",,False
"getExpectedRate(,,uint)",,False
PermissionGroups(),admin,True
getOperators(),operatorsGroup,False
getAlerters(),alertersGroup,False
transferAdmin(address),"pendingAdmin, pendingAdmin",False
claimAdmin(),"pendingAdmin, pendingAdmin, admin, admin, pendingAdmin, pendingAdmin",True
addAlerter(address),"alerters, alerters, alertersGroup",False
removeAlerter(address),"alerters, alerters, alertersGroup, alertersGroup, alertersGroup, alertersGroup, alertersGroup, alertersGroup",False
addOperator(address),"operators, operators, operatorsGroup",False
removeOperator(address),"operators, operators, operatorsGroup, operatorsGroup, operatorsGroup, operatorsGroup, operatorsGroup, operatorsGroup",False
"withdrawToken(,uint,address)",,True
"withdrawEther(uint,address)",,True
"ExpectedRate(,address)","kyberNetwork, admin",False
setQuantityFactor(uint),"quantityFactor, quantityFactor",True
setMinSlippageFactor(uint),"minSlippageFactorInBps, minSlippageFactorInBps",True
"getExpectedRate(,,uint)","quantityFactor, kyberNetwork, kyberNetwork, quantityFactor, minSlippageFactorInBps",False
VolumeImbalanceRecorder(address),admin,False
"setTokenControlInfo(,uint,uint,uint)",tokenControlInfo,False
getTokenControlInfo(),"tokenControlInfo, tokenControlInfo, tokenControlInfo",False
ConversionRates(address),,False
addToken(),"tokenData, tokenData, listedTokens, numTokensInCurrentCompactData, tokenRatesCompactData, tokenData, tokenRatesCompactData, tokenData, numTokensInCurrentCompactData, numTokensInCurrentCompactData, numTokensInCurrentCompactData, NUM_TOKENS_IN_COMPACT_DATA",False
"setCompactData(,,uint,)","BYTES_14_OFFSET, tokenRatesCompactData, tokenRatesCompactData",False
"setBaseRate(,,,,,uint,)","tokenData, tokenData, tokenData",False
"setQtyStepFunction(,,,,)","tokenData, tokenData, tokenData",False
"setImbalanceStepFunction(,,,,)","tokenData, tokenData, tokenData",False
setValidRateDurationInBlocks(uint),validRateDurationInBlocks,False
enableTokenTrade(),"tokenData, tokenControlInfo, tokenData",False
disableTokenTrade(),"tokenData, tokenData",False
setReserveAddress(address),reserveContract,False
"recordImbalance(,int,uint,uint)",reserveContract,True
"getRate(,uint,bool,uint)","tokenData, tokenControlInfo, tokenRatesCompactData, tokenData, validRateDurationInBlocks, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData",False
"getBasicRate(,bool)","tokenData, tokenData",False
getCompactData(),"tokenData, tokenData, tokenRatesCompactData, tokenRatesCompactData",False
getTokenBasicData(),"tokenData, tokenData",False
"getStepFunctionData(,uint,uint)","tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData, tokenData",False
getRateUpdateBlock(),"tokenRatesCompactData, tokenData",False
getListedTokens(),listedTokens,False
KyberNetwork(address),admin,False
"function()publicpayable{require(isReserve[msg.sender]);EtherReceival(msg.sender,msg.value);}()",isReserve,True
"trade(,uint,,address,uint,uint,address)","enabled, ETH_TOKEN_ADDRESS",True
"addReserve(,bool)","isReserve, reserves, isReserve, isReserve, reserves, reserves, reserves, reserves, reserves, reserves",False
"listPairForReserve(address,,,bool)","perReserveListedPairs, ETH_TOKEN_ADDRESS",False
"setParams(,,,uint,uint)","whiteListContract, expectedRateContract, feeBurnerContract, maxGasPrice, negligibleRateDiff",False
setEnable(bool),"whiteListContract, feeBurnerContract, expectedRateContract, enabled",False
getNumReserves(),reserves,False
getReserves(),reserves,False
"getBalance(,address)",ETH_TOKEN_ADDRESS,False
"findBestRate(,,uint)","reserves, perReserveListedPairs, reserves, reserves, negligibleRateDiff",False
"getExpectedRate(,,uint)","expectedRateContract, expectedRateContract",False
getUserCapInWei(address),whiteListContract,False
"KyberReserve(address,,address)","kyberNetwork, conversionRatesContract, admin, tradeEnabled",False
"function()publicpayable{DepositToken(ETH_TOKEN_ADDRESS,msg.value);}()",ETH_TOKEN_ADDRESS,False
"trade(,uint,,address,uint,bool)","tradeEnabled, kyberNetwork",True
enableTrade(),tradeEnabled,False
disableTrade(),tradeEnabled,False
"approveWithdrawAddress(,address,bool)",approvedWithdrawAddresses,False
"withdraw(,uint,address)","approvedWithdrawAddresses, ETH_TOKEN_ADDRESS",True
"setContracts(address,,)","kyberNetwork, conversionRatesContract, sanityRatesContract, kyberNetwork, conversionRatesContract, sanityRatesContract",False
getBalance(),ETH_TOKEN_ADDRESS,False
getDecimals(),ETH_TOKEN_ADDRESS,False
"getDestQty(,,uint,uint)",,False
"getSrcQty(,,uint,uint)",,False
"getConversionRate(,,uint,uint)","tradeEnabled, ETH_TOKEN_ADDRESS, ETH_TOKEN_ADDRESS, conversionRatesContract, sanityRatesContract, sanityRatesContract",False
WhiteList(address),admin,False
getUserCapInWei(address),"userCategory, categoryCap, weiPerSgd",False
"setUserCategory(address,uint)",userCategory,False
"setCategoryCap(uint,uint)",categoryCap,False
setSgdToEthRate(uint),weiPerSgd,False
"FeeBurner(address,)","admin, knc",False
"setReserveData(address,uint,address)","reserveFeesInBps, reserveKNCWallet",False
"setWalletFees(address,uint)",walletFeesInBps,False
setKyberNetwork(address),kyberNetwork,False
setKNCRate(uint),kncPerETHRate,False
"handleFees(uint,address,address)","kyberNetwork, kncPerETHRate, reserveFeesInBps, walletFeesInBps, reserveFeeToWallet, reserveFeeToBurn",True
burnReserveFees(address),"reserveFeeToBurn, reserveFeeToBurn, knc, reserveKNCWallet",True
"sendFeeToWallet(address,address)","reserveFeeToWallet, reserveFeeToWallet, knc, reserveKNCWallet",True
SanityRates(address),admin,False
"setReasonableDiff(,)",reasonableDiffInBps,False
"setSanityRates(,)",tokenRate,False
"getSanityRate(,)","ETH_TOKEN_ADDRESS, ETH_TOKEN_ADDRESS, ETH_TOKEN_ADDRESS, PRECISION, PRECISION, tokenRate, tokenRate, reasonableDiffInBps",False
