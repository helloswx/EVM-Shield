Function Name,State Variables Modified,Can Transfer Ether
destructor(),,False
disableSelfDestruction(),selfDestructionDisabled,True
triggerSelfDestruction(),selfDestructionDisabled,True
destructor(),deployer,False
setDeployer(address),"deployer, deployer, deployer",False
setOperator(address),"operator, operator, operator",False
setServiceActivationTimeout(uint256),serviceActivationTimeout,False
registerService(address),,False
registerServiceDeferred(address),"serviceActivationTimeout, serviceActivationTimeout",False
deregisterService(address),"registeredServicesMap, registeredServicesMap",False
"enableServiceAction(address,string)","registeredServicesMap, registeredServicesMap, registeredServicesMap, registeredServicesMap",False
"disableServiceAction(address,string)","registeredServicesMap, registeredServicesMap",False
isRegisteredService(address),registeredServicesMap,False
isRegisteredActiveService(address),registeredServicesMap,False
"isEnabledServiceAction(address,string)",registeredServicesMap,False
abs(int256),,False
neg(int256),,False
toNonZeroInt256(uint256),,False
toInt256(uint256),,False
toUInt256(int256),,False
isNonZeroPositiveInt256(int256),,False
isPositiveInt256(int256),,False
isNonZeroNegativeInt256(int256),,False
isNegativeInt256(int256),,False
"clamp(int256,int256,int256)",,False
"clampMin(int256,int256)",,False
"clampMax(int256,int256)",,False
PARTS_PER(),,False
constructor(address),updateDelayBlocksByBlockNumber,False
setOperationalModeExit(),operationalMode,False
isOperationalModeNormal(),operationalMode,False
isOperationalModeExit(),operationalMode,False
updateDelayBlocks(),updateDelayBlocksByBlockNumber,False
updateDelayBlocksCount(),updateDelayBlocksByBlockNumber,False
"setUpdateDelayBlocks(uint256,uint256)",updateDelayBlocksByBlockNumber,False
confirmationBlocks(),confirmationBlocksByBlockNumber,False
confirmationBlocksCount(),confirmationBlocksByBlockNumber,False
"setConfirmationBlocks(uint256,uint256)",confirmationBlocksByBlockNumber,False
tradeMakerFeesCount(),tradeMakerFeeByBlockNumber,False
"tradeMakerFee(uint256,int256)",tradeMakerFeeByBlockNumber,False
"setTradeMakerFee(uint256,int256,,)",tradeMakerFeeByBlockNumber,False
tradeTakerFeesCount(),tradeTakerFeeByBlockNumber,False
"tradeTakerFee(uint256,int256)",tradeTakerFeeByBlockNumber,False
"setTradeTakerFee(uint256,int256,,)",tradeTakerFeeByBlockNumber,False
paymentFeesCount(),paymentFeeByBlockNumber,False
"paymentFee(uint256,int256)",paymentFeeByBlockNumber,False
"setPaymentFee(uint256,int256,,)",paymentFeeByBlockNumber,False
"currencyPaymentFeesCount(address,uint256)",currencyPaymentFeeByBlockNumber,False
"currencyPaymentFee(uint256,address,uint256,int256)","currencyPaymentFeeByBlockNumber, currencyPaymentFeeByBlockNumber",False
"setCurrencyPaymentFee(uint256,address,uint256,int256,,)",currencyPaymentFeeByBlockNumber,False
tradeMakerMinimumFeesCount(),tradeMakerMinimumFeeByBlockNumber,False
tradeMakerMinimumFee(uint256),tradeMakerMinimumFeeByBlockNumber,False
"setTradeMakerMinimumFee(uint256,int256)",tradeMakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFeesCount(),tradeTakerMinimumFeeByBlockNumber,False
tradeTakerMinimumFee(uint256),tradeTakerMinimumFeeByBlockNumber,False
"setTradeTakerMinimumFee(uint256,int256)",tradeTakerMinimumFeeByBlockNumber,False
paymentMinimumFeesCount(),paymentMinimumFeeByBlockNumber,False
paymentMinimumFee(uint256),paymentMinimumFeeByBlockNumber,False
"setPaymentMinimumFee(uint256,int256)",paymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFeesCount(address,uint256)",currencyPaymentMinimumFeeByBlockNumber,False
"currencyPaymentMinimumFee(uint256,address,uint256)","currencyPaymentMinimumFeeByBlockNumber, currencyPaymentMinimumFeeByBlockNumber",False
"setCurrencyPaymentMinimumFee(uint256,address,uint256,int256)",currencyPaymentMinimumFeeByBlockNumber,False
"feeCurrenciesCount(address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"feeCurrency(uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
"setFeeCurrency(uint256,address,uint256,address,uint256)",feeCurrencyByCurrencyBlockNumber,False
walletLockTimeout(),walletLockTimeoutByBlockNumber,False
"setWalletLockTimeout(uint256,uint256)",walletLockTimeoutByBlockNumber,False
cancelOrderChallengeTimeout(),cancelOrderChallengeTimeoutByBlockNumber,False
"setCancelOrderChallengeTimeout(uint256,uint256)",cancelOrderChallengeTimeoutByBlockNumber,False
settlementChallengeTimeout(),settlementChallengeTimeoutByBlockNumber,False
"setSettlementChallengeTimeout(uint256,uint256)",settlementChallengeTimeoutByBlockNumber,False
fraudStakeFraction(),fraudStakeFractionByBlockNumber,False
"setFraudStakeFraction(uint256,uint256)",fraudStakeFractionByBlockNumber,False
walletSettlementStakeFraction(),walletSettlementStakeFractionByBlockNumber,False
"setWalletSettlementStakeFraction(uint256,uint256)",walletSettlementStakeFractionByBlockNumber,False
operatorSettlementStakeFraction(),operatorSettlementStakeFractionByBlockNumber,False
"setOperatorSettlementStakeFraction(uint256,uint256)",operatorSettlementStakeFractionByBlockNumber,False
operatorSettlementStake(),operatorSettlementStakeByBlockNumber,False
"setOperatorSettlementStake(uint256,int256,address,uint256)",operatorSettlementStakeByBlockNumber,False
setEarliestSettlementBlockNumber(uint256),"earliestSettlementBlockNumberUpdateDisabled, earliestSettlementBlockNumber, earliestSettlementBlockNumber",False
disableEarliestSettlementBlockNumberUpdate(),earliestSettlementBlockNumberUpdateDisabled,False
setConfiguration(),"configuration, configuration",False
"receiveEthersTo(address,string)",,False
"receiveTokensTo(address,string,int256,address,uint256,string)",,False
registerBeneficiary(),"beneficiary, beneficiaryIndexByAddress, beneficiaries, beneficiary, beneficiaryIndexByAddress, beneficiaries, beneficiary",False
deregisterBeneficiary(),"beneficiary, beneficiaryIndexByAddress, beneficiaryIndexByAddress, beneficiaries, beneficiaries, beneficiaries, beneficiaries, beneficiaryIndexByAddress, beneficiaries, beneficiaries, beneficiaryIndexByAddress, beneficiary",False
isRegisteredBeneficiary(),"beneficiaryIndexByAddress, beneficiary",False
registeredBeneficiariesCount(),beneficiaries,False
authorizeInitialService(address),"initialServiceAuthorizationDisabled, registeredServicesMap, initialServiceAuthorizedMap",True
disableInitialServiceAuthorization(),initialServiceAuthorizationDisabled,False
authorizeRegisteredService(address),"registeredServicesMap, initialServiceAuthorizedMap, serviceWalletAuthorizedMap",True
unauthorizeRegisteredService(address),"registeredServicesMap, initialServiceAuthorizedMap, initialServiceWalletUnauthorizedMap, serviceWalletAuthorizedMap, serviceWalletActionList, serviceActionWalletAuthorizedMap, serviceWalletActionList",True
"isAuthorizedRegisteredService(address,address)",serviceWalletAuthorizedMap,False
"authorizeRegisteredServiceAction(address,string)","registeredServicesMap, registeredServicesMap, initialServiceAuthorizedMap, serviceWalletAuthorizedMap, serviceActionWalletAuthorizedMap, serviceActionWalletTouchedMap, serviceActionWalletTouchedMap, serviceWalletActionList",True
"unauthorizeRegisteredServiceAction(address,string)","registeredServicesMap, registeredServicesMap, initialServiceAuthorizedMap, serviceActionWalletAuthorizedMap",True
"isAuthorizedRegisteredServiceAction(address,string,address)","serviceWalletAuthorizedMap, serviceActionWalletAuthorizedMap",False
isFungible(),,False
standard(),,False
"receive(address,address,uint256,address,uint256)",,False
"approve(address,uint256,address,uint256)",,False
"dispatch(address,address,uint256,address,uint256)",,False
getReceiveSignature(),,False
getApproveSignature(),,False
getDispatchSignature(),,False
constructor(address),,False
"registerTransferController(string,address)",registeredTransferControllers,False
"reassociateTransferController(string,string,address)","registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers, registeredTransferControllers",False
"registerCurrency(address,string)","registeredCurrencies, registeredCurrencies",False
deregisterCurrency(address),"registeredCurrencies, registeredCurrencies, registeredCurrencies",False
blacklistCurrency(address),"registeredCurrencies, registeredCurrencies",False
whitelistCurrency(address),"registeredCurrencies, registeredCurrencies",False
"transferController(address,string)","registeredTransferControllers, registeredTransferControllers, registeredCurrencies, registeredCurrencies, registeredTransferControllers, registeredCurrencies",True
setTransferControllerManager(),"transferControllerManager, transferControllerManager",True
"clamp(uint256,uint256,uint256)",,False
"clampMin(uint256,uint256)",,False
"clampMax(uint256,uint256)",,False
constructor(address),"depositedBalanceType, DEPOSITED_BALANCE_TYPE, settledBalanceType, SETTLED_BALANCE_TYPE, stagedBalanceType, STAGED_BALANCE_TYPE, _allBalanceTypes, settledBalanceType, _allBalanceTypes, depositedBalanceType, _allBalanceTypes, stagedBalanceType, _activeBalanceTypes, settledBalanceType, _activeBalanceTypes, depositedBalanceType",False
"get(address,bytes32,address,uint256)",walletMap,False
"getByIndices(address,bytes32,address,uint256,uint256,uint256)",walletMap,False
"getAll(address,bytes32,address,uint256)",walletMap,False
"idsCount(address,bytes32,address,uint256)",walletMap,False
"hasId(address,bytes32,int256,address,uint256)",walletMap,False
"set(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"setIds(address,bytes32,,address,uint256)",walletMap,False
"add(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"sub(address,bytes32,int256,address,uint256,bool)","walletMap, walletMap",False
"hasInUseCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"hasEverUsedCurrency(address,bytes32,address,uint256)","walletMap, walletMap",False
"fungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"fungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"fungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastFungibleRecord(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordsCount(address,bytes32,address,uint256)",walletMap,False
"nonFungibleRecordByIndex(address,bytes32,address,uint256,uint256)",walletMap,False
"nonFungibleRecordByBlockNumber(address,bytes32,address,uint256,uint256)",walletMap,False
"lastNonFungibleRecord(address,bytes32,address,uint256)",walletMap,False
trackedBalanceTypesCount(),trackedBalanceTypes,False
trackedWalletsCount(),trackedWallets,False
allBalanceTypes(),_allBalanceTypes,False
activeBalanceTypes(),_activeBalanceTypes,False
"trackedWalletsByIndices(uint256,uint256)","trackedWallets, trackedWallets, trackedWallets",False
setBalanceTracker(),"balanceTrackerFrozen, balanceTracker, balanceTracker",False
freezeBalanceTracker(),balanceTrackerFrozen,False
constructor(address),"depositTransactionType, DEPOSIT_TRANSACTION_TYPE, withdrawalTransactionType, WITHDRAWAL_TRANSACTION_TYPE",False
"add(address,bytes32,int256,address,uint256)","transactionLogByWalletType, transactionLogByWalletType, transactionLogByWalletType, transactionLogByWalletType, transactionLogByWalletType, transactionLogByWalletType, transactionLogByWalletType",False
"count(address,bytes32)",transactionLogByWalletType,False
"getByIndex(address,bytes32,uint256)",transactionLogByWalletType,False
"getByBlockNumber(address,bytes32,uint256)",,False
"countByCurrency(address,bytes32,address,uint256)",transactionLogByWalletType,False
"getByCurrencyIndex(address,bytes32,address,uint256,uint256)","transactionLogByWalletType, transactionLogByWalletType",False
"getByCurrencyBlockNumber(address,bytes32,address,uint256,uint256)",,False
setTransactionTracker(),"transactionTrackerFrozen, transactionTracker, transactionTracker",False
freezeTransactionTracker(),transactionTrackerFrozen,False
constructor(address),,False
"lockFungibleByProxy(address,address,int256,address,uint256,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks, walletFungibleLocks, lockedCurrencyLockerFungibleLockIndex, walletCurrencyFungibleLockCount, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, walletFungibleLocks, configuration",False
"lockNonFungibleByProxy(address,address,,address,uint256,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks, lockedCurrencyLockerNonFungibleLockIndex, walletCurrencyNonFungibleLockCount, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, walletNonFungibleLocks, configuration",False
"unlockFungible(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks",False
"unlockFungibleByProxy(address,address,address,uint256)",lockedCurrencyLockerFungibleLockIndex,False
"unlockNonFungible(address,address,address,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks",False
"unlockNonFungibleByProxy(address,address,address,uint256)",lockedCurrencyLockerNonFungibleLockIndex,False
fungibleLocksCount(address),walletFungibleLocks,False
nonFungibleLocksCount(address),walletNonFungibleLocks,False
"lockedAmount(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, walletFungibleLocks, walletFungibleLocks",False
"lockedIdsCount(address,address,address,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks",False
"lockedIdsByIndices(address,address,address,uint256,uint256,uint256)","lockedCurrencyLockerNonFungibleLockIndex, walletNonFungibleLocks, walletNonFungibleLocks",False
isLocked(address),"walletFungibleLocks, walletNonFungibleLocks",False
"isLocked(address,address,uint256)","walletCurrencyFungibleLockCount, walletCurrencyNonFungibleLockCount",False
"isLocked(address,address,address,uint256)","lockedCurrencyLockerFungibleLockIndex, lockedCurrencyLockerNonFungibleLockIndex",False
setWalletLocker(),"walletLockerFrozen, walletLocker, walletLocker",False
freezeWalletLocker(),walletLockerFrozen,False
closeAccrualPeriod(),,False
"transfer(address,uint256)",,False
"approve(address,uint256)",,False
"transferFrom(address,address,uint256)",,False
totalSupply(),,False
balanceOf(address),,False
"allowance(address,address)",,False
totalSupply(),_totalSupply,False
balanceOf(address),_balances,False
"allowance(address,address)",_allowed,False
"transfer(address,uint256)",,True
"approve(address,uint256)",,True
"transferFrom(address,address,uint256)",_allowed,True
"increaseAllowance(address,uint256)",_allowed,True
"decreaseAllowance(address,uint256)",_allowed,True
isMinter(address),_minters,False
addMinter(address),,False
renounceMinter(),,True
"mint(address,uint256)",,False
disableMinting(),mintingDisabled,False
"mint(address,uint256)","mintingDisabled, holdersMap, holdersMap, holders",False
"transfer(address,uint256)","holdersMap, holdersMap, holders",True
"approve(address,uint256)",,True
"transferFrom(address,address,uint256)","holdersMap, holdersMap, holders",True
"balanceBlocksIn(address,uint256,uint256)","balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balances, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlocks, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlocks, balanceBlockNumbers, balances, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers, balanceBlocks, balanceBlockNumbers, balanceBlockNumbers, balanceBlockNumbers",False
balanceUpdatesCount(address),balanceBlocks,False
holdersCount(),holders,False
"holdersByIndices(uint256,uint256,bool)","holders, holders, holders, holders, holders",False
constructor(address),,False
setToken(),"token, token, token",False
setBeneficiary(address),"beneficiary, beneficiary",False
"defineReleases(,,)","token, totalLockedAmount, token, totalLockedAmount, releases",False
releasesCount(),releases,False
"setReleaseBlockNumber(uint256,uint256)","releases, releases",False
release(uint256),"releases, executedReleasesCount, totalLockedAmount, token, beneficiary",False
constructor(address),,False
release(uint256),,False
"releasedAmountBlocksIn(uint256,uint256)","executedReleasesCount, releases, executedReleasesCount, releases, executedReleasesCount, totalReleasedAmounts, executedReleasesCount, releases, releases, totalReleasedAmountBlocks, releases, executedReleasesCount, releases, totalReleasedAmountBlocks, executedReleasesCount, totalReleasedAmounts, executedReleasesCount, releases, executedReleasesCount, releases, totalReleasedAmountBlocks, releases, releases, releases",False
releaseBlockNumbers(uint256),releases,False
constructor(address),,False
setRevenueTokenManager(),"revenueTokenManager, revenueTokenManager, revenueTokenManager",False
"function()externalpayable{receiveEthersTo(msg.sender,"""");}()",,True
"receiveEthersTo(address,string)","periodAccrual, aggregateAccrual, periodCurrencies, aggregateCurrencies, txHistory",False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)","periodAccrual, aggregateAccrual, periodCurrencies, aggregateCurrencies, txHistory",True
"periodAccrualBalance(address,uint256)",periodAccrual,False
"aggregateAccrualBalance(address,uint256)",aggregateAccrual,False
periodCurrenciesCount(),periodCurrencies,False
"periodCurrenciesByIndices(uint256,uint256)",periodCurrencies,False
aggregateCurrenciesCount(),aggregateCurrencies,False
"aggregateCurrenciesByIndices(uint256,uint256)",aggregateCurrencies,False
depositsCount(),txHistory,False
deposit(uint),txHistory,False
"stagedBalance(address,address,uint256)",stagedByWallet,False
closeAccrualPeriod(),"periodAccrual, accrualBlockNumbersByCurrency, aggregateAccrualAmountByCurrencyBlockNumber, periodAccrual, periodCurrencies, aggregateAccrualAmountByCurrencyBlockNumber",False
"claimAndTransferToBeneficiary(,address,string,address,uint256,string)","beneficiary, beneficiary, beneficiary",True
"claimAndStage(address,uint256)",stagedByWallet,True
"withdraw(int256,address,uint256,string)","stagedByWallet, stagedByWallet",True
constructor(address),serviceActivationTimeout,False
setTokenHolderRevenueFund(),"tokenHolderRevenueFund, tokenHolderRevenueFund",False
"function()externalpayable{receiveEthersTo(msg.sender,balanceTracker.DEPOSITED_BALANCE_TYPE());}()",balanceTracker,True
"receiveEthersTo(address,string)",,False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)",,True
"updateSettledBalance(address,int256,address,uint256,string,uint256)","balanceTracker, balanceTracker, balanceTracker, balanceTracker, balanceTracker, balanceTracker, balanceTracker, balanceTracker",False
"stage(address,int256,address,uint256,string)","balanceTracker, balanceTracker, balanceTracker",False
"unstage(int256,address,uint256,string)","balanceTracker, balanceTracker",True
"stageToBeneficiary(address,,int256,address,uint256,string)","balanceTracker, beneficiary, beneficiary",True
"transferToBeneficiary(address,,int256,address,uint256,string)","beneficiary, beneficiary",True
"seizeBalances(address,address,uint256,string)","seizedByWallet, seizedByWallet, seizedWallets",True
"withdraw(int256,address,uint256,string)","walletLocker, transactionTracker, transactionTracker",True
isSeizedWallet(address),seizedByWallet,False
seizedWalletsCount(),seizedWallets,False
"claimRevenue(address,string,address,uint256,string)",tokenHolderRevenueFund,False
setClientFund(),"clientFund, clientFund",False
constructor(address),,False
isDoubleSpenderWallet(address),,False
getMaxDriipNonce(),,False
getMaxNullNonce(),maxNullNonce,False
isDataAvailable(),,False
setCommunityVote(),"communityVoteFrozen, communityVote, communityVote",False
freezeCommunityVote(),communityVoteFrozen,False
registerBeneficiary(),beneficiary,False
"registerFractionalBeneficiary(,int256)","totalBeneficiaryFraction, beneficiary, _beneficiaryFractionMap, beneficiary, totalBeneficiaryFraction, totalBeneficiaryFraction, beneficiary",False
deregisterBeneficiary(),"beneficiary, beneficiary, totalBeneficiaryFraction, totalBeneficiaryFraction, _beneficiaryFractionMap, _beneficiaryFractionMap, beneficiary",False
beneficiaryFraction(),"_beneficiaryFractionMap, beneficiary",False
constructor(address),,False
"function()externalpayable{receiveEthersTo(msg.sender,"""");}()",,True
"receiveEthersTo(address,string)","periodAccrual, aggregateAccrual, periodCurrencies, aggregateCurrencies, txHistory",False
"receiveTokens(string,int256,address,uint256,string)",,True
"receiveTokensTo(address,string,int256,address,uint256,string)","periodAccrual, aggregateAccrual, periodCurrencies, aggregateCurrencies, txHistory",True
"periodAccrualBalance(address,uint256)",periodAccrual,False
"aggregateAccrualBalance(address,uint256)",aggregateAccrual,False
periodCurrenciesCount(),periodCurrencies,False
"periodCurrenciesByIndices(uint256,uint256)",periodCurrencies,False
aggregateCurrenciesCount(),aggregateCurrencies,False
"aggregateCurrenciesByIndices(uint256,uint256)",aggregateCurrencies,False
depositsCount(),txHistory,False
deposit(uint),txHistory,False
closeAccrualPeriod(),"totalBeneficiaryFraction, periodAccrual, beneficiaries, beneficiaries, beneficiary, periodAccrual, beneficiary, beneficiary, beneficiary, beneficiary, periodAccrual, beneficiaries, beneficiaries, beneficiary, beneficiary",True
constructor(address),,False
proposalsCount(),proposals,False
"initiateProposal(address,uint256,int256,int256,,uint256,bool)",,False
"terminateProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"terminateProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals",False
"disqualifyProposal(address,,address,uint256,uint256,bytes32,string)","proposalIndexByWalletCurrency, proposals, proposals, configuration, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"hasProposal(address,)",proposalIndexByWalletCurrency,False
"hasProposalTerminated(address,)","proposalIndexByWalletCurrency, proposals",False
"hasProposalExpired(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalReferenceBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDefinitionBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalExpirationTime(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStatus(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStageAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalTargetBalanceAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalWalletInitiated(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationChallenger(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateKind(address,)","proposalIndexByWalletCurrency, proposals",False
constructor(address),,False
setMaxNullNonce(uint256),maxNullNonce,False
"maxNonceByWalletAndCurrency(address,)",walletCurrencyMaxNonce,False
"setMaxNonceByWalletAndCurrency(address,,uint256)",walletCurrencyMaxNonce,False
updateMaxNullNonceFromCommunityVote(),"communityVote, maxNullNonce, maxNullNonce",False
constructor(address),,False
proposalsCount(),proposals,False
"initiateProposal(address,uint256,int256,int256,int256,,uint256,bool,bytes32,string)",,False
"terminateProposal(address,,bool)","proposalIndexByWalletCurrency, proposalIndexByWalletNonceCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"terminateProposal(address,,bool,bool)","proposalIndexByWalletCurrency, proposals, proposalIndexByWalletNonceCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"removeProposal(address,,bool)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"disqualifyProposal(address,,address,uint256,uint256,bytes32,string)","proposalIndexByWalletCurrency, proposals, proposals, configuration, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals",False
"qualifyProposal(address,)","proposalIndexByWalletCurrency, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, proposals, configuration, proposals",False
"hasProposal(address,uint256,)",proposalIndexByWalletNonceCurrency,False
"hasProposal(address,)",proposalIndexByWalletCurrency,False
"hasProposalTerminated(address,)","proposalIndexByWalletCurrency, proposals",False
"hasProposalExpired(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalReferenceBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDefinitionBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalExpirationTime(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStatus(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalCumulativeTransferAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalStageAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalTargetBalanceAmount(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalChallengedHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalChallengedKind(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalWalletInitiated(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationChallenger(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationNonce(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationBlockNumber(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateHash(address,)","proposalIndexByWalletCurrency, proposals",False
"proposalDisqualificationCandidateKind(address,)","proposalIndexByWalletCurrency, proposals",False
constructor(address),,False
setNullSettlementChallengeState(),"nullSettlementChallengeState, nullSettlementChallengeState, nullSettlementChallengeState",False
setNullSettlementState(),"nullSettlementState, nullSettlementState, nullSettlementState",False
setDriipSettlementChallengeState(),"driipSettlementChallengeState, driipSettlementChallengeState, driipSettlementChallengeState",False
"settleNull(address,uint256,string)",,True
"settleNullByProxy(address,address,uint256,string)",,True
