Function Name,State Variables Modified,Can Transfer Ether
constructor(),owner,True
transferOwnership(address),owner,False
"receiveApproval(address,uint256,address,bytes)",,False
"constructor(uint256,uint256,string,string)","totalSupply, initialSupply, reservedForICO, allocatedForICO, balanceOf, reservedForICO, balanceOf, totalSupply, reservedForICO, name, tokenName, symbol, tokenSymbol",True
"transfer(address,uint256)",,True
"transferFrom(address,address,uint256)","safeguard, allowance, allowance, allowance",True
"approve(address,uint256)","safeguard, allowance",True
"approveAndCall(address,uint256,bytes)",safeguard,True
burn(uint256),"safeguard, balanceOf, balanceOf, balanceOf, totalSupply, totalSupply",True
"burnFrom(address,uint256)","safeguard, balanceOf, allowance, balanceOf, balanceOf, allowance, allowance, totalSupply, totalSupply",True
changeWhitelistingStatus(),"whitelistingStatus, whitelistingStatus, whitelistingStatus",False
whitelistUser(address),"whitelistingStatus, whitelisted",False
whitelistManyUsers(),"whitelistingStatus, whitelisted",False
constructor(),,False
"mintToken(address,uint256)","balanceOf, balanceOf, totalSupply, totalSupply",False
"freezeAccount(address,bool)",frozenAccount,False
"function()payableexternal{require(!safeguard);require(!frozenAccount[msg.sender]);require(datePreSale<now&&dateIcoEnd>now);if(whitelistingStatus==true){require(whitelisted[msg.sender]);}if(datePreSale<now&&dateIcoPhase1>now){require(msg.value>=(0.50ether));}uint256token=msg.value.mul(exchangeRate);uint256finalTokens=token.add(calculatePurchaseBonus(token));tokensSold=tokensSold.add(finalTokens);_transfer(address(this),msg.sender,finalTokens);forwardEherToOwner();}()","safeguard, frozenAccount, datePreSale, dateIcoEnd, whitelistingStatus, whitelisted, datePreSale, dateIcoPhase1, exchangeRate, tokensSold, tokensSold",True
"updateCrowdsale(uint256,uint256,uint256,uint256,uint256)","dateIcoEnd, datePreSale, dateIcoPhase1, dateIcoPhase2, dateIcoPhase3, dateIcoEnd",False
stopICO(),dateIcoEnd,False
icoStatus(),"datePreSale, datePreSale, dateIcoPhase1, dateIcoPhase1, dateIcoPhase2, dateIcoPhase2, dateIcoPhase3, dateIcoPhase3, dateIcoEnd",False
setICOExchangeRate(uint256),exchangeRate,False
manualWithdrawToken(uint256),,True
manualWithdrawEther(),owner,True
destructContract(),owner,False
changeSafeguardStatus(),"safeguard, safeguard, safeguard",False
"airdrop(,uint)",,True
